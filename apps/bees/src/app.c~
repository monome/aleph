#include "app.h"
#include "events.h"
#include "menu.h"
#include "scene,h"

void app_handle_event(event_t* e) {
  //// APP 
  switch(e->type) {

  case kEventRefresh:
    screen_refresh();
    break;
    //----- function switches
  case kEventSwitchDown0:
    menu_handleKey(eKeyFnDownA, e.data);
    break;
  case kEventSwitchUp0:
    menu_handleKey(eKeyFnUpA, e.data);
    break;
  case kEventSwitchDown1:
    menu_handleKey(eKeyFnDownB, e.data);
    break;
  case kEventSwitchUp1:
    menu_handleKey(eKeyFnUpB, e.data);
    break;
  case kEventSwitchDown2:
    menu_handleKey(eKeyFnDownC, e.data);
    break;
  case kEventSwitchUp2:
    menu_handleKey(eKeyFnUpC, e.data);
    break;
  case kEventSwitchDown3:
    menu_handleKey(eKeyFnDownD, e.data);
    break;
  case kEventSwitchUp3:
    menu_handleKey(eKeyFnUpD, e.data);
    break;
    /// footswitches
  case kEventSwitchDown6:
    print_dbg("\r\n footswitch1 down");
    break;
  case kEventSwitchUp6:
    print_dbg("\r\n footswitch1 up");
    break;
  case kEventSwitchDown7:
    print_dbg("\r\n footswitch2 down");
    break;
  case kEventSwitchUp7:
    print_dbg("\r\n footswitch2 up");
    break;
    // mode switch
  case kEventSwitchDown4:
    mode ^= 1;
    if(mode) { gpio_set_gpio_pin(LED_MODE_PIN); }
    else { gpio_clr_gpio_pin(LED_MODE_PIN); }
    menu_handleKey(eKeyMode, e.data);
    break;
  case kEventSwitchUp4:
    break;

  case kEventSwitchUp5:
    break;
  case kEventEncoder0:
    //	 print_dbg("\r\n encoder 0");
    if(e.data > 0) {
      menu_handleKey(eKeyEncUpD, e.data);
    } else {
      menu_handleKey(eKeyEncDownD, e.data);
    }
    break;
  case kEventEncoder1:
    //	print_dbg("\r\n encoder 1");
    if(e.data > 0) {
      menu_handleKey(eKeyEncUpC, e.data);
    } else {
      menu_handleKey(eKeyEncDownC, e.data);
    }
    break;
  case kEventEncoder2:
    //	print_dbg("\r\n encoder 2");
    if(e.data > 0) {
      menu_handleKey(eKeyEncUpB, e.data);
    } else {
      menu_handleKey(eKeyEncDownB, e.data);
    }
    break;
  case kEventEncoder3:
    //	print_dbg("\r\n encoder 3");
    if(e.data > 0) {
      menu_handleKey(eKeyEncUpA, e.data);
    } else {
      menu_handleKey(eKeyEncDownA, e.data);
    }
    break;

  case kEventAdc0:
    //	print_dbg("\r\nadc val 0: ");
    //	print_dbg_hex(e.data);
    //	displayAdcVal(0, e.data);
    break;
  case kEventAdc1:
    //	 print_dbg("\r\nadc val 1: ");
    //	 print_dbg_hex(e.data);
    //	 displayAdcVal(1, e.data);
    break;
  case kEventAdc2:
    //	 print_dbg("\r\nadc val 2: ");
    //	 print_dbg_hex(e.data);
    //	 displayAdcVal(2, e.data);
    break;
  case kEventAdc3:
    //     	print_dbg("\r\nadc val 3: ");
    //     	print_dbg_hex(e.data);
    //     	displayAdcVal(3, e.data);
    break;
  }
}


void app_init(void) {
  net_init();
  print_dbg("\r\n net_init");
  
  preset_init();
  print_dbg("\r\n preset_init");

  scene_init();
  print_dbg("\r\n scene_init");

  menu_init();
  print_dbg("\r\n menu_init");
}

void app_launch(void) {
  scene_read_default();
}
