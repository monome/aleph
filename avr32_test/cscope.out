cscope 15 $HOME/aleph/avr32_test -q 0000006764 0000637851
	@conf/aleph_board.h

7 #i‚de‡
_CONF_ALEPH_H_


8 
	#_CONF_ALEPH_H_


	)

26 
	#FOSC32
 32768

27 
	#OSC32_STARTUP
 
AVR32_PM_OSCCTRL32_STARTUP_8192_RCOSC


28 
	#FOSC0
 12000000

29 
	#OSC0_STARTUP
 
AVR32_PM_OSCCTRL0_STARTUP_2048_RCOSC


31 

	)

33 
	#FMCK_HZ
 66000000

34 
	#FCPU_HZ
 
FMCK_HZ


35 
	#FHSB_HZ
 
FCPU_HZ


36 
	#FPBA_HZ
 
FMCK_HZ


37 
	#FPBB_HZ
 
FMCK_HZ


38 #ñ£

	)

41 
	#FMCK_HZ
 12000000

42 
	#FCPU_HZ
 
FMCK_HZ


43 
	#FHSB_HZ
 
FCPU_HZ


44 
	#FPBA_HZ
 
FMCK_HZ


45 
	#FPBB_HZ
 
FMCK_HZ


47 

	)

49 
	#BOARD_OSC0_HZ
 12000000

	)

50 
	#BOARD_OSC0_STARTUP_US
 17000

	)

51 
	#BOARD_OSC0_IS_XTAL
 
åue


	)

52 
	#BOARD_OSC32_HZ
 32768

	)

53 
	#BOARD_OSC32_STARTUP_US
 71000

	)

54 
	#BOARD_OSC32_IS_XTAL
 
åue


	)

59 
	#FTDI_USART
 (&
AVR32_USART0
)

	)

60 
	#FTDI_USART_RX_PIN
 
AVR32_USART0_RXD_0_0_PIN


	)

61 
	#FTDI_USART_RX_FUNCTION
 
AVR32_USART0_RXD_0_0_FUNCTION


	)

62 
	#FTDI_USART_TX_PIN
 
AVR32_USART0_TXD_0_0_PIN


	)

63 
	#FTDI_USART_TX_FUNCTION
 
AVR32_USART0_TXD_0_0_FUNCTION


	)

64 
	#FTDI_USART_BAUDRATE
 230400

	)

66 
	#DBG_USART
 
FTDI_USART


	)

67 
	#DBG_USART_RX_PIN
 
FTDI_USART_RX_PIN


	)

68 
	#DBG_USART_RX_FUNCTION
 
FTDI_USART_RX_FUNCTION


	)

69 
	#DBG_USART_TX_PIN
 
FTDI_USART_TX_PIN


	)

70 
	#DBG_USART_TX_FUNCTION
 
FTDI_USART_TX_FUNCTION


	)

71 
	#DBG_USART_BAUDRATE
 
FTDI_USART_BAUDRATE


	)

78 
	#OLED_SPI
 (&
AVR32_SPI1
)

	)

79 
	#OLED_SPI_SCK_PIN
 
AVR32_SPI1_SCK_0_0_PIN


	)

80 
	#OLED_SPI_SCK_FUNCTION
 
AVR32_SPI1_SCK_0_0_FUNCTION


	)

81 
	#OLED_SPI_MISO_PIN
 
AVR32_SPI1_MISO_0_0_PIN


	)

82 
	#OLED_SPI_MISO_FUNCTION
 
AVR32_SPI1_MISO_0_0_FUNCTION


	)

83 
	#OLED_SPI_MOSI_PIN
 
AVR32_SPI1_MOSI_0_0_PIN


	)

84 
	#OLED_SPI_MOSI_FUNCTION
 
AVR32_SPI1_MOSI_0_0_FUNCTION


	)

85 
	#OLED_SPI_NPCS0_PIN
 
AVR32_SPI1_NPCS_0_0_PIN


	)

86 
	#OLED_SPI_NPCS0_FUNCTION
 
AVR32_SPI1_NPCS_0_0_FUNCTION


	)

87 
	#OLED_SPI_NPCS2_PIN
 
AVR32_SPI1_NPCS_2_0_PIN


	)

88 
	#OLED_SPI_NPCS2_FUNCTION
 
AVR32_SPI1_NPCS_2_0_FUNCTION


	)

89 
	#OLED_SPI_NPCS1_PIN
 
AVR32_SPI1_NPCS_1_0_PIN


	)

90 
	#OLED_SPI_NPCS1_FUNCTION
 
AVR32_SPI1_NPCS_1_0_FUNCTION


	)

91 
	#OLED_SPI_NPCS
 0

	)

94 
	#ADC_SPI
 
OLED_SPI


	)

95 
	#ADC_SPI_NPCS
 1

	)

98 
	#SD_MMC_SPI
 
OLED_SPI


	)

99 
	#SD_MMC_SPI_NPCS
 2

	)

102 
	#BFIN_SPI
 (&
AVR32_SPI0
)

	)

103 
	#BFIN_SPI_NPCS
 0

	)

104 
	#BFIN_SPI_SCK_PIN
 
AVR32_SPI0_SCK_0_0_PIN


	)

105 
	#BFIN_SPI_SCK_FUNCTION
 
AVR32_SPI0_SCK_0_0_FUNCTION


	)

106 
	#BFIN_SPI_MISO_PIN
 
AVR32_SPI0_MISO_0_0_PIN


	)

107 
	#BFIN_SPI_MISO_FUNCTION
 
AVR32_SPI0_MISO_0_0_FUNCTION


	)

108 
	#BFIN_SPI_MOSI_PIN
 
AVR32_SPI0_MOSI_0_0_PIN


	)

109 
	#BFIN_SPI_MOSI_FUNCTION
 
AVR32_SPI0_MOSI_0_0_FUNCTION


	)

110 
	#BFIN_SPI_NPCS0_PIN
 
AVR32_SPI0_NPCS_0_0_PIN


	)

111 
	#BFIN_SPI_NPCS0_FUNCTION
 
AVR32_SPI0_NPCS_0_0_FUNCTION


	)

116 
	#AVR32_PDCA_CHANNEL_USED_RX
 
AVR32_PDCA_PID_SPI1_RX


	)

117 
	#AVR32_PDCA_CHANNEL_USED_TX
 
AVR32_PDCA_PID_SPI1_TX


	)

118 
	#AVR32_PDCA_CHANNEL_SPI_RX
 0

	)

119 
	#AVR32_PDCA_CHANNEL_SPI_TX
 1

	)

125 
	#SD_MMC_CARD_DETECT_PIN
 
AVR32_PIN_PB00


	)

126 
	#SD_MMC_WRITE_PROTECT_PIN
 
AVR32_PIN_PB01


	)

129 
	#OLED_RESET_PIN
 
AVR32_PIN_PA07


	)

130 
	#OLED_REGISTER_PIN
 
AVR32_PIN_PA09


	)

133 
	#BFIN_HWAIT_PIN
 
AVR32_PIN_PA05


	)

134 
	#BFIN_RESET_PIN
 
AVR32_PIN_PA06


	)

137 
	#ENC0_S0_PIN
 
AVR32_PIN_PB02


	)

138 
	#ENC0_S1_PIN
 
AVR32_PIN_PB03


	)

139 
	#ENC1_S0_PIN
 
AVR32_PIN_PB04


	)

140 
	#ENC1_S1_PIN
 
AVR32_PIN_PB05


	)

141 
	#ENC2_S0_PIN
 
AVR32_PIN_PB06


	)

142 
	#ENC2_S1_PIN
 
AVR32_PIN_PB07


	)

143 
	#ENC3_S0_PIN
 
AVR32_PIN_PB08


	)

144 
	#ENC3_S1_PIN
 
AVR32_PIN_PB09


	)

148 
	#SW0_PIN
 
AVR32_PIN_PA25


	)

149 
	#SW1_PIN
 
AVR32_PIN_PA26


	)

150 
	#SW2_PIN
 
AVR32_PIN_PA27


	)

151 
	#SW3_PIN
 
AVR32_PIN_PA28


	)

153 
	#FS0_PIN
 
AVR32_PIN_PB30


	)

154 
	#FS1_PIN
 
AVR32_PIN_PB31


	)

156 
	#LED_MODE_PIN
 
AVR32_PIN_PA23


	)

157 
	#SW_MODE_PIN
 
AVR32_PIN_PA24


	)

159 
	#SW_POWER_PIN
 
AVR32_PIN_PB16


	)

160 
	#POWER_CTL_PIN
 
AVR32_PIN_PB15


	)

163 
	#AUX_PULLUP0_PIN
 
AVR32_PIN_PB20


	)

164 
	#AUX_PULLUP1_PIN
 
AVR32_PIN_PB21


	)

165 
	#AUX_PULLUP2_PIN
 
AVR32_PIN_PB22


	)

166 
	#AUX_PULLUP3_PIN
 
AVR32_PIN_PB23


	)

169 
	#TWI_DATA_PIN
 
AVR32_TWI_SDA_0_0_PIN


	)

170 
	#TWI_DATA_FUNCTION
 
AVR32_TWI_SDA_0_0_FUNCTION


	)

171 
	#TWI_CLOCK_PIN
 
AVR32_TWI_SCL_0_0_PIN


	)

172 
	#TWI_CLOCK_FUNCTION
 
AVR32_TWI_SCL_0_0_FUNCTION


	)

174 
	#TWI_SPEED
 132000;

	)

182 
	#USB_ID
 
AVR32_USBB_USB_ID_0_2


187 
	#USB_VBOF
 
AVR32_USBB_USB_VBOF_0_2


189 
	#USB_VBOF_ACTIVE_LEVEL
 
LOW


	)

191 
	#USB_OVERCURRENT_DETECT_PIN
 
AVR32_PIN_PX33


	)

	@conf/conf_access.h

47 #i‚de‡
_CONF_ACCESS_H_


48 
	#_CONF_ACCESS_H_


	)

50 
	~"compûî.h
"

51 
	~"bﬂrd.h
"

57 
	#LUN_0
 
DISABLE


58 
	#LUN_1
 
DISABLE


59 
	#LUN_2
 
ENABLE


60 
	#LUN_3
 
DISABLE


	)

61 
	#LUN_4
 
DISABLE


	)

62 
	#LUN_5
 
DISABLE


	)

63 
	#LUN_6
 
DISABLE


	)

64 
	#LUN_7
 
DISABLE


	)

65 
	#LUN_USB
 
DISABLE


67 

	)

71 
	#VIRTUAL_MEM
 
LUN_0


	)

72 
	#LUN_ID_VIRTUAL_MEM
 
LUN_ID_0


	)

73 
	#LUN_0_INCLUDE
 "vútuÆ_mem.h"

	)

74 
	#Lun_0_ã°_unô_ªady
 
vútuÆ_ã°_unô_ªady


	)

75 
	#Lun_0_ªad_ˇ∑côy
 
vútuÆ_ªad_ˇ∑côy


	)

76 
	#Lun_0_wr_¥Ÿe˘
 
vútuÆ_wr_¥Ÿe˘


	)

77 
	#Lun_0_ªmovÆ
 
vútuÆ_ªmovÆ


	)

78 
	#Lun_0_usb_ªad_10
 
vútuÆ_usb_ªad_10


	)

79 
	#Lun_0_usb_wrôe_10
 
vútuÆ_usb_wrôe_10


	)

80 
	#Lun_0_mem_2_øm
 
vútuÆ_mem_2_øm


	)

81 
	#Lun_0_øm_2_mem
 
vútuÆ_øm_2_mem


	)

82 
	#LUN_0_NAME
 "\"On-Chù VútuÆ Mem‹y\""

	)

88 
	#AT45DBX_MEM
 
LUN_1


	)

89 
	#LUN_ID_AT45DBX_MEM
 
LUN_ID_1


	)

90 
	#LUN_1_INCLUDE
 "©45dbx_mem.h"

	)

91 
	#Lun_1_ã°_unô_ªady
 
©45dbx_ã°_unô_ªady


	)

92 
	#Lun_1_ªad_ˇ∑côy
 
©45dbx_ªad_ˇ∑côy


	)

93 
	#Lun_1_wr_¥Ÿe˘
 
©45dbx_wr_¥Ÿe˘


	)

94 
	#Lun_1_ªmovÆ
 
©45dbx_ªmovÆ


	)

95 
	#Lun_1_usb_ªad_10
 
©45dbx_usb_ªad_10


	)

96 
	#Lun_1_usb_wrôe_10
 
©45dbx_usb_wrôe_10


	)

97 
	#Lun_1_mem_2_øm
 
©45dbx_df_2_øm


	)

98 
	#Lun_1_øm_2_mem
 
©45dbx_øm_2_df


	)

99 
	#LUN_1_NAME
 "\"AT45DBX D©®Fœsh\""

	)

105 
	#SD_MMC_SPI_MEM
 
LUN_2


	)

106 
	#LUN_ID_SD_MMC_SPI_MEM
 
LUN_ID_2


	)

107 
	#LUN_2_INCLUDE
 "sd_mmc_•i_mem.h"

	)

108 
	#Lun_2_ã°_unô_ªady
 
sd_mmc_•i_ã°_unô_ªady


	)

109 
	#Lun_2_ªad_ˇ∑côy
 
sd_mmc_•i_ªad_ˇ∑côy


	)

110 
	#Lun_2_wr_¥Ÿe˘
 
sd_mmc_•i_wr_¥Ÿe˘


	)

111 
	#Lun_2_ªmovÆ
 
sd_mmc_•i_ªmovÆ


	)

112 
	#Lun_2_usb_ªad_10
 
sd_mmc_•i_usb_ªad_10


	)

113 
	#Lun_2_usb_wrôe_10
 
sd_mmc_•i_usb_wrôe_10


	)

114 
	#Lun_2_mem_2_øm
 
sd_mmc_•i_mem_2_øm


	)

115 
	#Lun_2_øm_2_mem
 
sd_mmc_•i_øm_2_mem


	)

116 
	#LUN_2_NAME
 "\"SD/MMC C¨d ovî SPI\""

	)

122 
	#MEM_USB
 
LUN_USB


	)

123 
	#LUN_ID_MEM_USB
 
LUN_ID_USB


	)

124 
	#LUN_USB_INCLUDE
 "ho°_mem.h"

	)

125 
	#Lun_usb_ã°_unô_ªady
(
lun
Ë
	`ho°_ã°_unô_ªady
÷un)

	)

126 
	#Lun_usb_ªad_ˇ∑côy
(
lun
, 
nb_£˘
Ë
	`ho°_ªad_ˇ∑côy
÷un,Çb_£˘)

	)

127 
	#Lun_usb_ªad_£˘‹_size
(
lun
Ë
	`ho°_ªad_£˘‹_size
÷un)

	)

128 
	#Lun_usb_wr_¥Ÿe˘
(
lun
Ë
	`ho°_wr_¥Ÿe˘
÷un)

	)

129 
	#Lun_usb_ªmovÆ
(Ë
	`ho°_ªmovÆ
()

	)

130 
	#Lun_usb_mem_2_øm
(
addr
, 
øm
Ë
	`ho°_ªad_10_øm
◊ddr,Ñam)

	)

131 
	#Lun_usb_øm_2_mem
(
addr
, 
øm
Ë
	`ho°_wrôe_10_øm
◊ddr,Ñam)

	)

132 
	#LUN_USB_NAME
 "\"Ho° Mass-St‹agêMem‹y\""

	)

142 
	#mem‹y_°¨t_ªad_a˘i⁄
(
nb_£˘‹s
)

	)

143 
	#mem‹y_°›_ªad_a˘i⁄
()

	)

144 
	#mem‹y_°¨t_wrôe_a˘i⁄
(
nb_£˘‹s
)

	)

145 
	#mem‹y_°›_wrôe_a˘i⁄
()

	)

151 
	#ACCESS_USB
 
Ál£


152 
	#ACCESS_MEM_TO_RAM
 
åue


153 
	#ACCESS_STREAM
 
åue


154 
	#ACCESS_STREAM_RECORD
 
Ál£


155 
	#ACCESS_MEM_TO_MEM
 
åue


156 
	#ACCESS_CODEC
 
Ál£


158 

	)

162 
	#GLOBAL_WR_PROTECT
 
Ál£


164 

	)

	@conf/conf_clock.h

41 #i‚de‡
CONF_CLOCK_H_INCLUDED


42 
	#CONF_CLOCK_H_INCLUDED


	)

49 
	#CONFIG_SYSCLK_SOURCE
 
SYSCLK_SRC_PLL0


	)

52 
	#CONFIG_PLL0_SOURCE
 
PLL_SRC_OSC0


	)

53 
	#CONFIG_PLL0_MUL
 11

	)

54 
	#CONFIG_PLL0_DIV
 2

	)

56 
	#CONFIG_PLL1_SOURCE
 
PLL_SRC_OSC0


	)

57 
	#CONFIG_PLL1_MUL
 8

	)

58 
	#CONFIG_PLL1_DIV
 2

	)

61 
	#CONFIG_SYSCLK_CPU_DIV
 0

	)

62 
	#CONFIG_SYSCLK_PBA_DIV
 0

	)

63 
	#CONFIG_SYSCLK_PBB_DIV
 0

	)

67 
	#CONFIG_SYSCLK_INIT_PBAMASK
 ( (1 << 
SYSCLK_USART0
) \

68 | (1 << 
SYSCLK_USART1
) \

69 | (1 << 
SYSCLK_INTC
) \

70 | (1 << 
SYSCLK_GPIO
) \

71 | (1 << 
SYSCLK_TC
) \

72 | (1 << 
SYSCLK_PDCA_PB
) \

73 | (1 << 
SYSCLK_SPI0
) \

74 | (1 << 
SYSCLK_SPI1
Ë)

	)

76 
	#CONFIG_SYSCLK_INIT_PBBMASK
 ( (1 << 
SYSCLK_HMATRIX
) \

77 | (1 << 
SYSCLK_FLASHC_REGS
) \

78 | (1 << 
SYSCLK_SMC_REGS
Ë)

	)

80 
	#CONFIG_SYSCLK_INIT_HSBMASK
 ( (1 << 
SYSCLK_PDCA_HSB
) \

81 | (1 << 
SYSCLK_EBI
 ) \

82 | (1 << 
SYSCLK_FLASHC_DATA
Ë)

	)

85 
	#CONFIG_USBCLK_SOURCE
 
USBCLK_SRC_PLL1


	)

86 
	#CONFIG_USBCLK_DIV
 1

	)

	@conf/conf_ebi.h

49 #i‚de‡
_CONF_EBI_H_


50 
	#_CONF_EBI_H_


	)

52 
	~"compûî.h
"

53 
	~"bﬂrd.h
"

55 
	#SMC_USE_NCS1


	)

56 
	#SMC_COMPONENT_CS1
 "smc_≥rùhîÆ.h"

	)

59 
	#EBI_ADDR_0
 
AVR32_EBI_ADDR_0


	)

60 
	#EBI_ADDR_1
 
AVR32_EBI_ADDR_1


	)

61 
	#EBI_ADDR_2
 
AVR32_EBI_ADDR_2


	)

62 
	#EBI_ADDR_3
 
AVR32_EBI_ADDR_3


	)

63 
	#EBI_ADDR_4
 
AVR32_EBI_ADDR_4


	)

64 
	#EBI_ADDR_5
 
AVR32_EBI_ADDR_5


	)

65 
	#EBI_ADDR_6
 
AVR32_EBI_ADDR_6


	)

66 
	#EBI_ADDR_7
 
AVR32_EBI_ADDR_7


	)

67 
	#EBI_ADDR_8
 
AVR32_EBI_ADDR_8


	)

68 
	#EBI_ADDR_9
 
AVR32_EBI_ADDR_9


	)

69 
	#EBI_ADDR_10
 
AVR32_EBI_ADDR_10


	)

70 
	#EBI_ADDR_11
 
AVR32_EBI_ADDR_11


	)

71 
	#EBI_ADDR_12
 
AVR32_EBI_ADDR_12


	)

72 
	#EBI_ADDR_13
 
AVR32_EBI_ADDR_13


	)

73 
	#EBI_ADDR_14
 
AVR32_EBI_ADDR_14


	)

74 
	#EBI_ADDR_15
 
AVR32_EBI_ADDR_15


	)

75 
	#EBI_ADDR_16
 
AVR32_EBI_ADDR_16


	)

76 
	#EBI_ADDR_17
 
AVR32_EBI_ADDR_17


	)

77 
	#EBI_ADDR_18
 
AVR32_EBI_ADDR_18


	)

78 
	#EBI_ADDR_19
 
AVR32_EBI_ADDR_19


	)

79 #i‡ 
BOARD
 =
EVK1100


81 #ñi‡
BOARD
 =
EVK1104


82 
	#EBI_ADDR_20
 
AVR32_EBI_ADDR_20


	)

83 
	#EBI_ADDR_21
 
AVR32_EBI_ADDR_21


	)

84 
	#EBI_ADDR_22
 
AVR32_EBI_ADDR_22


	)

85 #ñi‡
BOARD
 =
EVK1105


86 #îr‹ 
BOARD
 =
EVK1105


87 
	#EBI_ADDR_20
 
AVR32_EBI_ADDR_20_0


	)

88 
	#EBI_ADDR_21
 
AVR32_EBI_ADDR_21_0


	)

89 
	#EBI_ADDR_22
 
AVR32_EBI_ADDR_22_0


	)

93 
	#EBI_ADDR_23
 
AVR32_EBI_ADDR_23


	)

96 
	#EBI_DATA_0
 
AVR32_EBI_DATA_0


	)

97 
	#EBI_DATA_1
 
AVR32_EBI_DATA_1


	)

98 
	#EBI_DATA_2
 
AVR32_EBI_DATA_2


	)

99 
	#EBI_DATA_3
 
AVR32_EBI_DATA_3


	)

100 
	#EBI_DATA_4
 
AVR32_EBI_DATA_4


	)

101 
	#EBI_DATA_5
 
AVR32_EBI_DATA_5


	)

102 
	#EBI_DATA_6
 
AVR32_EBI_DATA_6


	)

103 
	#EBI_DATA_7
 
AVR32_EBI_DATA_7


	)

104 
	#EBI_DATA_8
 
AVR32_EBI_DATA_8


	)

105 
	#EBI_DATA_9
 
AVR32_EBI_DATA_9


	)

106 
	#EBI_DATA_10
 
AVR32_EBI_DATA_10


	)

107 
	#EBI_DATA_11
 
AVR32_EBI_DATA_11


	)

108 
	#EBI_DATA_12
 
AVR32_EBI_DATA_12


	)

109 
	#EBI_DATA_13
 
AVR32_EBI_DATA_13


	)

110 
	#EBI_DATA_14
 
AVR32_EBI_DATA_14


	)

111 
	#EBI_DATA_15
 
AVR32_EBI_DATA_15


	)

114 
	#EBI_NWE0
 
AVR32_EBI_NWE0_0


	)

115 
	#EBI_NWE1
 
AVR32_EBI_NWE1_0


	)

116 
	#EBI_NWE3
 
AVR32_EBI_NWE3_0


	)

117 
	#EBI_NRD
 
AVR32_EBI_NRD_0


	)

118 
	#EBI_NWAIT
 
AVR32_EBI_NWAIT_0


	)

119 
	#EBI_NCS_0
 
AVR32_EBI_NCS_0_0


	)

120 
	#EBI_NCS_1
 
AVR32_EBI_NCS_1


	)

121 
	#EBI_NCS_2
 
AVR32_EBI_NCS_2


	)

122 
	#EBI_NCS_3
 
AVR32_EBI_NCS_3


	)

	@conf/conf_explorer.h

49 #i‚de‡
_CONF_EXPLORER_H_


50 
	#_CONF_EXPLORER_H_


	)

52 
	~"compûî.h
"

56 
	#LIB_MEM
 <
°rög
.
h
>

	)

57 
	#LIB_CTRLACCESS
 "˘æ_ac˚ss.h"

	)

60 
	#FS_FAT_12
 
åue


	)

61 
	#FS_FAT_16
 
åue


	)

62 
	#FS_FAT_32
 
åue


	)

65 
	#FS_ASCII
 
åue


	)

66 
	#FS_UNICODE
 
Ál£


	)

69 
	#FS_MULTI_PARTITION
 
Ál£


	)

72 
	#MAX_FILE_PATH_LENGTH
 30

	)

75 
	#MAX_CONFIG_FILE_SIZE
 110

	)

83 
	#FS_LEVEL_FEATURES
 (
FSFEATURE_READ
 | 
FSFEATURE_WRITE_COMPLET
)

	)

87 
	#FS_NB_CACHE_CLUSLIST
 1

	)

90 
	#FS_NB_NAVIGATOR
 2

	)

93 
	#FS_NB_RESERVED_NAV
 0

	)

104 
	#FS_NAV_ID_COPYFILE
 1

	)

113 
	#∂_ˇche_∑th
 
g_buf„r


	)

116 
	#PL_CACHE_PATH_MAX_SIZE
 (
g_buf„r
)

	)

119 
	#PL_UNICODE
 
Ál£


	)

	@conf/conf_sd_mmc_spi.h

46 #i‚de‡
_CONF_SD_MMC_SPI_H_


47 
	#_CONF_SD_MMC_SPI_H_


	)

50 
	~"c⁄f_ac˚ss.h
"

52 #i‡
SD_MMC_SPI_MEM
 =
DISABLE


53 #îr‹ 
c⁄f_sd_mmc_•i
.
h
 
is
 #ö˛uded 
Æthough
 
SD_MMC_SPI_MEM
 i†
dißbÀd


57 
	~"sd_mmc_•i.h
"

63 
	#SD_MMC_SPI_MASTER_SPEED
 12000000

	)

66 
	#SD_MMC_SPI_BITS
 8

	)

	@conf/conf_tc_irq.h

1 #i‚de‡
_ALEPH_CONF_TC_IRQ_H_


2 
	#_ALEPH_CONF_TC_IRQ_H_


	)

6 
	#SYS_IRQ_PRIORITY
 1

	)

7 
	#APP_TC_IRQ_PRIORITY
 3

	)

8 
	#UI_IRQ_PRIORITY
 2

	)

14 
	#APP_TC
 (&
AVR32_TC
)

	)

15 
	#APP_TC_CHANNEL
 0

	)

16 
	#APP_TC_IRQ
 
AVR32_TC_IRQ0


	)

17 
	#APP_TC_IRQ_GROUP
 
AVR32_TC_IRQ_GROUP


	)

	@conf/conf_usb_host.h

1 #i‚de‡
_CONF_USB_HOST_H_


2 
	#_CONF_USB_HOST_H_


	)

4 
	~"compûî.h
"

12 
	#UHD_NO_SLEEP_MGR


	)

15 
	#USB_HOST_UHI
 
UHI_HID_MOUSE
 , 
UHI_HID_GAMEPAD
 , 
UHI_FTDI
 , 
UHI_MIDI
 ,

	)

18 
	#USB_HOST_POWER_MAX
 500

	)

27 
	#UHC_MODE_CHANGE
(
b_ho°_mode
Ë
	`usb_mode_ch™ge
(b_ho°_mode)

	)

31 
	#UHC_VBUS_CHANGE
(
b_¥e£¡
Ë
	`usb_vbus_ch™ge
(b_¥e£¡)

	)

35 
	#UHC_VBUS_ERROR
(Ë
	`usb_vbus_îr‹
()

	)

38 
	#UHC_CONNECTION_EVENT
(
dev
,
b_¥e£¡
Ë
	`usb_c⁄√˘i⁄
(dev,b_¥e£¡)

	)

41 
	#UHC_WAKEUP_EVENT
(Ë
	`usb_wakeup
()

	)

45 
	#UHC_SOF_EVENT
(Ë
	`usb_sof
()

	)

54 
	#UHC_ENUM_EVENT
(
dev
,
b_°©us
Ë
	`usb_íum
(dev,b_°©us)

	)

58 
	#UHI_HID_MOUSE_CHANGE
(
dev
,
b_∂ug
)

	)

60 
	#UHI_HID_MOUSE_EVENT_BTN_LEFT
(
b_°©e
Ë
	`hid_mou£_bä_À·
(b_°©e)

	)

61 
	#UHI_HID_MOUSE_EVENT_BTN_RIGHT
(
b_°©e
Ë
	`hid_mou£_bä_right
(b_°©e)

	)

62 
	#UHI_HID_MOUSE_EVENT_BTN_MIDDLE
(
b_°©e
Ë
	`hid_mou£_bä_middÀ
(b_°©e)

	)

63 
	#UHI_HID_MOUSE_EVENT_MOUVE
(
x
,
y
,
s¸ﬁl
Ë
	`hid_mou£_move
(x,y,s¸ﬁl)

	)

66 
	#UHI_HID_GAMEPAD_CHANGE
(
dev
,
b_∂ug
)

	)

69 
	#UHI_FTDI_CHANGE
(
dev
, 
b_∂ug
Ë
	`·di_ch™ge
(dev, b_∂ug)

	)

72 
	#UHI_MIDI_CHANGE
(
dev
, 
b_∂ug
Ë
	`midi_ch™ge
(dev, b_∂ug)

	)

75 
	~"uhi_·di.h
"

76 
	~"uhi_hid_mou£.h
"

77 
	~"uhi_hid_gamïad.h
"

78 
	~"uhi_midi.h
"

80 
	~"usb.h
"

	@conf/smc_peripheral.h

48 #i‚de‡
_SMC_PERIPHERAL_H_


49 
	#_SMC_PERIPHERAL_H_


	)

55 
	#EXT_SM_SIZE
 20

56 

	)

58 
	#SMC_DBW
 16

	)

61 
	#SMC_8_BIT_CHIPS
 
Ál£


	)

65 
	#NWE_SETUP
 0

	)

69 
	#NCS_WR_SETUP
 0

	)

73 
	#NRD_SETUP
 0

	)

77 
	#NCS_RD_SETUP
 0

	)

81 
	#NCS_WR_PULSE
 82

	)

85 
	#NWE_PULSE
 82

	)

89 
	#NCS_RD_PULSE
 82

	)

93 
	#NRD_PULSE
 82

	)

98 
	#NCS_WR_HOLD
 82

	)

99 
	#NWE_HOLD
 82

	)

100 
	#NWE_CYCLE
 
	`Max
((
NCS_WR_SETUP
 + 
NCS_WR_PULSE
 + 
NCS_WR_HOLD
),(
NWE_SETUP
 + 
NWE_PULSE
 + 
NWE_HOLD
))

	)

104 
	#NCS_RD_HOLD
 0

	)

105 
	#NRD_HOLD
 0

	)

106 
	#NRD_CYCLE
 
	`Max
((
NCS_RD_SETUP
 + 
NCS_RD_PULSE
 + 
NCS_RD_HOLD
),(
NRD_SETUP
 + 
NRD_PULSE
 + 
NRD_HOLD
))

	)

109 
	#TDF_CYCLES
 0

	)

110 
	#TDF_OPTIM
 
Ál£


	)

113 
	#PAGE_MODE
 
Ál£


	)

114 
	#PAGE_SIZE
 0

	)

117 
	#NCS_CONTROLLED_READ
 
Ál£


	)

120 
	#NCS_CONTROLLED_WRITE
 
Ál£


	)

123 
	#NWAIT_MODE
 
AVR32_SMC_EXNW_MODE_DISABLED


	)

	@src/adc.c

2 
	~"compûî.h
"

3 
	~"dñay.h
"

4 
	~"öãºu±.h
"

5 
	~"¥öt_funcs.h
"

6 
	~"•i.h
"

8 
	~"≠p.h
"

9 
	~"Æïh_bﬂrd.h
"

10 
	~"evíts.h
"

11 
	~"evít_ty≥s.h
"

12 
	~"ty≥s.h
"

13 
	~"adc.h
"

16 
	#AD7923_CTL_WRITE
 (1 << 11)

	)

17 
	#AD7923_CTL_SEQ1
 (1 << 10)

	)

18 
	#AD7923_CTL_ADD1
 (1 << 7)

	)

19 
	#AD7923_CTL_ADD0
 (1 << 6)

	)

20 
	#AD7923_CTL_PM1
 (1 << 5)

	)

21 
	#AD7923_CTL_PM0
 (1 << 4)

	)

22 
	#AD7923_CTL_SEQ0
 (1 << 3)

	)

23 
	#AD7923_CTL_RANGE
 (1 << 1)

	)

24 
	#AD7923_CTL_CODING
 (1)

	)

27 
	#AD7923_CMD_BASE
 ( 
AD7923_CTL_WRITE
 | 
AD7923_CTL_PM0
 | 
AD7923_CTL_PM1
 | 
AD7923_CTL_CODING
)

	)

30 c⁄° 
eEvítTy≥
 
	gadcEvítTy≥s
[4] = {

31 
kEvítAdc0
 ,

32 
kEvítAdc1
 ,

33 
kEvítAdc2
 ,

34 
kEvítAdc3
 ,

38 
adc_c⁄vît
(
U16
 (*
d°
)[4]) {

39 
U16
 
	gcmd
, 
	gvÆ
;

43 
	gcmd
 = ( 
AD7923_CMD_BASE
 ) << 4;

44 
•i_£À˘Chù
(
ADC_SPI
, 
ADC_SPI_NPCS
);

45 
•i_wrôe
(
ADC_SPI
, 
cmd
);

46 
•i_un£À˘Chù
(
ADC_SPI
, 
ADC_SPI_NPCS
);

49 
	gcmd
 = ( 
AD7923_CMD_BASE
 | 
AD7923_CTL_ADD0
 ) << 4;

50 
•i_£À˘Chù
(
ADC_SPI
, 
ADC_SPI_NPCS
);

51 
•i_wrôe
(
ADC_SPI
, 
cmd
);

52 
•i_ªad
(
ADC_SPI
, &
vÆ
);

53 
•i_un£À˘Chù
(
ADC_SPI
, 
ADC_SPI_NPCS
);

54 (*
	gd°
)[0] = 
vÆ
 & 0xfff;

57 
	gcmd
 = ( 
AD7923_CMD_BASE
 | 
AD7923_CTL_ADD1
 ) << 4;

58 
•i_£À˘Chù
(
ADC_SPI
, 
ADC_SPI_NPCS
);

59 
•i_wrôe
(
ADC_SPI
, 
cmd
);

60 
•i_ªad
(
ADC_SPI
, &
vÆ
);

61 
•i_un£À˘Chù
(
ADC_SPI
, 
ADC_SPI_NPCS
);

62 (*
	gd°
)[1] = 
vÆ
 & 0xfff;

65 
	gcmd
 = ( 
AD7923_CMD_BASE
 | 
AD7923_CTL_ADD1
 | 
AD7923_CTL_ADD0
 ) << 4;

66 
•i_£À˘Chù
(
ADC_SPI
, 
ADC_SPI_NPCS
);

67 
•i_wrôe
(
ADC_SPI
, 
cmd
);

68 
•i_ªad
(
ADC_SPI
, &
vÆ
);

69 
•i_un£À˘Chù
(
ADC_SPI
, 
ADC_SPI_NPCS
);

70 (*
	gd°
)[2] = 
vÆ
 & 0xfff;

73 
	gcmd
 = ( 
AD7923_CMD_BASE
 ) << 4;

74 
•i_£À˘Chù
(
ADC_SPI
, 
ADC_SPI_NPCS
);

75 
•i_wrôe
(
ADC_SPI
, 
cmd
);

76 
•i_ªad
(
ADC_SPI
, &
vÆ
);

77 
•i_un£À˘Chù
(
ADC_SPI
, 
ADC_SPI_NPCS
);

78 (*
	gd°
)[3] = 
vÆ
 & 0xfff;

82 
	$öô_adc
() {

83 
u16
 
cmd
;

88 
	`•i_£À˘Chù
(
ADC_SPI
, 
ADC_SPI_NPCS
);

89 
	`•i_wrôe
(
ADC_SPI
, 0xffff);

90 
	`•i_un£À˘Chù
(
ADC_SPI
, 
ADC_SPI_NPCS
);

93 
	`dñay_us
(5);

96 
cmd
 = 
AD7923_CMD_BASE
 << 4;

97 
	`•i_£À˘Chù
–
ADC_SPI
, 
ADC_SPI_NPCS
 );

98 
	`•i_wrôe
–
ADC_SPI
, 
cmd
 );

99 
	`•i_un£À˘Chù
–
ADC_SPI
, 
ADC_SPI_NPCS
 );

102 
	}
}

105 
	$adc_pﬁl
() {

106 
u16
 
adcVÆ
[4] = {0, 0, 0, 0};

107 
u16
 
adcOldVÆ
[4] = {0, 0, 0, 0};

108 
evít_t
 
e
;

109 
u8
 
i
;

111 
	`≠p_∑u£
();

113 
	`adc_c⁄vît
(&
adcVÆ
);

115 
i
=0; i<4; i++) {

120 if–(
adcVÆ
[
i
] & 0xffcË!–
adcOldVÆ
[i] & 0xffc) ) {

121 
adcOldVÆ
[
i
] = 
adcVÆ
[i];

122 
e
.
evítTy≥
 = 
adcEvítTy≥s
[
i
];

123 
e
.
evítD©a
 = (
S16
)(
adcVÆ
[
i
]);

124 
	`po°_evít
(&
e
);

127 
	`≠p_ªsume
();

129 
	}
}

	@src/adc.h

1 #i‚de‡
_ALEPH_AVR32_ADC_H_


2 
	#_ALEPH_AVR32_ADC_H_


	)

4 
	~"compûî.h
"

7 
öô_adc
();

10 
adc_pﬁl
();

	@src/app.c

2 
	~"¥öt_funcs.h
"

3 
	~"tc.h
"

5 
	~"≠p.h
"

6 
	~"Æïh_bﬂrd.h
"

7 
	~"c⁄f_tc_úq.h
"

8 
	~"dñay.h
"

9 
	~"evíts.h
"

10 
	~"s¸ìn.h
"

22 
	$≠p_∑u£
() {

31 
	`dñay_ms
(10);

33 
	`˝u_úq_dißbÀ_Àvñ
(
APP_TC_IRQ_PRIORITY
);

34 
	`˝u_úq_dißbÀ_Àvñ
(
UI_IRQ_PRIORITY
);

42 
	}
}

44 
	$≠p_ªsume
() {

52 
	`˝u_úq_íabÀ_Àvñ
(
APP_TC_IRQ_PRIORITY
);

53 
	`˝u_úq_íabÀ_Àvñ
(
UI_IRQ_PRIORITY
);

67 
	}
}

	@src/app.h

9 #i‚de‡
_ALEPH_AVR32_APP_H_


10 
	#_ALEPH_AVR32_APP_H_


	)

12 
	~"evíts.h
"

13 
	~"ty≥s.h
"

19 (*
	tevít_h™dÀr
)(
	tevít_t
* 
	tev
);

21 
evít_h™dÀr
 
≠pEvítH™dÀr
;

68 
	`≠p_öô
();

74 
u8
 
	`≠p_œunch
(u8 
fú°run
);

80 
	`≠p_∑u£
();

82 
	`≠p_nŸify
(c⁄° * 
msg
);

84 
	`≠p_ªsume
();

	@src/bfin.c

9 
	~"compûî.h
"

10 
	~"dñay.h
"

11 
	~"gpio.h
"

12 
	~"•i.h
"

13 
	~"¥öt_funcs.h
"

16 
	~"moduÀ_comm⁄.h
"

17 
	~"∑øm_comm⁄.h
"

18 
	~"¥Ÿocﬁ.h
"

21 
	~"Æïh_bﬂrd.h
"

22 
	~"≠p.h
"

23 
	~"fûesy°em.h
"

25 
	~"globÆ.h
"

26 
	~"ty≥s.h
"

27 
	~"utû.h
"

28 
	~"bfö.h
"

33 
bfö_°¨t_å™s„r
();

34 
bfö_íd_å™s„r
();

35 
bfö_å™s„r_byã
(
u8
 
d©a
);

41 
	$bfö_lﬂd_buf
() {

42 
u64
 
i
;

44 if(
bföLdrSize
 > 
BFIN_LDR_MAX_BYTES
) {

45 
	`¥öt_dbg
("\r\¿bföÜﬂdÉº‹: sizê: "); 
	`¥öt_dbg_hex
(
bföLdrSize
);

49 
	`≠p_∑u£
();

51 
	`bfö_°¨t_å™s„r
();

53 
i
=0; i<
bföLdrSize
; i++) {

54 
	`bfö_å™s„r_byã
(
bföLdrD©a
[
i
]);

57 
	`bfö_íd_å™s„r
();

59 
	`≠p_ªsume
();

60 
	}
}

63 
	$bfö_£t_∑øm
(
u8
 
idx
, 
fix16_t
 
x
 ) {

65 
P¨amVÆue
 
pvÆ
;

66 
pvÆ
.
asI¡
 = (
s32
)
x
;

68 
	`¥öt_dbg
("\r\n bfin_set_param, idx: ");

69 
	`¥öt_dbg_ul⁄g
(
idx
);

71 
	`¥öt_dbg
(", val: 0x");

72 
	`¥öt_dbg_hex
((
u32
)
x
);

77 
	`•i_£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

78 
	`•i_wrôe
(
BFIN_SPI
, 
MSG_SET_PARAM_COM
);

79 
	`•i_un£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

81 
	`•i_£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

82 
	`•i_wrôe
(
BFIN_SPI
, 
idx
);

83 
	`•i_un£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

85 
	`•i_£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

86 
	`•i_wrôe
(
BFIN_SPI
, 
pvÆ
.
asByã
[0]);

87 
	`•i_un£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

89 
	`•i_£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

90 
	`•i_wrôe
(
BFIN_SPI
, 
pvÆ
.
asByã
[1]);

91 
	`•i_un£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

93 
	`•i_£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

94 
	`•i_wrôe
(
BFIN_SPI
, 
pvÆ
.
asByã
[2]);

95 
	`•i_un£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

97 
	`•i_£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

98 
	`•i_wrôe
(
BFIN_SPI
, 
pvÆ
.
asByã
[3]);

99 
	`•i_un£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

102 
	}
}

104 
	$bfö_gë_num_∑øms
(vﬁ©ûê
u32
* 
num
) {

105 
u16
 
x
;

107 
	`≠p_∑u£
();

110 
	`•i_£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

111 
	`•i_wrôe
(
BFIN_SPI
, 
MSG_GET_NUM_PARAMS_COM
);

112 
	`•i_un£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

114 
	`•i_£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

115 
	`•i_wrôe
(
BFIN_SPI
, 0);

116 
	`•i_ªad
(
BFIN_SPI
, &
x
);

117 
	`•i_un£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

118 *
num
 = (
u8
)(
x
 & 0xff);

120 
	`≠p_ªsume
();

122 
	}
}

124 
	$bfö_gë_∑øm_desc
(
u16
 
∑ømIdx
, vﬁ©ûê
P¨amDesc
* 
pDesc
) {

125 
P¨amVÆue
 
pvÆ
;

126 
u16
 
x
;

127 
u8
 
i
;

129 
	`≠p_∑u£
();

131 
	`•i_£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

132 
	`•i_wrôe
(
BFIN_SPI
, 
MSG_GET_PARAM_DESC_COM
);

133 
	`•i_un£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

135 
	`•i_£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

136 
	`•i_wrôe
(
BFIN_SPI
, 
∑ømIdx
);

137 
	`•i_un£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

139 
i
=0; i<
PARAM_LABEL_LEN
; i++) {

140 
	`•i_£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

141 
	`•i_wrôe
(
BFIN_SPI
, 0);

142 
	`•i_ªad
(
BFIN_SPI
, &
x
);

143 
	`•i_un£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

144 
pDesc
->
œbñ
[
i
] = ()(
x
 & 0xff);

147 
i
=0; i<
PARAM_UNIT_LEN
; i++) {

148 
	`•i_£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

149 
	`•i_wrôe
(
BFIN_SPI
, 0);

150 
	`•i_ªad
(
BFIN_SPI
, &
x
);

151 
	`•i_un£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

152 
pDesc
->
unô
[
i
] = ()(
x
 & 0xff);

155 
	`•i_£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

156 
	`•i_wrôe
(
BFIN_SPI
, 0);

157 
	`•i_ªad
(
BFIN_SPI
, &
x
);

158 
	`•i_un£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

159 
pDesc
->
ty≥
 = (
U8
)(
x
 & 0xff);

161 
i
=0; i<4; i++) {

162 
	`•i_£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

163 
	`•i_wrôe
(
BFIN_SPI
, 0);

164 
	`•i_ªad
(
BFIN_SPI
, &
x
);

165 
	`•i_un£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

166 
pvÆ
.
asByã
[
i
] = (
u8
)(
x
 & 0xff);

168 
pDesc
->
mö
 = 
pvÆ
.
asI¡
;

170 
i
=0; i<4; i++) {

171 
	`•i_£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

172 
	`•i_wrôe
(
BFIN_SPI
, 0);

173 
	`•i_ªad
(
BFIN_SPI
, &
x
);

174 
	`•i_un£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

175 
pvÆ
.
asByã
[
i
] = (
u8
)(
x
 & 0xff);

177 
pDesc
->
max
 = 
pvÆ
.
asI¡
;

179 
	`≠p_ªsume
();

180 
	}
}

183 
	$bfö_gë_moduÀ_«me
(vﬁ©ûê* 
buf
) {

184 
u16
 
x
;

185 
u8
 
i
;

187 
	`≠p_∑u£
();

190 
	`•i_£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

191 
	`•i_wrôe
(
BFIN_SPI
, 
MSG_GET_MODULE_NAME_COM
);

192 
	`•i_un£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

193 
i
=0; i<
MODULE_NAME_LEN
; i++) {

194 
	`•i_£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

195 
	`•i_wrôe
(
BFIN_SPI
, 0);

196 
	`•i_ªad
(
BFIN_SPI
, &
x
);

197 
	`•i_un£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

198 
buf
[
i
] = ()(
x
 & 0xff);

201 
	`≠p_ªsume
();

202 
	}
}

205 
	$bfö_gë_moduÀ_vîsi⁄
(
moduÀVîsi⁄_t
* 
vîs
) {

232 
	}
}

268 
	$bfö_íabÀ
() {

270 
	`•i_£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

271 
	`•i_wrôe
(
BFIN_SPI
, 
MSG_ENABLE_AUDIO
);

272 
	`•i_un£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

273 
	}
}

278 
	$bfö_å™s„r_byã
(
u8
 
d©a
) {

279 
	`gpio_gë_pö_vÆue
(
BFIN_HWAIT_PIN
) > 0) {

280 
	`¥öt_dbg
("\r\n HWAITásserted...");

282 
	`•i_wrôe
(
BFIN_SPI
, 
d©a
);

283 
	}
}

285 
	$bfö_°¨t_å™s„r
() {

287 
	`gpio_£t_gpio_pö
(
BFIN_RESET_PIN
);

289 
	`dñay_ms
(1);

290 
	`gpio_˛r_gpio_pö
(
BFIN_RESET_PIN
);

292 
	`dñay_ms
(1);

293 
	`gpio_£t_gpio_pö
(
BFIN_RESET_PIN
);

295 
	`dñay_ms
(1);

296 
	`•i_£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

297 
	}
}

299 
	$bfö_íd_å™s„r
() {

300 
	`•i_un£À˘Chù
(
BFIN_SPI
, 
BFIN_SPI_NPCS
);

301 
	`¥öt_dbg
("\r\n doneÜoading; waiting... ");

302 
	`dñay_ms
(100);

306 
	}
}

	@src/bfin.h

7 #i‚de‡
_BFIN_H_


8 
	#_BFIN_H_


	)

10 
	~"compûî.h
"

11 
	~"fix.h
"

12 
	~"moduÀ_comm⁄.h
"

13 
	~"∑øm_comm⁄.h
"

14 
	~"ty≥s.h
"

20 
	#BFIN_LDR_MAX_BYTES
 0x10000

	)

23 
bfö_lﬂd_buf
();

26 
bfö_£t_∑øm
(
U8
 
idx
, 
fix16_t
 
vÆ
);

29 
bfö_gë_num_∑øms
(vﬁ©ûê
u32
* 
num
);

33 
bfö_gë_∑øm_desc
(
u16
 
∑ømIdx
, vﬁ©ûê
P¨amDesc
* 
pDesc
);

35 
bfö_gë_moduÀ_«me
(vﬁ©ûê* 
buf
);

37 
bfö_gë_moduÀ_vîsi⁄
(
moduÀVîsi⁄_t
* 
vîs
);

46 
bfö_•i_ma°î
();

48 
bfö_íabÀ
();

	@src/control.c

1 
	~<°rög.h
>

2 
	~"bfö.h
"

3 
	~"c⁄åﬁ.h
"

7 
˘lEvít_t
 
	g˘lBuf
[
CTL_BUF_SIZE
];

9 
u8
 
	g∑ømsDúty
[
DIRTY_BYTES
];

11 
u32
 
	gevCou¡
 = 0;

17 
ölöe
 
u8
 
	$gë_∑øm_dúty
(
u32
 
idx
) {

19  
∑ømsDúty
[
idx
] > 0;

20 
	}
}

21 
	$£t_∑øm_dúty
(
u32
 
idx
) {

23 
∑ømsDúty
[
idx
] = 1;

25 
	}
}

27 
	$˛ór_∑øm_dúty
(
u32
 
idx
) {

28 
∑ømsDúty
[
idx
] = 0;

29 
	}
}

36 
u8
 
	$˘l_∑øm_ch™ge
(
u32
 
idx
, u32 
vÆ
) {

37 
u32
 
i
;

38 if(
	`gë_∑øm_dúty
(
idx
)) {

40 
i
=0; i<
evCou¡
; i++) {

41 if(
˘lBuf
[
i
].
idx
 == idx) {

42 
˘lBuf
[
i
].
vÆ
.
u
 = val;

46  
CTL_REQUEST_OK
;

49 if(
evCou¡
 < 
CTL_BUF_SIZE_1
) {

50 
˘lBuf
[
evCou¡
].
idx
 = idx;

51 
˘lBuf
[
evCou¡
].
vÆ
.
u
 = val;

52 
evCou¡
++;

54 
	`£t_∑øm_dúty
(
idx
);

60 
	}
}

64 
	$˘l_≥rf‹m_œ°_ch™ge
() {

65 
u32
 
idx
;

66 
idx
 = 
˘lBuf
[--
evCou¡
].idx;

67 
	`bfö_£t_∑øm
(
idx
, 
˘lBuf
[
evCou¡
].
vÆ
.
fix
);

68 
	`˛ór_∑øm_dúty
(
idx
);

69 
	}
}

73 
	$˘l_≥rf‹m_Æl_ch™ges
() {

74 
u32
 
idx
, 
i
;

76 
i
=0; i<
evCou¡
; i++) {

77 
idx
 = 
˘lBuf
[
i
].idx;

78 
	`bfö_£t_∑øm
(
idx
, 
˘lBuf
[
i
].
vÆ
.
fix
);

79 
	`˛ór_∑øm_dúty
(
idx
);

81 
evCou¡
 = 0;

82 
	}
}

	@src/control.h

16 #i‚de‡
_ALEPH_BFIN_CONTROL_H_


17 
	#_ALEPH_BFIN_CONTROL_H_


	)

20 
	~"∑øm_comm⁄.h
"

21 
	~"ty≥s.h
"

26 
	#MAX_PARAMS
 256

	)

29 
	#CTL_BUF_SIZE
 32

	)

30 
	#CTL_BUF_SIZE_1
 31

	)

34 
	#CTL_FRAME_DIV
 48

	)

38 
	#DIRTY_BYTES
 
MAX_PARAMS


	)

42 
	#CTL_REQUEST_OK
 0

	)

44 
	#CTL_REQUEST_FULL
 1

	)

47 
	s_˘lEvít
 {

48 
u8
 
	midx
;

49 
pvÆ
 
	mvÆ
;

50 } 
	t˘lEvít_t
;

54 
u8
 
˘l_∑øm_ch™ge
(
u32
 
∑øm
, u32 
vÆue
);

56 
˘l_≥rf‹m_œ°_ch™ge
();

58 
˘l_≥rf‹m_Æl_ch™ges
();

60 
˘l_√xt_‰ame
();

	@src/dummy.h

	@src/encoders.c

6 
	~"compûî.h
"

7 
	~"gpio.h
"

8 
	~"¥öt_funcs.h
"

12 
	~"Æïh_bﬂrd.h
"

13 
	~"evíts.h
"

14 
	~"evít_ty≥s.h
"

15 
	~"ícodîs.h
"

17 
	#ENC_THRESH_DEFAULT
 0

	)

21 
íc_t
 
	gíc
[
NUM_ENC
];

27 c⁄° 
S8
 
	gíc_m≠
[4][4] = { {0,1,-1,0}, {-1,0,0,1}, {1,0,0,-1}, {0,-1,1,0} };

33 
	$öô_ícodîs
() {

34 
U8
 
i
;

36 
íc
[0].
pö
[0] = 
ENC0_S0_PIN
;

37 
íc
[0].
pö
[1] = 
ENC0_S1_PIN
;

38 
íc
[0].
evít
 = 
kEvítEncodî0
;

39 
íc
[1].
pö
[0] = 
ENC1_S0_PIN
;

40 
íc
[1].
pö
[1] = 
ENC1_S1_PIN
;

41 
íc
[1].
evít
 = 
kEvítEncodî1
;

42 
íc
[2].
pö
[0] = 
ENC2_S0_PIN
;

43 
íc
[2].
pö
[1] = 
ENC2_S1_PIN
;

44 
íc
[2].
evít
 = 
kEvítEncodî2
;

45 
íc
[3].
pö
[0] = 
ENC3_S0_PIN
;

46 
íc
[3].
pö
[1] = 
ENC3_S1_PIN
;

47 
íc
[3].
evít
 = 
kEvítEncodî3
;

50 
i
=0; i<
NUM_ENC
; i++) {

51 
íc
[
i
].
pos
 = 
	`gpio_gë_pö_vÆue
”nc[i].
pö
[0]) + (gpio_get_pin_value(enc[i].pin[1]) << 1);

52 
íc
[
i
].
thªsh
 = 
ENC_THRESH_DEFAULT
;

54 
	}
}

57 
	$¥o˚ss_íc
–c⁄° 
U8
 
idx
) {

58 
U8
 
pos
;

60 
pos
 = 
	`gpio_gë_pö_vÆue
(
íc
[
idx
].
pö
[0]) + (gpio_get_pin_value(enc[idx].pin[1]) << 1);

62 i‡(
pos
 !
íc
[
idx
].pos) {

63 
íc
[
idx
].
vÆ
 -
íc_m≠
[íc[idx].
pos
][pos];

64 
íc
[
idx
].
pos
 =Öos;

66 
	}
}

68 
	$£t_íc_thªsh
–c⁄° 
u8
 
idx
, c⁄° u8 
v
 ) {

69 
íc
[
idx
].
thªsh
 = 
v
;

70 
	}
}

	@src/encoders.h

5 #i‚de‡
_ENCODERS_H_


6 
	#_ENCODERS_H_


	)

8 
	~"compûî.h
"

9 
	~"evít_ty≥s.h
"

10 
	~"ty≥s.h
"

12 
	#NUM_ENC
 4

	)

14 
	s_íc
 {

16 
U8
 
	mpö
[2];

18 
U8
 
	mpos
;

20 
S16
 
	mvÆ
;

22 
S16
 
	mthªsh
;

24 
eEvítTy≥
 
	mevít
;

25 } 
	tíc_t
;

28 
íc_t
 
íc
[
NUM_ENC
];

30 
¥o˚ss_íc
–c⁄° 
U8
 
íc
 );

32 
öô_ícodîs
();

34 
£t_íc_thªsh
–c⁄° 
u8
 
idx
, c⁄° u8 
v
 );

	@src/event_types.h

7 #i‚de‡
_EVENT_TYPES_H_


8 
	#_EVENT_TYPES_H_


	)

13 
	mkEvítAdc0
 ,

14 
	mkEvítAdc1
 ,

15 
	mkEvítAdc2
 ,

16 
	mkEvítAdc3
 ,

18 
	mkEvítRe‰esh
,

20 
	mkEvítM⁄omePﬁl
,

22 
	mkEvítM⁄omeRe‰esh
,

31 
	mkEvítFtdiC⁄√˘
,

32 
	mkEvítFtdiDisc⁄√˘
,

33 
	mkEvítHidC⁄√˘
,

34 
	mkEvítHidDisc⁄√˘
,

35 
	mkEvítMidiC⁄√˘
,

36 
	mkEvítMidiDisc⁄√˘
,

52 
	mkEvítEncodî0
,

53 
	mkEvítEncodî1
,

54 
	mkEvítEncodî2
 ,

55 
	mkEvítEncodî3
 ,

57 
	mkEvítSwôch0
,

58 
	mkEvítSwôch1
,

59 
	mkEvítSwôch2
,

60 
	mkEvítSwôch3
,

61 
	mkEvítSwôch4
,

62 
	mkEvítSwôch5
,

63 
	mkEvítSwôch6
,

64 
	mkEvítSwôch7
,

66 
	mkEvítM⁄omeGridKey
,

67 
	mkEvítM⁄omeGridTût
,

68 
	mkEvítM⁄omeRögEnc
,

69 
	mkEvítM⁄omeRögKey
,

71 
	mkNumEvíts
,

72 } 
	teEvítTy≥
;

	@src/events.c

9 
	~"compûî.h
"

10 
	~"¥öt_funcs.h
"

13 
	~"Æïh_bﬂrd.h
"

14 
	~"c⁄f_tc_úq.h
"

15 
	~"evíts.h
"

16 
	~"evít_ty≥s.h
"

21 
	#MAX_EVENTS
 64

	)

24 
	#INCR_EVENT_INDEX
–
x
 ) { i‡–++x =
MAX_EVENTS
 ) x = 0; }

	)

27 
	gputIdx
 = 0;

28 
	ggëIdx
 = 0;

31 
evít_t
 
	gsysEvíts
[ 
MAX_EVENTS
 ];

34 
	$öô_evíts
( ) {

35 
k
;

38 
putIdx
 = 0;

39 
gëIdx
 = 0;

42  
k
 = 0; k < 
MAX_EVENTS
; k++ ) {

43 
sysEvíts
[ 
k
 ].
evítTy≥
 = 0;

44 
sysEvíts
[ 
k
 ].
evítD©a
 = 0;

46 
	}
}

50 
boﬁ
 
	$gë_√xt_evít
–
evít_t
 *
e
 ) {

51 
boﬁ
 
°©us
;

54 
	`˝u_úq_dißbÀ_Àvñ
(
APP_TC_IRQ_PRIORITY
);

57 i‡–
gëIdx
 !
putIdx
 ) {

58 
	`INCR_EVENT_INDEX
–
gëIdx
 );

59 
e
->
evítTy≥
 = 
sysEvíts
[ 
gëIdx
 ].eventType;

60 
e
->
evítD©a
 = 
sysEvíts
[ 
gëIdx
 ].eventData;

61 
°©us
 = 
åue
;

63 
e
->
evítTy≥
 = 0xff;

64 
e
->
evítD©a
 = 0;

65 
°©us
 = 
Ál£
;

68 
	`˝u_úq_íabÀ_Àvñ
(
APP_TC_IRQ_PRIORITY
);

72  
°©us
;

73 
	}
}

77 
boﬁ
 
	$po°_evít
–
evít_t
 *
e
 ) {

78 
boﬁ
 
°©us
 = 
Ál£
;

79 
ßveIndex
;

87 
	`˝u_úq_dißbÀ_Àvñ
(
APP_TC_IRQ_PRIORITY
);

90 
ßveIndex
 = 
putIdx
;

91 
	`INCR_EVENT_INDEX
–
putIdx
 );

92 i‡–
putIdx
 !
gëIdx
 ) {

93 
sysEvíts
[ 
putIdx
 ].
evítTy≥
 = 
e
->eventType;

94 
sysEvíts
[ 
putIdx
 ].
evítD©a
 = 
e
->eventData;

95 
°©us
 = 
åue
;

98 
putIdx
 = 
ßveIndex
;

99 
	`¥öt_dbg
("\r\nÉvent queue full!");

102 
	`˝u_úq_íabÀ_Àvñ
(
APP_TC_IRQ_PRIORITY
);

107  
°©us
;

108 
	}
}

117 
	$¥öt_≥ndög_evíts
() {

118 
u32
 
i
;

119 
i
 = 
gëIdx
;

121 
i
 !
putIdx
) {

122 
	`¥öt_dbg
("\r\nÖending systemÉvents:");

124 
	`¥öt_dbg
("\r\vÉventát idx ");

125 
	`¥öt_dbg_ul⁄g
(
i
);

126 
	`¥öt_dbg
("Åype: ");

127 
	`¥öt_dbg_ul⁄g
–
sysEvíts
[
i
].
evítTy≥
);

128 
	`¥öt_dbg
(" data: 0x");

129 
	`¥öt_dbg_hex
(
sysEvíts
[
i
].
evítTy≥
);

131 
	`INCR_EVENT_INDEX
(
i
);

133 
	}
}

	@src/events.h

5 #i‚de‡
_EVENTS_H_


6 
	#_EVENTS_H_


	)

8 
	~"ty≥s.h
"

11 
U32
 
	mevítTy≥
;

12 
S32
 
	mevítD©a
;

13 } 
	tevít_t
;

18 
öô_evíts
( );

25 
boﬁ
 
gë_√xt_evít
–
evít_t
 *
e
 );

32 
boﬁ
 
po°_evít
–
evít_t
 *
e
 );

39 
¥öt_≥ndög_evíts
();

	@src/fat_io_lib/example.c

1 
	~<°dio.h
>

2 
	~"Át_fûñib.h
"

4 
	$medü_öô
()

8 
	}
}

10 
	$medü_ªad
(
£˘‹
, *
buf„r
, 
£˘‹_cou¡
)

12 
i
;

14 
i
=0;i<
£˘‹_cou¡
;i++)

20 
£˘‹
 ++;

21 
buf„r
 += 512;

25 
	}
}

27 
	$medü_wrôe
(
£˘‹
, *
buf„r
, 
£˘‹_cou¡
)

29 
i
;

31 
i
=0;i<
£˘‹_cou¡
;i++)

37 
£˘‹
 ++;

38 
buf„r
 += 512;

42 
	}
}

44 
	$maö
()

46 
FL_FILE
 *
fûe
;

49 
	`medü_öô
();

52 
	`Ê_öô
();

55 i‡(
	`Ê_©èch_medü
(
medü_ªad
, 
medü_wrôe
Ë!
FAT_INIT_OK
)

57 
	`¥ötf
("ERROR: Mediaáttach failed\n");

62 
	`Ê_li°dúe˘‹y
("/");

65 
fûe
 = 
	`Ê_f›í
("/file.bin", "w");

66 i‡(
fûe
)

69 
d©a
[] = { 1, 2, 3, 4 };

70 i‡(
	`Ê_fwrôe
(
d©a
, 1, (d©a), 
fûe
) != (data))

71 
	`¥ötf
("ERROR: Write file failed\n");

74 
	`¥ötf
("ERROR: Create file failed\n");

77 
	`Ê_f˛o£
(
fûe
);

80 i‡(
	`Ê_ªmove
("/file.bin") < 0)

81 
	`¥ötf
("ERROR: Delete file failed\n");

84 
	`Ê_li°dúe˘‹y
("/");

86 
	`Ê_shutdown
();

87 
	}
}

	@src/fat_io_lib/fat_access.c

32 
	~<°rög.h
>

33 
	~"Át_defs.h
"

34 
	~"Át_ac˚ss.h
"

35 
	~"Át_èbÀ.h
"

36 
	~"Át_wrôe.h
"

37 
	~"Át_°rög.h
"

38 
	~"Át_misc.h
"

40 
	~"¥öt_funcs.h
"

46 
	$Átfs_öô
(
Átfs
 *
fs
)

48 
uöt8
 
num_of_Áts
;

49 
uöt16
 
ª£rved_£˘‹s
;

50 
uöt32
 
FATSz
;

51 
uöt32
 
roŸ_dú_£˘‹s
;

52 
uöt32
 
tŸÆ_£˘‹s
;

53 
uöt32
 
d©a_£˘‹s
;

54 
uöt32
 
cou¡_of_˛u°îs
;

55 
uöt8
 
vÆid_∑πôi⁄
 = 0;

57 
fs
->
cuºít£˘‹
.
addªss
 = 
FAT32_INVALID_CLUSTER
;

58 
fs
->
cuºít£˘‹
.
dúty
 = 0;

60 
fs
->
√xt_‰ì_˛u°î
 = 0;

62 
	`Átfs_Át_öô
(
fs
);

65 i‡(!
fs
->
disk_io
.
ªad_medü
)

66  
FAT_INIT_MEDIA_ACCESS_ERROR
;

72 i‡(!
fs
->
disk_io
.
	`ªad_medü
(0, fs->
cuºít£˘‹
.
£˘‹
, 1))

73  
FAT_INIT_MEDIA_ACCESS_ERROR
;

90 i‡(
fs
->
cuºít£˘‹
.
£˘‹
[
SIGNATURE_POSITION
] != 0x55 || fs->currentsector.sector[SIGNATURE_POSITION+1] != 0xAA)

91  
FAT_INIT_INVALID_SIGNATURE
;

94 i‡(
	`GET_16BIT_WORD
(
fs
->
cuºít£˘‹
.
£˘‹
, 
SIGNATURE_POSITION
Ë!
SIGNATURE_VALUE
)

95  
FAT_INIT_ENDIAN_ERROR
;

104 i‡((
Át_dú_íåy
Ë!
FAT_DIR_ENTRY_SIZE
)

105  
FAT_INIT_STRUCT_PACKING
;

108 
fs
->
cuºít£˘‹
.
£˘‹
[
PARTITION1_TYPECODE_LOCATION
])

116 
vÆid_∑πôi⁄
 = 1;

119 
vÆid_∑πôi⁄
 = 0;

122 i‡(
fs
->
cuºít£˘‹
.
£˘‹
[
PARTITION1_TYPECODE_LOCATION
] <= 0x06)

123 
vÆid_∑πôi⁄
 = 1;

128 i‡(
vÆid_∑πôi⁄
)

129 
fs
->
lba_begö
 = 
	`GET_32BIT_WORD
(fs->
cuºít£˘‹
.
£˘‹
, 
PARTITION1_LBA_BEGIN_LOCATION
);

132 
fs
->
lba_begö
 = 0;

136 i‡(!
fs
->
disk_io
.
	`ªad_medü
(fs->
lba_begö
, fs->
cuºít£˘‹
.
£˘‹
, 1))

137  
FAT_INIT_MEDIA_ACCESS_ERROR
;

140 i‡(
	`GET_16BIT_WORD
(
fs
->
cuºít£˘‹
.
£˘‹
, 0x0BË!
FAT_SECTOR_SIZE
)

141  
FAT_INIT_INVALID_SECTOR_SIZE
;

144 
fs
->
£˘‹s_≥r_˛u°î
 = fs->
cuºít£˘‹
.
£˘‹
[
BPB_SECPERCLUS
];

145 
ª£rved_£˘‹s
 = 
	`GET_16BIT_WORD
(
fs
->
cuºít£˘‹
.
£˘‹
, 
BPB_RSVDSECCNT
);

146 
num_of_Áts
 = 
fs
->
cuºít£˘‹
.
£˘‹
[
BPB_NUMFATS
];

147 
fs
->
roŸ_íåy_cou¡
 = 
	`GET_16BIT_WORD
(fs->
cuºít£˘‹
.
£˘‹
, 
BPB_ROOTENTCNT
);

149 if(
	`GET_16BIT_WORD
(
fs
->
cuºít£˘‹
.
£˘‹
, 
BPB_FATSZ16
) != 0)

150 
fs
->
Át_£˘‹s
 = 
	`GET_16BIT_WORD
(fs->
cuºít£˘‹
.
£˘‹
, 
BPB_FATSZ16
);

152 
fs
->
Át_£˘‹s
 = 
	`GET_32BIT_WORD
(fs->
cuºít£˘‹
.
£˘‹
, 
BPB_FAT32_FATSZ32
);

155 
fs
->
roŸdú_fú°_˛u°î
 = 
	`GET_32BIT_WORD
(fs->
cuºít£˘‹
.
£˘‹
, 
BPB_FAT32_ROOTCLUS
);

156 
fs
->
fs_öfo_£˘‹
 = 
	`GET_16BIT_WORD
(fs->
cuºít£˘‹
.
£˘‹
, 
BPB_FAT32_FSINFO
);

159 
fs
->
roŸdú_fú°_£˘‹
 = 
ª£rved_£˘‹s
 + (
num_of_Áts
 * fs->
Át_£˘‹s
);

160 
fs
->
roŸdú_£˘‹s
 = ((fs->
roŸ_íåy_cou¡
 * 32Ë+ (
FAT_SECTOR_SIZE
 - 1)) / FAT_SECTOR_SIZE;

163 
fs
->
Át_begö_lba
 = fs->
lba_begö
 + 
ª£rved_£˘‹s
;

166 
fs
->
˛u°î_begö_lba
 = fs->
Át_begö_lba
 + (
num_of_Áts
 * fs->
Át_£˘‹s
);

168 i‡(
	`GET_16BIT_WORD
(
fs
->
cuºít£˘‹
.
£˘‹
, 0x1FE) != 0xAA55)

169  
FAT_INIT_INVALID_SIGNATURE
;

172 
roŸ_dú_£˘‹s
 = ((
	`GET_16BIT_WORD
(
fs
->
cuºít£˘‹
.
£˘‹
, 
BPB_ROOTENTCNT
Ë* 32Ë+ (GET_16BIT_WORD(fs->cuºít£˘‹.£˘‹, 
BPB_BYTSPERSEC
) - 1)) / GET_16BIT_WORD(fs->currentsector.sector, BPB_BYTSPERSEC);

174 if(
	`GET_16BIT_WORD
(
fs
->
cuºít£˘‹
.
£˘‹
, 
BPB_FATSZ16
) != 0)

175 
FATSz
 = 
	`GET_16BIT_WORD
(
fs
->
cuºít£˘‹
.
£˘‹
, 
BPB_FATSZ16
);

177 
FATSz
 = 
	`GET_32BIT_WORD
(
fs
->
cuºít£˘‹
.
£˘‹
, 
BPB_FAT32_FATSZ32
);

179 if(
	`GET_16BIT_WORD
(
fs
->
cuºít£˘‹
.
£˘‹
, 
BPB_TOTSEC16
) != 0)

180 
tŸÆ_£˘‹s
 = 
	`GET_16BIT_WORD
(
fs
->
cuºít£˘‹
.
£˘‹
, 
BPB_TOTSEC16
);

182 
tŸÆ_£˘‹s
 = 
	`GET_32BIT_WORD
(
fs
->
cuºít£˘‹
.
£˘‹
, 
BPB_TOTSEC32
);

184 
d©a_£˘‹s
 = 
tŸÆ_£˘‹s
 - (
	`GET_16BIT_WORD
(
fs
->
cuºít£˘‹
.
£˘‹
, 
BPB_RSVDSECCNT
Ë+ (fs->cuºít£˘‹.£˘‹[
BPB_NUMFATS
] * 
FATSz
Ë+ 
roŸ_dú_£˘‹s
);

187 i‡(
fs
->
£˘‹s_≥r_˛u°î
 != 0)

189 
cou¡_of_˛u°îs
 = 
d©a_£˘‹s
 / 
fs
->
£˘‹s_≥r_˛u°î
;

191 if(
cou¡_of_˛u°îs
 < 4085)

193  
FAT_INIT_WRONG_FILESYS_TYPE
;

194 if(
cou¡_of_˛u°îs
 < 65525)

197 
fs
->
roŸdú_fú°_˛u°î
 = 0;

200 
fs
->
Át_ty≥
 = 
FAT_TYPE_16
;

201  
FAT_INIT_OK
;

206 
fs
->
Át_ty≥
 = 
FAT_TYPE_32
;

207  
FAT_INIT_OK
;

211  
FAT_INIT_WRONG_FILESYS_TYPE
;

212 
	}
}

217 
uöt32
 
	$Átfs_lba_of_˛u°î
(
Átfs
 *
fs
, 
uöt32
 
Clu°î_Numbî
)

219 i‡(
fs
->
Át_ty≥
 =
FAT_TYPE_16
)

220  (
fs
->
˛u°î_begö_lba
 + (fs->
roŸ_íåy_cou¡
 * 32 / 
FAT_SECTOR_SIZE
Ë+ ((
Clu°î_Numbî
-2Ë* fs->
£˘‹s_≥r_˛u°î
));

222  ((
fs
->
˛u°î_begö_lba
 + ((
Clu°î_Numbî
-2)*fs->
£˘‹s_≥r_˛u°î
)));

223 
	}
}

227 
	$Átfs_£˘‹_ªad
(
Átfs
 *
fs
, 
uöt32
 
lba
, 
uöt8
 *
èrgë
, uöt32 
cou¡
)

229  
fs
->
disk_io
.
	`ªad_medü
(
lba
, 
èrgë
, 
cou¡
);

230 
	}
}

234 
	$Átfs_£˘‹_wrôe
(
Átfs
 *
fs
, 
uöt32
 
lba
, 
uöt8
 *
èrgë
, uöt32 
cou¡
)

236  
fs
->
disk_io
.
	`wrôe_medü
(
lba
, 
èrgë
, 
cou¡
);

237 
	}
}

242 
	$Átfs_£˘‹_ªadî
(
Átfs
 *
fs
, 
uöt32
 
°¨t_˛u°î
, uöt32 
off£t
, 
uöt8
 *
èrgë
)

244 
uöt32
 
£˘‹_to_ªad
 = 0;

245 
uöt32
 
˛u°î_to_ªad
 = 0;

246 
uöt32
 
˛u°î_chaö
 = 0;

247 
uöt32
 
i
;

248 
uöt32
 
lba
;

251 i‡(
fs
->
Át_ty≥
 =
FAT_TYPE_16
 && 
°¨t_˛u°î
 == 0)

253 i‡(
off£t
 < 
fs
->
roŸdú_£˘‹s
)

254 
lba
 = 
fs
->
lba_begö
 + fs->
roŸdú_fú°_£˘‹
 + 
off£t
;

262 
˛u°î_chaö
 = 
°¨t_˛u°î
;

265 
˛u°î_to_ªad
 = 
off£t
 / 
fs
->
£˘‹s_≥r_˛u°î
;

266 
£˘‹_to_ªad
 = 
off£t
 - (
˛u°î_to_ªad
*
fs
->
£˘‹s_≥r_˛u°î
);

269 
i
=0; i<
˛u°î_to_ªad
; i++)

270 
˛u°î_chaö
 = 
	`Átfs_föd_√xt_˛u°î
(
fs
, cluster_chain);

273 i‡(
˛u°î_chaö
 =
FAT32_LAST_CLUSTER
)

277 
lba
 = 
	`Átfs_lba_of_˛u°î
(
fs
, 
˛u°î_chaö
)+
£˘‹_to_ªad
;

281 i‡(
èrgë
)

282  
fs
->
disk_io
.
	`ªad_medü
(
lba
, 
èrgë
, 1);

284 i‡(
lba
 !
fs
->
cuºít£˘‹
.
addªss
)

286 
fs
->
cuºít£˘‹
.
addªss
 = 
lba
;

287  
fs
->
disk_io
.
	`ªad_medü
(fs->
cuºít£˘‹
.
addªss
, fs->cuºít£˘‹.
£˘‹
, 1);

291 
	}
}

296 
	$Átfs_ªad_£˘‹
(
Átfs
 *
fs
, 
uöt32
 
˛u°î
, uöt32 
£˘‹
, 
uöt8
 *
èrgë
)

299 i‡(
fs
->
Át_ty≥
 =
FAT_TYPE_16
 && 
˛u°î
 == 0)

301 
uöt32
 
lba
;

304 i‡(
£˘‹
 < 
fs
->
roŸdú_£˘‹s
)

305 
lba
 = 
fs
->
lba_begö
 + fs->
roŸdú_fú°_£˘‹
 + 
£˘‹
;

310 i‡(
èrgë
)

313  
fs
->
disk_io
.
	`ªad_medü
(
lba
, 
èrgë
, 1);

318 
fs
->
cuºít£˘‹
.
addªss
 = 
lba
;

321  
fs
->
disk_io
.
	`ªad_medü
(fs->
cuºít£˘‹
.
addªss
, fs->cuºít£˘‹.
£˘‹
, 1);

328 i‡(
èrgë
)

331 
uöt32
 
lba
 = 
	`Átfs_lba_of_˛u°î
(
fs
, 
˛u°î
Ë+ 
£˘‹
;

334  
fs
->
disk_io
.
	`ªad_medü
(
lba
, 
èrgë
, 1);

339 
fs
->
cuºít£˘‹
.
addªss
 = 
	`Átfs_lba_of_˛u°î
(fs, 
˛u°î
)+
£˘‹
;

342  
fs
->
disk_io
.
	`ªad_medü
(fs->
cuºít£˘‹
.
addªss
, fs->cuºít£˘‹.
£˘‹
, 1);

345 
	}
}

350 #i‡
FATFS_INC_WRITE_SUPPORT


351 
	$Átfs_wrôe_£˘‹
(
Átfs
 *
fs
, 
uöt32
 
˛u°î
, uöt32 
£˘‹
, 
uöt8
 *
èrgë
)

354 i‡(!
fs
->
disk_io
.
wrôe_medü
)

358 i‡(
fs
->
Át_ty≥
 =
FAT_TYPE_16
 && 
˛u°î
 == 0)

360 
uöt32
 
lba
;

363 i‡(
£˘‹
 < 
fs
->
roŸdú_£˘‹s
)

364 
lba
 = 
fs
->
lba_begö
 + fs->
roŸdú_fú°_£˘‹
 + 
£˘‹
;

369 i‡(
èrgë
)

372  
fs
->
disk_io
.
	`wrôe_medü
(
lba
, 
èrgë
, 1);

377 
fs
->
cuºít£˘‹
.
addªss
 = 
lba
;

380  
fs
->
disk_io
.
	`wrôe_medü
(fs->
cuºít£˘‹
.
addªss
, fs->cuºít£˘‹.
£˘‹
, 1);

387 i‡(
èrgë
)

390 
uöt32
 
lba
 = 
	`Átfs_lba_of_˛u°î
(
fs
, 
˛u°î
Ë+ 
£˘‹
;

393  
fs
->
disk_io
.
	`wrôe_medü
(
lba
, 
èrgë
, 1);

398 
fs
->
cuºít£˘‹
.
addªss
 = 
	`Átfs_lba_of_˛u°î
(fs, 
˛u°î
)+
£˘‹
;

401  
fs
->
disk_io
.
	`wrôe_medü
(fs->
cuºít£˘‹
.
addªss
, fs->cuºít£˘‹.
£˘‹
, 1);

404 
	}
}

409 
	$Átfs_show_dëaûs
(
Átfs
 *
fs
)

417 
	}
}

422 
uöt32
 
	$Átfs_gë_roŸ_˛u°î
(
Átfs
 *
fs
)

425  
fs
->
roŸdú_fú°_˛u°î
;

426 
	}
}

430 
uöt32
 
	$Átfs_gë_fûe_íåy
(
Átfs
 *
fs
, 
uöt32
 
Clu°î
, *
«me_to_föd
, 
Át_dú_íåy
 *
sfE¡ry
)

432 
uöt8
 
ôem
=0;

433 
uöt16
 
ªc‹doff£t
 = 0;

434 
uöt8
 
i
=0;

435 
x
=0;

436 *
l⁄g_fûíame
 = 
NULL
;

437 
sh‹t_fûíame
[13];

438 
l‚_ˇche
 
l‚
;

439 
dŸRequúed
 = 0;

440 
Át_dú_íåy
 *
dúe˘‹yE¡ry
;

442 
	`Átfs_l‚_ˇche_öô
(&
l‚
, 1);

448 i‡(
	`Átfs_£˘‹_ªadî
(
fs
, 
Clu°î
, 
x
++, 0))

451 
ôem
 = 0; iãm < 
FAT_DIR_ENTRIES_PER_SECTOR
; item++)

454 
ªc‹doff£t
 = 
FAT_DIR_ENTRY_SIZE
 * 
ôem
;

457 
dúe˘‹yE¡ry
 = (
Át_dú_íåy
*)(
fs
->
cuºít£˘‹
.
£˘‹
+
ªc‹doff£t
);

459 #i‡
FATFS_INC_LFN_SUPPORT


461 i‡(
	`Átfs_íåy_l‚_ãxt
(
dúe˘‹yE¡ry
) )

462 
	`Átfs_l‚_ˇche_íåy
(&
l‚
, 
fs
->
cuºít£˘‹
.
£˘‹
+
ªc‹doff£t
);

465 i‡(
	`Átfs_íåy_l‚_övÆid
(
dúe˘‹yE¡ry
) )

466 
	`Átfs_l‚_ˇche_öô
(&
l‚
, 0);

469 i‡(
	`Átfs_íåy_l‚_exi°s
(&
l‚
, 
dúe˘‹yE¡ry
) )

471 
l⁄g_fûíame
 = 
	`Átfs_l‚_ˇche_gë
(&
l‚
);

474 i‡(
	`Átfs_com∑ª_«mes
(
l⁄g_fûíame
, 
«me_to_föd
))

476 
	`mem˝y
(
sfE¡ry
,
dúe˘‹yE¡ry
,(
Át_dú_íåy
));

480 
	`Átfs_l‚_ˇche_öô
(&
l‚
, 0);

485 i‡(
	`Átfs_íåy_s‚_⁄ly
(
dúe˘‹yE¡ry
) )

487 
	`mem£t
(
sh‹t_fûíame
, 0, (short_filename));

490 
i
=0; i<8; i++)

491 
sh‹t_fûíame
[
i
] = 
dúe˘‹yE¡ry
->
Name
[i];

494 
dŸRequúed
 = 0;

495 
i
=8; i<11; i++)

497 
sh‹t_fûíame
[
i
+1] = 
dúe˘‹yE¡ry
->
Name
[i];

498 i‡(
dúe˘‹yE¡ry
->
Name
[
i
] != ' ')

499 
dŸRequúed
 = 1;

503 i‡(
dŸRequúed
)

506 i‡(
sh‹t_fûíame
[0]!='.')

507 
sh‹t_fûíame
[8] = '.';

509 
sh‹t_fûíame
[8] = ' ';

512 
sh‹t_fûíame
[8] = ' ';

515 i‡(
	`Átfs_com∑ª_«mes
(
sh‹t_fûíame
, 
«me_to_föd
))

517 
	`mem˝y
(
sfE¡ry
,
dúe˘‹yE¡ry
,(
Át_dú_íåy
));

521 
	`Átfs_l‚_ˇche_öô
(&
l‚
, 0);

530 
	}
}

535 #i‡
FATFS_INC_WRITE_SUPPORT


536 
	$Átfs_s‚_exi°s
(
Átfs
 *
fs
, 
uöt32
 
Clu°î
, *
sh‹äame
)

538 
uöt8
 
ôem
=0;

539 
uöt16
 
ªc‹doff£t
 = 0;

540 
x
=0;

541 
Át_dú_íåy
 *
dúe˘‹yE¡ry
;

547 i‡(
	`Átfs_£˘‹_ªadî
(
fs
, 
Clu°î
, 
x
++, 0))

550 
ôem
 = 0; iãm < 
FAT_DIR_ENTRIES_PER_SECTOR
; item++)

553 
ªc‹doff£t
 = 
FAT_DIR_ENTRY_SIZE
 * 
ôem
;

556 
dúe˘‹yE¡ry
 = (
Át_dú_íåy
*)(
fs
->
cuºít£˘‹
.
£˘‹
+
ªc‹doff£t
);

558 #i‡
FATFS_INC_LFN_SUPPORT


560 i‡(
	`Átfs_íåy_l‚_ãxt
(
dúe˘‹yE¡ry
) )

564 i‡(
	`Átfs_íåy_l‚_övÆid
(
dúe˘‹yE¡ry
) )

569 i‡(
	`Átfs_íåy_s‚_⁄ly
(
dúe˘‹yE¡ry
) )

571 i‡(
	`°∫cmp
((c⁄° *)
dúe˘‹yE¡ry
->
Name
, 
sh‹äame
, 11)==0)

581 
	}
}

587 #i‡
FATFS_INC_WRITE_SUPPORT


588 
	$Átfs_upd©e_fûe_Àngth
(
Átfs
 *
fs
, 
uöt32
 
Clu°î
, *
sh‹äame
, uöt32 
fûeLígth
)

590 
uöt8
 
ôem
=0;

591 
uöt16
 
ªc‹doff£t
 = 0;

592 
x
=0;

593 
Át_dú_íåy
 *
dúe˘‹yE¡ry
;

596 i‡(!
fs
->
disk_io
.
wrôe_medü
)

603 i‡(
	`Átfs_£˘‹_ªadî
(
fs
, 
Clu°î
, 
x
++, 0))

606 
ôem
 = 0; iãm < 
FAT_DIR_ENTRIES_PER_SECTOR
; item++)

609 
ªc‹doff£t
 = 
FAT_DIR_ENTRY_SIZE
 * 
ôem
;

612 
dúe˘‹yE¡ry
 = (
Át_dú_íåy
*)(
fs
->
cuºít£˘‹
.
£˘‹
+
ªc‹doff£t
);

614 #i‡
FATFS_INC_LFN_SUPPORT


616 i‡(
	`Átfs_íåy_l‚_ãxt
(
dúe˘‹yE¡ry
) )

620 i‡(
	`Átfs_íåy_l‚_övÆid
(
dúe˘‹yE¡ry
) )

626 i‡(
	`Átfs_íåy_s‚_⁄ly
(
dúe˘‹yE¡ry
) )

628 i‡(
	`°∫cmp
((c⁄° *)
dúe˘‹yE¡ry
->
Name
, 
sh‹äame
, 11)==0)

630 
dúe˘‹yE¡ry
->
FûeSize
 = 
	`FAT_HTONL
(
fûeLígth
);

634 
	`mem˝y
((
uöt8
*)(
fs
->
cuºít£˘‹
.
£˘‹
+
ªc‹doff£t
), (uöt8*)
dúe˘‹yE¡ry
, (
Át_dú_íåy
));

637  
fs
->
disk_io
.
	`wrôe_medü
(fs->
cuºít£˘‹
.
addªss
, fs->cuºít£˘‹.
£˘‹
, 1);

647 
	}
}

653 #i‡
FATFS_INC_WRITE_SUPPORT


654 
	$Átfs_m¨k_fûe_dñëed
(
Átfs
 *
fs
, 
uöt32
 
Clu°î
, *
sh‹äame
)

656 
uöt8
 
ôem
=0;

657 
uöt16
 
ªc‹doff£t
 = 0;

658 
x
=0;

659 
Át_dú_íåy
 *
dúe˘‹yE¡ry
;

662 i‡(!
fs
->
disk_io
.
wrôe_medü
)

669 i‡(
	`Átfs_£˘‹_ªadî
(
fs
, 
Clu°î
, 
x
++, 0))

672 
ôem
 = 0; iãm < 
FAT_DIR_ENTRIES_PER_SECTOR
; item++)

675 
ªc‹doff£t
 = 
FAT_DIR_ENTRY_SIZE
 * 
ôem
;

678 
dúe˘‹yE¡ry
 = (
Át_dú_íåy
*)(
fs
->
cuºít£˘‹
.
£˘‹
+
ªc‹doff£t
);

680 #i‡
FATFS_INC_LFN_SUPPORT


682 i‡(
	`Átfs_íåy_l‚_ãxt
(
dúe˘‹yE¡ry
) )

686 i‡(
	`Átfs_íåy_l‚_övÆid
(
dúe˘‹yE¡ry
) )

692 i‡(
	`Átfs_íåy_s‚_⁄ly
(
dúe˘‹yE¡ry
) )

694 i‡(
	`°∫cmp
((c⁄° *)
dúe˘‹yE¡ry
->
Name
, 
sh‹äame
, 11)==0)

697 
dúe˘‹yE¡ry
->
Name
[0] = 
FILE_HEADER_DELETED
;

700 
	`mem˝y
((
uöt8
*)(
fs
->
cuºít£˘‹
.
£˘‹
+
ªc‹doff£t
), (uöt8*)
dúe˘‹yE¡ry
, (
Át_dú_íåy
));

703  
fs
->
disk_io
.
	`wrôe_medü
(fs->
cuºít£˘‹
.
addªss
, fs->cuºít£˘‹.
£˘‹
, 1);

713 
	}
}

718 #i‡
FATFS_DIR_LIST_SUPPORT


719 
	$Átfs_li°_dúe˘‹y_°¨t
(
Átfs
 *
fs
, 
fs_dú_li°_°©us
 *
dúls
, 
uöt32
 
SèπClu°î
)

721 
dúls
->
˛u°î
 = 
SèπClu°î
;

722 
dúls
->
£˘‹
 = 0;

723 
dúls
->
off£t
 = 0;

724 
	}
}

730 #i‡
FATFS_DIR_LIST_SUPPORT


731 
	$Átfs_li°_dúe˘‹y_√xt
(
Átfs
 *
fs
, 
fs_dú_li°_°©us
 *
dúls
, 
fs_dú_ít
 *
íåy
)

733 
uöt8
 
i
,
ôem
;

734 
uöt16
 
ªc‹doff£t
;

735 
Át_dú_íåy
 *
dúe˘‹yE¡ry
;

736 *
l⁄g_fûíame
 = 
NULL
;

737 
sh‹t_fûíame
[13];

738 
l‚_ˇche
 
l‚
;

739 
dŸRequúed
 = 0;

740 
ªsu…
 = 0;

743 
	`Átfs_l‚_ˇche_öô
(&
l‚
, 0);

748 i‡(
	`Átfs_£˘‹_ªadî
(
fs
, 
dúls
->
˛u°î
, dúls->
£˘‹
, 0))

751 
ôem
 = 
dúls
->
off£t
; iãm < 
FAT_DIR_ENTRIES_PER_SECTOR
; item++)

754 
ªc‹doff£t
 = 
FAT_DIR_ENTRY_SIZE
 * 
ôem
;

757 
dúe˘‹yE¡ry
 = (
Át_dú_íåy
*)(
fs
->
cuºít£˘‹
.
£˘‹
+
ªc‹doff£t
);

759 #i‡
FATFS_INC_LFN_SUPPORT


761 i‡–
	`Átfs_íåy_l‚_ãxt
(
dúe˘‹yE¡ry
) )

762 
	`Átfs_l‚_ˇche_íåy
(&
l‚
, 
fs
->
cuºít£˘‹
.
£˘‹
+
ªc‹doff£t
);

765 i‡–
	`Átfs_íåy_l‚_övÆid
(
dúe˘‹yE¡ry
) )

766 
	`Átfs_l‚_ˇche_öô
(&
l‚
, 0);

769 i‡(
	`Átfs_íåy_l‚_exi°s
(&
l‚
, 
dúe˘‹yE¡ry
) )

772 
l⁄g_fûíame
 = 
	`Átfs_l‚_ˇche_gë
(&
l‚
);

773 
	`°∫˝y
(
íåy
->
fûíame
, 
l⁄g_fûíame
, 
FATFS_MAX_LONG_FILENAME
-1);

775 i‡(
	`Átfs_íåy_is_dú
(
dúe˘‹yE¡ry
))

776 
íåy
->
is_dú
 = 1;

778 
íåy
->
is_dú
 = 0;

780 
íåy
->
size
 = 
	`FAT_HTONL
(
dúe˘‹yE¡ry
->
FûeSize
);

781 
íåy
->
˛u°î
 = (
	`FAT_HTONS
(
dúe˘‹yE¡ry
->
F°ClusHI
)<<16Ë| FAT_HTONS(dúe˘‹yE¡ry->
F°ClusLO
);

784 
dúls
->
off£t
 = 
ôem
 + 1;

785 
ªsu…
 = 1;

791 i‡–
	`Átfs_íåy_s‚_⁄ly
(
dúe˘‹yE¡ry
) )

793 
	`Átfs_l‚_ˇche_öô
(&
l‚
, 0);

795 
	`mem£t
(
sh‹t_fûíame
, 0, (short_filename));

798 
i
=0; i<8; i++)

799 
sh‹t_fûíame
[
i
] = 
dúe˘‹yE¡ry
->
Name
[i];

802 
dŸRequúed
 = 0;

803 
i
=8; i<11; i++)

805 
sh‹t_fûíame
[
i
+1] = 
dúe˘‹yE¡ry
->
Name
[i];

806 i‡(
dúe˘‹yE¡ry
->
Name
[
i
] != ' ')

807 
dŸRequúed
 = 1;

811 i‡(
dŸRequúed
)

814 i‡(
sh‹t_fûíame
[0]!='.')

815 
sh‹t_fûíame
[8] = '.';

817 
sh‹t_fûíame
[8] = ' ';

820 
sh‹t_fûíame
[8] = ' ';

822 
	`Átfs_gë_s‚_di•œy_«me
(
íåy
->
fûíame
, 
sh‹t_fûíame
);

824 i‡(
	`Átfs_íåy_is_dú
(
dúe˘‹yE¡ry
))

825 
íåy
->
is_dú
 = 1;

827 
íåy
->
is_dú
 = 0;

829 
íåy
->
size
 = 
	`FAT_HTONL
(
dúe˘‹yE¡ry
->
FûeSize
);

830 
íåy
->
˛u°î
 = (
	`FAT_HTONS
(
dúe˘‹yE¡ry
->
F°ClusHI
)<<16Ë| FAT_HTONS(dúe˘‹yE¡ry->
F°ClusLO
);

833 
dúls
->
off£t
 = 
ôem
 + 1;

834 
ªsu…
 = 1;

840 
dúls
->
£˘‹
++;

841 
dúls
->
off£t
 = 0;

847  
ªsu…
;

848 
	}
}

	@src/fat_io_lib/fat_access.h

1 #i‚de‡
__FAT_ACCESS_H__


2 
	#__FAT_ACCESS_H__


	)

4 
	~"Át_defs.h
"

5 
	~"Át_›ts.h
"

10 
	#FAT_INIT_OK
 0

	)

11 
	#FAT_INIT_MEDIA_ACCESS_ERROR
 (-1)

	)

12 
	#FAT_INIT_INVALID_SECTOR_SIZE
 (-2)

	)

13 
	#FAT_INIT_INVALID_SIGNATURE
 (-3)

	)

14 
	#FAT_INIT_ENDIAN_ERROR
 (-4)

	)

15 
	#FAT_INIT_WRONG_FILESYS_TYPE
 (-5)

	)

16 
	#FAT_INIT_WRONG_PARTITION_TYPE
 (-6)

	)

17 
	#FAT_INIT_STRUCT_PACKING
 (-7)

	)

19 
	#FAT_DIR_ENTRIES_PER_SECTOR
 (
FAT_SECTOR_SIZE
 / 
FAT_DIR_ENTRY_SIZE
)

	)

24 (*
	t‚_diskio_ªad
Ë(
	tuöt32
 
	t£˘‹
, 
	tuöt8
 *
	tbuf„r
, uöt32 
	t£˘‹_cou¡
);

25 (*
	t‚_diskio_wrôe
)(
	tuöt32
 
	t£˘‹
, 
	tuöt8
 *
	tbuf„r
, uöt32 
	t£˘‹_cou¡
);

30 
	sdisk_if


33 
‚_diskio_ªad
 
ªad_medü
;

34 
‚_diskio_wrôe
 
wrôe_medü
;

38 
Át_buf„r
;

40 
	sÁt_buf„r


42 
uöt8
 
£˘‹
[
FAT_SECTOR_SIZE
 * 
FAT_BUFFER_SECTORS
];

43 
uöt32
 
addªss
;

44 
dúty
;

45 
uöt8
 * 
±r
;

48 
Át_buf„r
 *
√xt
;

51 
	eeF©Ty≥


53 
FAT_TYPE_16
,

54 
FAT_TYPE_32


55 } 
	ttF©Ty≥
;

57 
	sÁtfs


60 
uöt8
 
£˘‹s_≥r_˛u°î
;

61 
uöt32
 
˛u°î_begö_lba
;

62 
uöt32
 
roŸdú_fú°_˛u°î
;

63 
uöt32
 
roŸdú_fú°_£˘‹
;

64 
uöt32
 
roŸdú_£˘‹s
;

65 
uöt32
 
Át_begö_lba
;

66 
uöt16
 
fs_öfo_£˘‹
;

67 
uöt32
 
lba_begö
;

68 
uöt32
 
Át_£˘‹s
;

69 
uöt32
 
√xt_‰ì_˛u°î
;

70 
uöt16
 
roŸ_íåy_cou¡
;

71 
uöt16
 
ª£rved_£˘‹s
;

72 
uöt8
 
num_of_Áts
;

73 
tF©Ty≥
 
Át_ty≥
;

76 
disk_if
 
disk_io
;

79 (*
Ê_lock
)();

80 (*
Ê_u∆ock
)();

83 
Át_buf„r
 
cuºít£˘‹
;

86 
Át_buf„r
 *
Át_buf„r_hód
;

87 
Át_buf„r
 
Át_buf„rs
[
FAT_BUFFERS
];

90 
	sfs_dú_li°_°©us


92 
uöt32
 
£˘‹
;

93 
uöt32
 
˛u°î
;

94 
uöt8
 
off£t
;

97 
	sfs_dú_ít


99 
fûíame
[
FATFS_MAX_LONG_FILENAME
];

100 
uöt8
 
is_dú
;

101 
uöt32
 
˛u°î
;

102 
uöt32
 
size
;

108 
	`Átfs_öô
(
Átfs
 *
fs
);

109 
uöt32
 
	`Átfs_lba_of_˛u°î
(
Átfs
 *
fs
, uöt32 
Clu°î_Numbî
);

110 
	`Átfs_£˘‹_ªadî
(
Átfs
 *
fs
, 
uöt32
 
Sèπ˛u°î
, uöt32 
off£t
, 
uöt8
 *
èrgë
);

111 
	`Átfs_£˘‹_ªad
(
Átfs
 *
fs
, 
uöt32
 
lba
, 
uöt8
 *
èrgë
, uöt32 
cou¡
);

112 
	`Átfs_£˘‹_wrôe
(
Átfs
 *
fs
, 
uöt32
 
lba
, 
uöt8
 *
èrgë
, uöt32 
cou¡
);

113 
	`Átfs_ªad_£˘‹
(
Átfs
 *
fs
, 
uöt32
 
˛u°î
, uöt32 
£˘‹
, 
uöt8
 *
èrgë
);

114 
	`Átfs_wrôe_£˘‹
(
Átfs
 *
fs
, 
uöt32
 
˛u°î
, uöt32 
£˘‹
, 
uöt8
 *
èrgë
);

115 
	`Átfs_show_dëaûs
(
Átfs
 *
fs
);

116 
uöt32
 
	`Átfs_gë_roŸ_˛u°î
(
Átfs
 *
fs
);

117 
uöt32
 
	`Átfs_gë_fûe_íåy
(
Átfs
 *
fs
, uöt32 
Clu°î
, *
«mëoföd
, 
Át_dú_íåy
 *
sfE¡ry
);

118 
	`Átfs_s‚_exi°s
(
Átfs
 *
fs
, 
uöt32
 
Clu°î
, *
sh‹äame
);

119 
	`Átfs_upd©e_fûe_Àngth
(
Átfs
 *
fs
, 
uöt32
 
Clu°î
, *
sh‹äame
, uöt32 
fûeLígth
);

120 
	`Átfs_m¨k_fûe_dñëed
(
Átfs
 *
fs
, 
uöt32
 
Clu°î
, *
sh‹äame
);

121 
	`Átfs_li°_dúe˘‹y_°¨t
(
Átfs
 *
fs
, 
fs_dú_li°_°©us
 *
dúls
, 
uöt32
 
SèπClu°î
);

122 
	`Átfs_li°_dúe˘‹y_√xt
(
Átfs
 *
fs
, 
fs_dú_li°_°©us
 *
dúls
, 
fs_dú_ít
 *
íåy
);

	@src/fat_io_lib/fat_cache.c

32 
	~<°rög.h
>

33 
	~"Át_ˇche.h
"

42 
	$Átfs_ˇche_öô
(
Átfs
 *
fs
, 
FL_FILE
 *
fûe
)

44 #ifde‡
FAT_CLUSTER_CACHE_ENTRIES


45 
i
;

47 
i
=0;i<
FAT_CLUSTER_CACHE_ENTRIES
;i++)

49 
fûe
->
˛u°î_ˇche_idx
[
i
] = 0xFFFFFFFF;

50 
fûe
->
˛u°î_ˇche_d©a
[
i
] = 0;

55 
	}
}

59 
	$Átfs_ˇche_gë_√xt_˛u°î
(
Átfs
 *
fs
, 
FL_FILE
 *
fûe
, 
uöt32
 
˛u°îIdx
, uöt32 *
pNextClu°î
)

61 #ifde‡
FAT_CLUSTER_CACHE_ENTRIES


62 
uöt32
 
¶Ÿ
 = 
˛u°îIdx
 % 
FAT_CLUSTER_CACHE_ENTRIES
;

64 i‡(
fûe
->
˛u°î_ˇche_idx
[
¶Ÿ
] =
˛u°îIdx
)

66 *
pNextClu°î
 = 
fûe
->
˛u°î_ˇche_d©a
[
¶Ÿ
];

72 
	}
}

76 
	$Átfs_ˇche_£t_√xt_˛u°î
(
Átfs
 *
fs
, 
FL_FILE
 *
fûe
, 
uöt32
 
˛u°îIdx
, uöt32 
√xtClu°î
)

78 #ifde‡
FAT_CLUSTER_CACHE_ENTRIES


79 
uöt32
 
¶Ÿ
 = 
˛u°îIdx
 % 
FAT_CLUSTER_CACHE_ENTRIES
;

81 i‡(
fûe
->
˛u°î_ˇche_idx
[
¶Ÿ
] =
˛u°îIdx
)

82 
fûe
->
˛u°î_ˇche_d©a
[
¶Ÿ
] = 
√xtClu°î
;

85 
fûe
->
˛u°î_ˇche_idx
[
¶Ÿ
] = 
˛u°îIdx
;

86 
fûe
->
˛u°î_ˇche_d©a
[
¶Ÿ
] = 
√xtClu°î
;

91 
	}
}

	@src/fat_io_lib/fat_cache.h

1 #i‚de‡
__FAT_CACHE_H__


2 
	#__FAT_CACHE_H__


	)

4 
	~"Át_fûñib.h
"

9 
Átfs_ˇche_öô
(
Átfs
 *
fs
, 
FL_FILE
 *
fûe
);

10 
Átfs_ˇche_gë_√xt_˛u°î
(
Átfs
 *
fs
, 
FL_FILE
 *
fûe
, 
uöt32
 
˛u°îIdx
, uöt32 *
pNextClu°î
);

11 
Átfs_ˇche_£t_√xt_˛u°î
(
Átfs
 *
fs
, 
FL_FILE
 *
fûe
, 
uöt32
 
˛u°îIdx
, uöt32 
√xtClu°î
);

	@src/fat_io_lib/fat_defs.h

1 #i‚de‡
__FAT_DEFS_H__


2 
	#__FAT_DEFS_H__


	)

4 
	~"Át_›ts.h
"

5 
	~"Át_ty≥s.h
"

13 
	#BS_JMPBOOT
 0

14 
	#BS_OEMNAME
 3

15 
	#BPB_BYTSPERSEC
 11

16 
	#BPB_SECPERCLUS
 13

17 
	#BPB_RSVDSECCNT
 14

18 
	#BPB_NUMFATS
 16

19 
	#BPB_ROOTENTCNT
 17

20 
	#BPB_TOTSEC16
 19

21 
	#BPB_MEDIA
 21

22 
	#BPB_FATSZ16
 22

23 
	#BPB_SECPERTRK
 24

24 
	#BPB_NUMHEADS
 26

25 
	#BPB_HIDDSEC
 28

26 
	#BPB_TOTSEC32
 32

27 

	)

29 
	#BS_FAT_DRVNUM
 36

30 
	#BS_FAT_BOOTSIG
 38

31 
	#BS_FAT_VOLID
 39

32 
	#BS_FAT_VOLLAB
 43

33 
	#BS_FAT_FILSYSTYPE
 54

34 

	)

36 
	#BPB_FAT32_FATSZ32
 36

37 
	#BPB_FAT32_EXTFLAGS
 40

38 
	#BPB_FAT32_FSVER
 42

39 
	#BPB_FAT32_ROOTCLUS
 44

40 
	#BPB_FAT32_FSINFO
 48

41 
	#BPB_FAT32_BKBOOTSEC
 50

42 
	#BS_FAT32_DRVNUM
 64

43 
	#BS_FAT32_BOOTSIG
 66

44 
	#BS_FAT32_VOLID
 67

45 
	#BS_FAT32_VOLLAB
 71

46 
	#BS_FAT32_FILSYSTYPE
 82

47 

	)

51 
	#FAT_TYPE_FAT12
 1

	)

52 
	#FAT_TYPE_FAT16
 2

	)

53 
	#FAT_TYPE_FAT32
 3

	)

58 
	#SIGNATURE_POSITION
 510

	)

59 
	#SIGNATURE_VALUE
 0xAA55

	)

60 
	#PARTITION1_TYPECODE_LOCATION
 450

	)

61 
	#FAT32_TYPECODE1
 0x0B

	)

62 
	#FAT32_TYPECODE2
 0x0C

	)

63 
	#PARTITION1_LBA_BEGIN_LOCATION
 454

	)

64 
	#PARTITION1_SIZE_LOCATION
 458

	)

66 
	#FAT_DIR_ENTRY_SIZE
 32

	)

67 
	#FAT_SFN_SIZE_FULL
 11

	)

68 
	#FAT_SFN_SIZE_PARTIAL
 8

	)

73 
	#FILE_ATTR_READ_ONLY
 0x01

	)

74 
	#FILE_ATTR_HIDDEN
 0x02

	)

75 
	#FILE_ATTR_SYSTEM
 0x04

	)

76 
	#FILE_ATTR_SYSHID
 0x06

	)

77 
	#FILE_ATTR_VOLUME_ID
 0x08

	)

78 
	#FILE_ATTR_DIRECTORY
 0x10

	)

79 
	#FILE_ATTR_ARCHIVE
 0x20

	)

80 
	#FILE_ATTR_LFN_TEXT
 0x0F

	)

81 
	#FILE_HEADER_BLANK
 0x00

	)

82 
	#FILE_HEADER_DELETED
 0xE5

	)

83 
	#FILE_TYPE_DIR
 0x10

	)

84 
	#FILE_TYPE_FILE
 0x20

	)

89 
	#FAT32_LAST_CLUSTER
 0xFFFFFFFF

	)

90 
	#FAT32_INVALID_CLUSTER
 0xFFFFFFFF

	)

92 
STRUCT_PACK_BEGIN


93 
Át_dú_íåy
 
	gSTRUCT_PACK


95 
uöt8
 
	gName
[11];

96 
uöt8
 
	gAâr
;

97 
uöt8
 
	gNTRes
;

98 
uöt8
 
	gCπTimeTíth
;

99 
uöt8
 
	gCπTime
[2];

100 
uöt8
 
	gCπD©e
[2];

101 
uöt8
 
	gL°AccD©e
[2];

102 
uöt16
 
	gF°ClusHI
;

103 
uöt8
 
	gWπTime
[2];

104 
uöt8
 
	gWπD©e
[2];

105 
uöt16
 
	gF°ClusLO
;

106 
uöt32
 
	gFûeSize
;

107 } 
	gSTRUCT_PACKED
;

108 
	gSTRUCT_PACK_END


	@src/fat_io_lib/fat_filelib.c

35 
	~<°dlib.h
>

36 
	~<°rög.h
>

37 
	~"Át_defs.h
"

38 
	~"Át_ac˚ss.h
"

39 
	~"Át_èbÀ.h
"

40 
	~"Át_wrôe.h
"

41 
	~"Át_misc.h
"

42 
	~"Át_°rög.h
"

43 
	~"Át_fûñib.h
"

44 
	~"Át_ˇche.h
"

46 
	~"¥öt_funcs.h
"

51 
FL_FILE
 
	g_fûes
[
FATFS_MAX_OPEN_FILES
];

52 
	g_fûñib_öô
 = 0;

53 
	g_fûñib_vÆid
 = 0;

54 
Átfs
 
	g_fs
;

55 
Át_li°
 
	g_›í_fûe_li°
;

56 
Át_li°
 
	g_‰ì_fûe_li°
;

63 
	#CHECK_FL_INIT
(Ë{ i‡(
_fûñib_öô
==0Ë
	`Ê_öô
(); }

	)

65 
	#FL_LOCK
(
a
Ëdÿ{ i‡(◊)->
Ê_lock
Ë◊)->
	`Ê_lock
(); } 0)

	)

66 
	#FL_UNLOCK
(
a
Ëdÿ{ i‡(◊)->
Ê_u∆ock
Ë◊)->
	`Ê_u∆ock
(); } 0)

	)

76 
FL_FILE
* 
	$_Æloˇã_fûe
()

79 
Át_node
 *
node
 = 
	`Át_li°_p›_hód
(&
_‰ì_fûe_li°
);

82 i‡(
node
)

83 
	`Át_li°_ö£π_œ°
(&
_›í_fûe_li°
, 
node
);

85  
	`Át_li°_íåy
(
node
, 
FL_FILE
, 
li°_node
);

86 
	}
}

90 
	$_check_fûe_›í
(
FL_FILE
* 
fûe
)

92 
Át_node
 *
node
;

95 
	`Át_li°_f‹_óch
(&
_›í_fûe_li°
, 
node
)

97 
FL_FILE
* 
›íFûe
 = 
	`Át_li°_íåy
(
node
, FL_FILE, 
li°_node
);

100 i‡(
›íFûe
 !
fûe
)

103 i‡–(
	`Átfs_com∑ª_«mes
(
›íFûe
->
∑th
,
fûe
->∑th)Ë&& (Átfs_com∑ª_«mes(›íFûe->
fûíame
,file->filename)) )

109 
	}
}

113 
	$_‰ì_fûe
(
FL_FILE
* 
fûe
)

116 
	`Át_li°_ªmove
(&
_›í_fûe_li°
, &
fûe
->
li°_node
);

119 
	`Át_li°_ö£π_œ°
(&
_‰ì_fûe_li°
, &
fûe
->
li°_node
);

120 
	}
}

130 
	$_›í_dúe˘‹y
(*
∑th
, 
uöt32
 *
∑thClu°î
)

132 
Àvñs
;

133 
subÀvñ
;

134 
cuºítfﬁdî
[
FATFS_MAX_LONG_FILENAME
];

135 
Át_dú_íåy
 
sfE¡ry
;

136 
uöt32
 
°¨t˛u°î
;

139 
°¨t˛u°î
 = 
	`Átfs_gë_roŸ_˛u°î
(&
_fs
);

142 
Àvñs
 = 
	`Átfs_tŸÆ_∑th_Àvñs
(
∑th
);

145 
subÀvñ
=0;subÀvñ<(
Àvñs
+1);sublevel++)

147 i‡(
	`Átfs_gë_sub°rög
(
∑th
, 
subÀvñ
, 
cuºítfﬁdî
, (currentfolder)) == -1)

151 i‡(
	`Átfs_gë_fûe_íåy
(&
_fs
, 
°¨t˛u°î
, 
cuºítfﬁdî
,&
sfE¡ry
))

154 i‡(
	`Átfs_íåy_is_dú
(&
sfE¡ry
))

155 
°¨t˛u°î
 = ((
	`FAT_HTONS
((
uöt32
)
sfE¡ry
.
F°ClusHI
))<<16Ë+ FAT_HTONS(sfE¡ry.
F°ClusLO
);

163 *
∑thClu°î
 = 
°¨t˛u°î
;

165 
	}
}

169 #i‡
FATFS_INC_WRITE_SUPPORT


170 
	$_¸óã_dúe˘‹y
(*
∑th
)

172 
FL_FILE
* 
fûe
;

173 
Át_dú_íåy
 
sfE¡ry
;

174 
sh‹tFûíame
[
FAT_SFN_SIZE_FULL
];

175 
èûNum
 = 0;

176 
i
;

179 
fûe
 = 
	`_Æloˇã_fûe
();

180 i‡(!
fûe
)

184 
	`mem£t
(
fûe
->
∑th
, '\0', (file->path));

185 
	`mem£t
(
fûe
->
fûíame
, '\0', (file->filename));

188 i‡(
	`Átfs_•lô_∑th
((*)
∑th
, 
fûe
->∑th, (fûe->∑th), fûe->
fûíame
, (file->filename)) == -1)

190 
	`_‰ì_fûe
(
fûe
);

195 i‡(
	`_check_fûe_›í
(
fûe
))

197 
	`_‰ì_fûe
(
fûe
);

202 i‡(
fûe
->
∑th
[0] == 0)

203 
fûe
->
∑ª¡˛u°î
 = 
	`Átfs_gë_roŸ_˛u°î
(&
_fs
);

207 i‡(!
	`_›í_dúe˘‹y
(
fûe
->
∑th
, &fûe->
∑ª¡˛u°î
))

209 
	`_‰ì_fûe
(
fûe
);

215 i‡(
	`Átfs_gë_fûe_íåy
(&
_fs
, 
fûe
->
∑ª¡˛u°î
, fûe->
fûíame
,&
sfE¡ry
) == 1)

217 
	`_‰ì_fûe
(
fûe
);

221 
fûe
->
°¨t˛u°î
 = 0;

224 i‡(!
	`Átfs_Æloˇã_‰ì_•a˚
(&
_fs
, 1, &
fûe
->
°¨t˛u°î
, 1))

226 
	`_‰ì_fûe
(
fûe
);

231 
	`mem£t
(
fûe
->
fûe_d©a_£˘‹
, 0x00, 
FAT_SECTOR_SIZE
);

232 
i
=0;i<
_fs
.
£˘‹s_≥r_˛u°î
;i++)

234 i‡(!
	`Átfs_wrôe_£˘‹
(&
_fs
, 
fûe
->
°¨t˛u°î
, 
i
, fûe->
fûe_d©a_£˘‹
))

236 
	`_‰ì_fûe
(
fûe
);

241 #i‡
FATFS_INC_LFN_SUPPORT


244 
èûNum
 = 0;

248 
	`Átfs_l‚_¸óã_s‚
(
sh‹tFûíame
, 
fûe
->
fûíame
);

251 i‡(
èûNum
 != 0)

252 
	`Átfs_l‚_gíî©e_èû
((*)
fûe
->
sh‹tfûíame
, 
sh‹tFûíame
, 
èûNum
);

255 
	`mem˝y
(
fûe
->
sh‹tfûíame
, 
sh‹tFûíame
, 
FAT_SFN_SIZE_FULL
);

258 i‡(
	`Átfs_s‚_exi°s
(&
_fs
, 
fûe
->
∑ª¡˛u°î
, (*)fûe->
sh‹tfûíame
) == 0)

261 
èûNum
++;

263 
èûNum
 < 9999);

266 i‡(
èûNum
 == 9999)

269 
	`Átfs_‰ì_˛u°î_chaö
(&
_fs
, 
fûe
->
°¨t˛u°î
);

271 
	`_‰ì_fûe
(
fûe
);

276 i‡(!
	`Átfs_l‚_¸óã_s‚
(
sh‹tFûíame
, 
fûe
->
fûíame
))

279 
	`Átfs_‰ì_˛u°î_chaö
(&
_fs
, 
fûe
->
°¨t˛u°î
);

281 
	`_‰ì_fûe
(
fûe
);

286 
	`mem˝y
(
fûe
->
sh‹tfûíame
, 
sh‹tFûíame
, 
FAT_SFN_SIZE_FULL
);

289 i‡(
	`Átfs_s‚_exi°s
(&
_fs
, 
fûe
->
∑ª¡˛u°î
, (*)fûe->
sh‹tfûíame
))

292 
	`Átfs_‰ì_˛u°î_chaö
(&
_fs
, 
fûe
->
°¨t˛u°î
);

294 
	`_‰ì_fûe
(
fûe
);

300 i‡(!
	`Átfs_add_fûe_íåy
(&
_fs
, 
fûe
->
∑ª¡˛u°î
, (*)fûe->
fûíame
, (*)fûe->
sh‹tfûíame
, fûe->
°¨t˛u°î
, 0, 1))

303 
	`Átfs_‰ì_˛u°î_chaö
(&
_fs
, 
fûe
->
°¨t˛u°î
);

305 
	`_‰ì_fûe
(
fûe
);

310 
fûe
->
fûñígth
 = 0;

311 
fûe
->
byãnum
 = 0;

312 
fûe
->
fûe_d©a_addªss
 = 0xFFFFFFFF;

313 
fûe
->
fûe_d©a_dúty
 = 0;

314 
fûe
->
fûñígth_ch™ged
 = 0;

317 
fûe
->
œ°_Át_lookup
.
Clu°îIdx
 = 0xFFFFFFFF;

318 
fûe
->
œ°_Át_lookup
.
CuºítClu°î
 = 0xFFFFFFFF;

320 
	`Átfs_Át_purge
(&
_fs
);

322 
	`_‰ì_fûe
(
fûe
);

324 
	}
}

329 
FL_FILE
* 
	$_›í_fûe
(c⁄° *
∑th
)

331 
FL_FILE
* 
fûe
;

332 
Át_dú_íåy
 
sfE¡ry
;

335 
fûe
 = 
	`_Æloˇã_fûe
();

336 i‡(!
fûe
)

337  
NULL
;

340 
	`mem£t
(
fûe
->
∑th
, '\0', (file->path));

341 
	`mem£t
(
fûe
->
fûíame
, '\0', (file->filename));

344 i‡(
	`Átfs_•lô_∑th
((*)
∑th
, 
fûe
->∑th, (fûe->∑th), fûe->
fûíame
, (file->filename)) == -1)

346 
	`_‰ì_fûe
(
fûe
);

347  
NULL
;

351 i‡(
	`_check_fûe_›í
(
fûe
))

353 
	`_‰ì_fûe
(
fûe
);

354  
NULL
;

358 i‡(
fûe
->
∑th
[0]==0)

359 
fûe
->
∑ª¡˛u°î
 = 
	`Átfs_gë_roŸ_˛u°î
(&
_fs
);

363 i‡(!
	`_›í_dúe˘‹y
(
fûe
->
∑th
, &fûe->
∑ª¡˛u°î
))

365 
	`_‰ì_fûe
(
fûe
);

366  
NULL
;

371 i‡(
	`Átfs_gë_fûe_íåy
(&
_fs
, 
fûe
->
∑ª¡˛u°î
, fûe->
fûíame
,&
sfE¡ry
))

373 i‡(
	`Átfs_íåy_is_fûe
(&
sfE¡ry
))

376 
	`mem˝y
(
fûe
->
sh‹tfûíame
, 
sfE¡ry
.
Name
, 
FAT_SFN_SIZE_FULL
);

377 
fûe
->
fûñígth
 = 
	`FAT_HTONL
(
sfE¡ry
.
FûeSize
);

378 
fûe
->
byãnum
 = 0;

379 
fûe
->
°¨t˛u°î
 = ((
	`FAT_HTONS
((
uöt32
)
sfE¡ry
.
F°ClusHI
))<<16Ë+ FAT_HTONS(sfE¡ry.
F°ClusLO
);

380 
fûe
->
fûe_d©a_addªss
 = 0xFFFFFFFF;

381 
fûe
->
fûe_d©a_dúty
 = 0;

382 
fûe
->
fûñígth_ch™ged
 = 0;

385 
fûe
->
œ°_Át_lookup
.
Clu°îIdx
 = 0xFFFFFFFF;

386 
fûe
->
œ°_Át_lookup
.
CuºítClu°î
 = 0xFFFFFFFF;

388 
	`Átfs_ˇche_öô
(&
_fs
, 
fûe
);

390 
	`Átfs_Át_purge
(&
_fs
);

392  
fûe
;

395 
	`_‰ì_fûe
(
fûe
);

396  
NULL
;

397 
	}
}

401 #i‡
FATFS_INC_WRITE_SUPPORT


402 
FL_FILE
* 
	$_¸óã_fûe
(c⁄° *
fûíame
)

404 
FL_FILE
* 
fûe
;

405 
Át_dú_íåy
 
sfE¡ry
;

406 
sh‹tFûíame
[
FAT_SFN_SIZE_FULL
];

407 
èûNum
 = 0;

410 i‡(!
_fs
.
disk_io
.
wrôe_medü
)

411  
NULL
;

414 
fûe
 = 
	`_Æloˇã_fûe
();

415 i‡(!
fûe
)

416  
NULL
;

419 
	`mem£t
(
fûe
->
∑th
, '\0', (file->path));

420 
	`mem£t
(
fûe
->
fûíame
, '\0', (file->filename));

423 i‡(
	`Átfs_•lô_∑th
((*)
fûíame
, 
fûe
->
∑th
, (file->path), file->filename, (file->filename)) == -1)

425 
	`_‰ì_fûe
(
fûe
);

426  
NULL
;

430 i‡(
	`_check_fûe_›í
(
fûe
))

432 
	`_‰ì_fûe
(
fûe
);

433  
NULL
;

437 i‡(
fûe
->
∑th
[0] == 0)

438 
fûe
->
∑ª¡˛u°î
 = 
	`Átfs_gë_roŸ_˛u°î
(&
_fs
);

442 i‡(!
	`_›í_dúe˘‹y
(
fûe
->
∑th
, &fûe->
∑ª¡˛u°î
))

444 
	`_‰ì_fûe
(
fûe
);

445  
NULL
;

450 i‡(
	`Átfs_gë_fûe_íåy
(&
_fs
, 
fûe
->
∑ª¡˛u°î
, fûe->
fûíame
,&
sfE¡ry
) == 1)

452 
	`_‰ì_fûe
(
fûe
);

453  
NULL
;

456 
fûe
->
°¨t˛u°î
 = 0;

459 i‡(!
	`Átfs_Æloˇã_‰ì_•a˚
(&
_fs
, 1, &
fûe
->
°¨t˛u°î
, 1))

461 
	`_‰ì_fûe
(
fûe
);

462  
NULL
;

465 #i‡
FATFS_INC_LFN_SUPPORT


467 
èûNum
 = 0;

471 
	`Átfs_l‚_¸óã_s‚
(
sh‹tFûíame
, 
fûe
->
fûíame
);

474 i‡(
èûNum
 != 0)

475 
	`Átfs_l‚_gíî©e_èû
((*)
fûe
->
sh‹tfûíame
, 
sh‹tFûíame
, 
èûNum
);

478 
	`mem˝y
(
fûe
->
sh‹tfûíame
, 
sh‹tFûíame
, 
FAT_SFN_SIZE_FULL
);

481 i‡(
	`Átfs_s‚_exi°s
(&
_fs
, 
fûe
->
∑ª¡˛u°î
, (*)fûe->
sh‹tfûíame
) == 0)

484 
èûNum
++;

486 
èûNum
 < 9999);

489 i‡(
èûNum
 == 9999)

492 
	`Átfs_‰ì_˛u°î_chaö
(&
_fs
, 
fûe
->
°¨t˛u°î
);

494 
	`_‰ì_fûe
(
fûe
);

495  
NULL
;

499 i‡(!
	`Átfs_l‚_¸óã_s‚
(
sh‹tFûíame
, 
fûe
->
fûíame
))

502 
	`Átfs_‰ì_˛u°î_chaö
(&
_fs
, 
fûe
->
°¨t˛u°î
);

504 
	`_‰ì_fûe
(
fûe
);

505  
NULL
;

509 
	`mem˝y
(
fûe
->
sh‹tfûíame
, 
sh‹tFûíame
, 
FAT_SFN_SIZE_FULL
);

512 i‡(
	`Átfs_s‚_exi°s
(&
_fs
, 
fûe
->
∑ª¡˛u°î
, (*)fûe->
sh‹tfûíame
))

515 
	`Átfs_‰ì_˛u°î_chaö
(&
_fs
, 
fûe
->
°¨t˛u°î
);

517 
	`_‰ì_fûe
(
fûe
);

518  
NULL
;

523 i‡(!
	`Átfs_add_fûe_íåy
(&
_fs
, 
fûe
->
∑ª¡˛u°î
, (*)fûe->
fûíame
, (*)fûe->
sh‹tfûíame
, fûe->
°¨t˛u°î
, 0, 0))

526 
	`Átfs_‰ì_˛u°î_chaö
(&
_fs
, 
fûe
->
°¨t˛u°î
);

528 
	`_‰ì_fûe
(
fûe
);

529  
NULL
;

533 
fûe
->
fûñígth
 = 0;

534 
fûe
->
byãnum
 = 0;

535 
fûe
->
fûe_d©a_addªss
 = 0xFFFFFFFF;

536 
fûe
->
fûe_d©a_dúty
 = 0;

537 
fûe
->
fûñígth_ch™ged
 = 0;

540 
fûe
->
œ°_Át_lookup
.
Clu°îIdx
 = 0xFFFFFFFF;

541 
fûe
->
œ°_Át_lookup
.
CuºítClu°î
 = 0xFFFFFFFF;

543 
	`Átfs_ˇche_öô
(&
_fs
, 
fûe
);

545 
	`Átfs_Át_purge
(&
_fs
);

547  
fûe
;

548 
	}
}

553 
uöt32
 
	$_ªad_£˘‹s
(
FL_FILE
* 
fûe
, 
uöt32
 
off£t
, 
uöt8
 *
buf„r
, uöt32 
cou¡
)

555 
uöt32
 
Se˘‹
 = 0;

556 
uöt32
 
Clu°îIdx
 = 0;

557 
uöt32
 
Clu°î
 = 0;

558 
uöt32
 
i
;

559 
uöt32
 
lba
;

562 
Clu°îIdx
 = 
off£t
 / 
_fs
.
£˘‹s_≥r_˛u°î
;

563 
Se˘‹
 = 
off£t
 - (
Clu°îIdx
 * 
_fs
.
£˘‹s_≥r_˛u°î
);

566 i‡((
Se˘‹
 + 
cou¡
Ë> 
_fs
.
£˘‹s_≥r_˛u°î
)

567 
cou¡
 = 
_fs
.
£˘‹s_≥r_˛u°î
 - 
Se˘‹
;

570 i‡(
Clu°îIdx
 =
fûe
->
œ°_Át_lookup
.ClusterIdx)

571 
Clu°î
 = 
fûe
->
œ°_Át_lookup
.
CuºítClu°î
;

576 i‡(
Clu°îIdx
 && Clu°îIdx =
fûe
->
œ°_Át_lookup
.ClusterIdx + 1)

578 
i
 = 
fûe
->
œ°_Át_lookup
.
Clu°îIdx
;

579 
Clu°î
 = 
fûe
->
œ°_Át_lookup
.
CuºítClu°î
;

585 
i
 = 0;

586 
Clu°î
 = 
fûe
->
°¨t˛u°î
;

590  ;
i
<
Clu°îIdx
; i++)

592 
uöt32
 
√xtClu°î
;

595 i‡(!
	`Átfs_ˇche_gë_√xt_˛u°î
(&
_fs
, 
fûe
, 
i
, &
√xtClu°î
))

598 
√xtClu°î
 = 
	`Átfs_föd_√xt_˛u°î
(&
_fs
, 
Clu°î
);

601 
	`Átfs_ˇche_£t_√xt_˛u°î
(&
_fs
, 
fûe
, 
i
, 
√xtClu°î
);

604 
Clu°î
 = 
√xtClu°î
;

608 i‡(
Clu°î
 !
FAT32_LAST_CLUSTER
)

610 
fûe
->
œ°_Át_lookup
.
CuºítClu°î
 = 
Clu°î
;

611 
fûe
->
œ°_Át_lookup
.
Clu°îIdx
 = ClusterIdx;

616 i‡(
Clu°î
 =
FAT32_LAST_CLUSTER
)

620 
lba
 = 
	`Átfs_lba_of_˛u°î
(&
_fs
, 
Clu°î
Ë+ 
Se˘‹
;

623 i‡(
	`Átfs_£˘‹_ªad
(&
_fs
, 
lba
, 
buf„r
, 
cou¡
))

624  
cou¡
;

627 
	}
}

636 
	$Ê_öô
()

638 
i
;

640 
	`Át_li°_öô
(&
_‰ì_fûe_li°
);

641 
	`Át_li°_öô
(&
_›í_fûe_li°
);

644 
i
=0;i<
FATFS_MAX_OPEN_FILES
;i++)

645 
	`Át_li°_ö£π_œ°
(&
_‰ì_fûe_li°
, &
_fûes
[
i
].
li°_node
);

647 
_fûñib_öô
 = 1;

648 
	}
}

652 
Ê_©èch_locks
(
Átfs
 *
fs
, (*
lock
)(), (*
u∆ock
)())

654 
fs
->
Ê_lock
 = 
lock
;

655 
fs
->
Ê_u∆ock
 = 
u∆ock
;

656 
	}
}

660 
	$Ê_©èch_medü
(
‚_diskio_ªad
 
rd
, 
‚_diskio_wrôe
 
wr
)

662 
ªs
;

665 
	`CHECK_FL_INIT
();

667 
_fs
.
disk_io
.
ªad_medü
 = 
rd
;

668 
_fs
.
disk_io
.
wrôe_medü
 = 
wr
;

671 i‡((
ªs
 = 
	`Átfs_öô
(&
_fs
)Ë!
FAT_INIT_OK
)

674 
	`¥öt_dbg
("FAT_FS: Error couldÇotÜoad FAT details!\r\n");

675 
	`¥öt_dbg
("errorÇumber: ");

676 
	`¥öt_dbg_hex
(
ªs
);

677 
	`¥öt_dbg
("\r\n");

678  
ªs
;

681 
_fûñib_vÆid
 = 1;

682  
FAT_INIT_OK
;

683 
	}
}

687 
	$Ê_shutdown
()

690 
	`CHECK_FL_INIT
();

692 
	`FL_LOCK
(&
_fs
);

693 
	`Átfs_Át_purge
(&
_fs
);

694 
	`FL_UNLOCK
(&
_fs
);

695 
	}
}

699 * 
	$Ê_f›í
(c⁄° *
∑th
, c⁄° *
mode
)

701 
i
;

702 
FL_FILE
* 
fûe
;

703 
uöt8
 
Êags
 = 0;

706 
	`CHECK_FL_INIT
();

708 i‡(!
_fûñib_vÆid
)

709  
NULL
;

711 i‡(!
∑th
 || !
mode
)

712  
NULL
;

732 
i
=0;i<()
	`°æí
(
mode
);i++)

734 
mode
[
i
])

738 
Êags
 |
FILE_READ
;

742 
Êags
 |
FILE_WRITE
;

743 
Êags
 |
FILE_ERASE
;

744 
Êags
 |
FILE_CREATE
;

748 
Êags
 |
FILE_WRITE
;

749 
Êags
 |
FILE_APPEND
;

750 
Êags
 |
FILE_CREATE
;

753 i‡(
Êags
 & 
FILE_READ
)

754 
Êags
 |
FILE_WRITE
;

755 i‡(
Êags
 & 
FILE_WRITE
)

757 
Êags
 |
FILE_READ
;

758 
Êags
 |
FILE_ERASE
;

759 
Êags
 |
FILE_CREATE
;

761 i‡(
Êags
 & 
FILE_APPEND
)

763 
Êags
 |
FILE_READ
;

764 
Êags
 |
FILE_WRITE
;

765 
Êags
 |
FILE_APPEND
;

766 
Êags
 |
FILE_CREATE
;

771 
Êags
 |
FILE_BINARY
;

776 
fûe
 = 
NULL
;

778 #i‡
FATFS_INC_WRITE_SUPPORT
 == 0

780 
Êags
 &~(
FILE_CREATE
 | 
FILE_WRITE
 | 
FILE_APPEND
);

784 i‡(!
_fs
.
disk_io
.
wrôe_medü
)

785 
Êags
 &~(
FILE_CREATE
 | 
FILE_WRITE
 | 
FILE_APPEND
);

787 
	`FL_LOCK
(&
_fs
);

790 i‡(
Êags
 & 
FILE_READ
)

791 
fûe
 = 
	`_›í_fûe
(
∑th
);

794 #i‡
FATFS_INC_WRITE_SUPPORT


795 i‡(!
fûe
 && (
Êags
 & 
FILE_CREATE
))

796 
fûe
 = 
	`_¸óã_fûe
(
∑th
);

800 i‡(!(
Êags
 & 
FILE_READ
))

801 i‡((
Êags
 & 
FILE_CREATE
Ë&& !
fûe
)

802 i‡(
Êags
 & (
FILE_WRITE
 | 
FILE_APPEND
))

803 
fûe
 = 
	`_›í_fûe
(
∑th
);

805 i‡(
fûe
)

806 
fûe
->
Êags
 = flags;

808 
	`FL_UNLOCK
(&
_fs
);

809  
fûe
;

810 
	}
}

814 #i‡
FATFS_INC_WRITE_SUPPORT


815 
uöt32
 
	$_wrôe_£˘‹s
(
FL_FILE
* 
fûe
, 
uöt32
 
off£t
, 
uöt8
 *
buf
, uöt32 
cou¡
)

817 
uöt32
 
Se˘‹Numbî
 = 0;

818 
uöt32
 
Clu°îIdx
 = 0;

819 
uöt32
 
Clu°î
 = 0;

820 
uöt32
 
La°Clu°î
 = 
FAT32_LAST_CLUSTER
;

821 
uöt32
 
i
;

822 
uöt32
 
lba
;

823 
uöt32
 
TŸÆWrôeCou¡
 = 
cou¡
;

826 
Clu°îIdx
 = 
off£t
 / 
_fs
.
£˘‹s_≥r_˛u°î
;

827 
Se˘‹Numbî
 = 
off£t
 - (
Clu°îIdx
 * 
_fs
.
£˘‹s_≥r_˛u°î
);

830 i‡((
Se˘‹Numbî
 + 
cou¡
Ë> 
_fs
.
£˘‹s_≥r_˛u°î
)

831 
cou¡
 = 
_fs
.
£˘‹s_≥r_˛u°î
 - 
Se˘‹Numbî
;

834 i‡(
Clu°îIdx
 =
fûe
->
œ°_Át_lookup
.ClusterIdx)

835 
Clu°î
 = 
fûe
->
œ°_Át_lookup
.
CuºítClu°î
;

840 i‡(
Clu°îIdx
 && Clu°îIdx =
fûe
->
œ°_Át_lookup
.ClusterIdx + 1)

842 
i
 = 
fûe
->
œ°_Át_lookup
.
Clu°îIdx
;

843 
Clu°î
 = 
fûe
->
œ°_Át_lookup
.
CuºítClu°î
;

849 
i
 = 0;

850 
Clu°î
 = 
fûe
->
°¨t˛u°î
;

854  ;
i
<
Clu°îIdx
; i++)

856 
uöt32
 
√xtClu°î
;

859 i‡(!
	`Átfs_ˇche_gë_√xt_˛u°î
(&
_fs
, 
fûe
, 
i
, &
√xtClu°î
))

862 
√xtClu°î
 = 
	`Átfs_föd_√xt_˛u°î
(&
_fs
, 
Clu°î
);

865 
	`Átfs_ˇche_£t_√xt_˛u°î
(&
_fs
, 
fûe
, 
i
, 
√xtClu°î
);

868 
La°Clu°î
 = 
Clu°î
;

869 
Clu°î
 = 
√xtClu°î
;

872 i‡(
Clu°î
 =
FAT32_LAST_CLUSTER
)

877 i‡(
Clu°î
 =
FAT32_LAST_CLUSTER
)

880 i‡(!
	`Átfs_add_‰ì_•a˚
(&
_fs
, &
La°Clu°î
, (
TŸÆWrôeCou¡
 + _fs.
£˘‹s_≥r_˛u°î
 -1) / _fs.sectors_per_cluster))

883 
Clu°î
 = 
La°Clu°î
;

887 
fûe
->
œ°_Át_lookup
.
CuºítClu°î
 = 
Clu°î
;

888 
fûe
->
œ°_Át_lookup
.
Clu°îIdx
 = ClusterIdx;

892 
lba
 = 
	`Átfs_lba_of_˛u°î
(&
_fs
, 
Clu°î
Ë+ 
Se˘‹Numbî
;

894 i‡(
	`Átfs_£˘‹_wrôe
(&
_fs
, 
lba
, 
buf
, 
cou¡
))

895  
cou¡
;

898 
	}
}

903 
	$Ê_fÊush
(*
f
)

905 #i‡
FATFS_INC_WRITE_SUPPORT


906 
FL_FILE
 *
fûe
 = (FL_FILE *)
f
;

909 
	`CHECK_FL_INIT
();

911 i‡(
fûe
)

913 
	`FL_LOCK
(&
_fs
);

916 i‡(
fûe
->
fûe_d©a_dúty
)

919 i‡(
	`_wrôe_£˘‹s
(
fûe
, fûe->
fûe_d©a_addªss
, fûe->
fûe_d©a_£˘‹
, 1))

920 
fûe
->
fûe_d©a_dúty
 = 0;

923 
	`FL_UNLOCK
(&
_fs
);

927 
	}
}

931 
	$Ê_f˛o£
(*
f
)

933 
FL_FILE
 *
fûe
 = (FL_FILE *)
f
;

936 
	`CHECK_FL_INIT
();

938 i‡(
fûe
)

940 
	`FL_LOCK
(&
_fs
);

943 
	`Ê_fÊush
(
f
);

946 i‡(
fûe
->
fûñígth_ch™ged
)

948 #i‡
FATFS_INC_WRITE_SUPPORT


950 
	`Átfs_upd©e_fûe_Àngth
(&
_fs
, 
fûe
->
∑ª¡˛u°î
, (*)fûe->
sh‹tfûíame
, fûe->
fûñígth
);

952 
fûe
->
fûñígth_ch™ged
 = 0;

955 
fûe
->
byãnum
 = 0;

956 
fûe
->
fûñígth
 = 0;

957 
fûe
->
°¨t˛u°î
 = 0;

958 
fûe
->
fûe_d©a_addªss
 = 0xFFFFFFFF;

959 
fûe
->
fûe_d©a_dúty
 = 0;

960 
fûe
->
fûñígth_ch™ged
 = 0;

963 
	`_‰ì_fûe
(
fûe
);

965 
	`Átfs_Át_purge
(&
_fs
);

967 
	`FL_UNLOCK
(&
_fs
);

969 
	}
}

973 
	$Ê_fgëc
(*
f
)

975 
ªs
;

976 
uöt8
 
d©a
 = 0;

978 
ªs
 = 
	`Ê_‰ód
(&
d©a
, 1, 1, 
f
);

979 i‡(
ªs
 == 1)

980  ()
d©a
;

982  
ªs
;

983 
	}
}

987 *
	$Ê_fgës
(*
s
, 
n
, *
f
)

989 
idx
 = 0;

992 i‡(
n
 > 0)

995 
idx
 < (
n
-1))

997 
ch
 = 
	`Ê_fgëc
(
f
);

1000 i‡(
ch
 < 0)

1004 
s
[
idx
++] = ()
ch
;

1007 i‡(
ch
 == '\n')

1011 i‡(
idx
 > 0)

1012 
s
[
idx
] = '\0';

1015  (
idx
 > 0Ë? 
s
 : 0;

1016 
	}
}

1020 
	$Ê_‰ód
(* 
buf„r
, 
size
, 
Àngth
, *
f
 )

1022 
uöt32
 
£˘‹
;

1023 
uöt32
 
off£t
;

1024 
c›yCou¡
;

1025 
cou¡
 = 
size
 * 
Àngth
;

1026 
byãsRód
 = 0;

1028 
FL_FILE
 *
fûe
 = (FL_FILE *)
f
;

1031 
	`CHECK_FL_INIT
();

1033 i‡(
buf„r
==
NULL
 || 
fûe
==NULL)

1037 i‡(!(
fûe
->
Êags
 & 
FILE_READ
))

1041 i‡(!
cou¡
)

1045 i‡(
fûe
->
byãnum
 >fûe->
fûñígth
)

1049 i‡–(
fûe
->
byãnum
 + 
cou¡
Ë> fûe->
fûñígth
 )

1050 
cou¡
 = 
fûe
->
fûñígth
 - fûe->
byãnum
;

1053 
£˘‹
 = 
fûe
->
byãnum
 / 
FAT_SECTOR_SIZE
;

1056 
off£t
 = 
fûe
->
byãnum
 % 
FAT_SECTOR_SIZE
;

1058 
byãsRód
 < 
cou¡
)

1061 i‡((
off£t
 =0Ë&& ((
cou¡
 - 
byãsRód
Ë>
FAT_SECTOR_SIZE
))

1064 
uöt32
 
£˘‹sRód
 = 
	`_ªad_£˘‹s
(
fûe
, 
£˘‹
, (
uöt8
*)((uöt8*)
buf„r
 + 
byãsRód
), (
cou¡
 - byãsRódË/ 
FAT_SECTOR_SIZE
);

1065 i‡(
£˘‹sRód
)

1068 
c›yCou¡
 = 
FAT_SECTOR_SIZE
 * 
£˘‹sRód
;

1071 
£˘‹
+
£˘‹sRód
;

1072 
off£t
 = 0;

1080 i‡(
fûe
->
fûe_d©a_addªss
 !
£˘‹
)

1083 i‡(
fûe
->
fûe_d©a_dúty
)

1084 
	`Ê_fÊush
(
fûe
);

1087 i‡(!
	`_ªad_£˘‹s
(
fûe
, 
£˘‹
, fûe->
fûe_d©a_£˘‹
, 1))

1091 
fûe
->
fûe_d©a_addªss
 = 
£˘‹
;

1092 
fûe
->
fûe_d©a_dúty
 = 0;

1096 
c›yCou¡
 = 
FAT_SECTOR_SIZE
 - 
off£t
;

1099 i‡(
c›yCou¡
 > (
cou¡
 - 
byãsRód
))

1100 
c›yCou¡
 = (
cou¡
 - 
byãsRód
);

1103 
	`mem˝y
–(
uöt8
*)((uöt8*)
buf„r
 + 
byãsRód
), (uöt8*)(
fûe
->
fûe_d©a_£˘‹
 + 
off£t
), 
c›yCou¡
);

1106 
£˘‹
++;

1107 
off£t
 = 0;

1111 
byãsRód
 +
c›yCou¡
;

1114 
fûe
->
byãnum
 +
c›yCou¡
;

1117  
byãsRód
;

1118 
	}
}

1122 
	$Ê_f£ek
–*
f
, 
off£t
, 
‹igö
 )

1124 
FL_FILE
 *
fûe
 = (FL_FILE *)
f
;

1125 
ªs
 = -1;

1128 
	`CHECK_FL_INIT
();

1130 i‡(!
fûe
)

1133 i‡(
‹igö
 =
SEEK_END
 && 
off£t
 != 0)

1136 
	`FL_LOCK
(&
_fs
);

1139 
fûe
->
fûe_d©a_addªss
 = 0xFFFFFFFF;

1140 
fûe
->
fûe_d©a_dúty
 = 0;

1142 i‡(
‹igö
 =
SEEK_SET
)

1144 
fûe
->
byãnum
 = (
uöt32
)
off£t
;

1146 i‡(
fûe
->
byãnum
 > fûe->
fûñígth
)

1147 
fûe
->
byãnum
 = fûe->
fûñígth
;

1149 
ªs
 = 0;

1151 i‡(
‹igö
 =
SEEK_CUR
)

1154 i‡(
off£t
 >= 0)

1156 
fûe
->
byãnum
 +
off£t
;

1158 i‡(
fûe
->
byãnum
 > fûe->
fûñígth
)

1159 
fûe
->
byãnum
 = fûe->
fûñígth
;

1165 
off£t
 = -offset;

1168 i‡((
uöt32
)
off£t
 > 
fûe
->
byãnum
)

1169 
fûe
->
byãnum
 = 0;

1171 
fûe
->
byãnum
-
off£t
;

1174 
ªs
 = 0;

1176 i‡(
‹igö
 =
SEEK_END
)

1178 
fûe
->
byãnum
 = fûe->
fûñígth
;

1179 
ªs
 = 0;

1182 
ªs
 = -1;

1184 
	`FL_UNLOCK
(&
_fs
);

1186  
ªs
;

1187 
	}
}

1191 
	$Ê_fgëpos
(*
f
 , 
uöt32
 * 
posôi⁄
)

1193 
FL_FILE
 *
fûe
 = (FL_FILE *)
f
;

1195 i‡(!
fûe
)

1198 
	`FL_LOCK
(&
_fs
);

1201 *
posôi⁄
 = 
fûe
->
byãnum
;

1203 
	`FL_UNLOCK
(&
_fs
);

1206 
	}
}

1210 
	$Ê_·ñl
(*
f
)

1212 
uöt32
 
pos
 = 0;

1214 
	`Ê_fgëpos
(
f
, &
pos
);

1216  ()
pos
;

1217 
	}
}

1221 
	$Ê_„of
(*
f
)

1223 
FL_FILE
 *
fûe
 = (FL_FILE *)
f
;

1224 
ªs
;

1226 i‡(!
fûe
)

1229 
	`FL_LOCK
(&
_fs
);

1231 i‡(
fûe
->
byãnum
 =fûe->
fûñígth
)

1232 
ªs
 = 
EOF
;

1234 
ªs
 = 0;

1236 
	`FL_UNLOCK
(&
_fs
);

1238  
ªs
;

1239 
	}
}

1243 #i‡
FATFS_INC_WRITE_SUPPORT


1244 
	$Ê_Âutc
(
c
, *
f
)

1246 
uöt8
 
d©a
 = (uöt8)
c
;

1247 
ªs
;

1249 
ªs
 = 
	`Ê_fwrôe
(&
d©a
, 1, 1, 
f
);

1250 i‡(
ªs
 == 1)

1251  
c
;

1253  
ªs
;

1254 
	}
}

1259 #i‡
FATFS_INC_WRITE_SUPPORT


1260 
	$Ê_fwrôe
(c⁄° * 
d©a
, 
size
, 
cou¡
, *
f
 )

1262 
FL_FILE
 *
fûe
 = (FL_FILE *)
f
;

1263 
uöt32
 
£˘‹
;

1264 
uöt32
 
off£t
;

1265 
uöt32
 
Àngth
 = (
size
*
cou¡
);

1266 
uöt8
 *
buf„r
 = (uöt8 *)
d©a
;

1267 
uöt32
 
byãsWrôãn
 = 0;

1268 
uöt32
 
c›yCou¡
;

1271 
	`CHECK_FL_INIT
();

1273 i‡(!
fûe
)

1276 
	`FL_LOCK
(&
_fs
);

1279 i‡(!(
fûe
->
Êags
 & 
FILE_WRITE
))

1281 
	`FL_UNLOCK
(&
_fs
);

1286 i‡(
fûe
->
Êags
 & 
FILE_APPEND
)

1287 
fûe
->
byãnum
 = fûe->
fûñígth
;

1291 
£˘‹
 = 
fûe
->
byãnum
 / 
FAT_SECTOR_SIZE
;

1294 
off£t
 = 
fûe
->
byãnum
 % 
FAT_SECTOR_SIZE
;

1296 
byãsWrôãn
 < 
Àngth
)

1299 i‡((
off£t
 =0Ë&& ((
Àngth
 - 
byãsWrôãn
Ë>
FAT_SECTOR_SIZE
))

1301 
uöt32
 
£˘‹sWrŸe
;

1304 i‡(
fûe
->
fûe_d©a_addªss
 != 0xFFFFFFFF)

1307 i‡(
fûe
->
fûe_d©a_dúty
)

1308 
	`Ê_fÊush
(
fûe
);

1310 
fûe
->
fûe_d©a_addªss
 = 0xFFFFFFFF;

1311 
fûe
->
fûe_d©a_dúty
 = 0;

1315 
£˘‹sWrŸe
 = 
	`_wrôe_£˘‹s
(
fûe
, 
£˘‹
, (
uöt8
*)(
buf„r
 + 
byãsWrôãn
), (
Àngth
 - byãsWrôãnË/ 
FAT_SECTOR_SIZE
);

1316 
c›yCou¡
 = 
FAT_SECTOR_SIZE
 * 
£˘‹sWrŸe
;

1319 
byãsWrôãn
 +
c›yCou¡
;

1322 
fûe
->
byãnum
 +
c›yCou¡
;

1325 
£˘‹
+
£˘‹sWrŸe
;

1326 
off£t
 = 0;

1328 i‡(!
£˘‹sWrŸe
)

1334 
c›yCou¡
 = 
FAT_SECTOR_SIZE
 - 
off£t
;

1337 i‡(
c›yCou¡
 > (
Àngth
 - 
byãsWrôãn
))

1338 
c›yCou¡
 = (
Àngth
 - 
byãsWrôãn
);

1341 i‡(
fûe
->
fûe_d©a_addªss
 !
£˘‹
)

1344 i‡(
fûe
->
fûe_d©a_dúty
)

1345 
	`Ê_fÊush
(
fûe
);

1348 i‡(
c›yCou¡
 !
FAT_SECTOR_SIZE
)

1355 i‡(!
	`_ªad_£˘‹s
(
fûe
, 
£˘‹
, fûe->
fûe_d©a_£˘‹
, 1))

1356 
	`mem£t
(
fûe
->
fûe_d©a_£˘‹
, 0x00, 
FAT_SECTOR_SIZE
);

1359 
fûe
->
fûe_d©a_addªss
 = 
£˘‹
;

1360 
fûe
->
fûe_d©a_dúty
 = 0;

1364 
	`mem˝y
((
uöt8
*)(
fûe
->
fûe_d©a_£˘‹
 + 
off£t
), (uöt8*)(
buf„r
 + 
byãsWrôãn
), 
c›yCou¡
);

1367 
fûe
->
fûe_d©a_dúty
 = 1;

1370 
byãsWrôãn
 +
c›yCou¡
;

1373 
fûe
->
byãnum
 +
c›yCou¡
;

1376 
£˘‹
++;

1377 
off£t
 = 0;

1382 i‡(
fûe
->
byãnum
 > fûe->
fûñígth
)

1385 
fûe
->
fûñígth
 = fûe->
byãnum
;

1389 
fûe
->
fûñígth_ch™ged
 = 1;

1392 
	`FL_UNLOCK
(&
_fs
);

1394  (
size
*
cou¡
);

1395 
	}
}

1400 #i‡
FATFS_INC_WRITE_SUPPORT


1401 
	$Ê_Âuts
(c⁄° * 
°r
, *
f
)

1403 
Àn
 = ()
	`°æí
(
°r
);

1404 
ªs
 = 
	`Ê_fwrôe
(
°r
, 1, 
Àn
, 
f
);

1406 i‡(
ªs
 =
Àn
)

1407  
Àn
;

1409  
ªs
;

1410 
	}
}

1415 #i‡
FATFS_INC_WRITE_SUPPORT


1416 
	$Ê_ªmove
–c⁄° * 
fûíame
 )

1418 
FL_FILE
* 
fûe
;

1419 
ªs
 = -1;

1421 
	`FL_LOCK
(&
_fs
);

1424 
fûe
 = 
	`Ê_f›í
((*)
fûíame
, "r");

1425 i‡(
fûe
)

1428 i‡(
	`Átfs_‰ì_˛u°î_chaö
(&
_fs
, 
fûe
->
°¨t˛u°î
))

1431 i‡(
	`Átfs_m¨k_fûe_dñëed
(&
_fs
, 
fûe
->
∑ª¡˛u°î
, (*)fûe->
sh‹tfûíame
))

1435 
	`Ê_f˛o£
(
fûe
);

1437 
ªs
 = 0;

1442 
	`FL_UNLOCK
(&
_fs
);

1444  
ªs
;

1445 
	}
}

1450 #i‡
FATFS_INC_WRITE_SUPPORT


1451 
	$Ê_¸óãdúe˘‹y
(c⁄° *
∑th
)

1453 
ªs
;

1456 
	`CHECK_FL_INIT
();

1458 
	`FL_LOCK
(&
_fs
);

1459 
ªs
 =
	`_¸óã_dúe˘‹y
((*)
∑th
);

1460 
	`FL_UNLOCK
(&
_fs
);

1462  
ªs
;

1463 
	}
}

1468 #i‡
FATFS_DIR_LIST_SUPPORT


1469 
	$Ê_li°dúe˘‹y
(c⁄° *
∑th
)

1471 
FL_DIR
 
dú°©
;

1475 
	`CHECK_FL_INIT
();

1477 
	`FL_LOCK
(&
_fs
);

1481 i‡(
	`Ê_›ídú
(
∑th
, &
dú°©
))

1483 
fs_dú_ít
 
dúít
;

1485 
	`Ê_ªaddú
(&
dú°©
, &
dúít
) == 0)

1487 i‡(
dúít
.
is_dú
)

1497 
	`Ê_˛o£dú
(&
dú°©
);

1500 
	`FL_UNLOCK
(&
_fs
);

1501 
	}
}

1506 #i‡
FATFS_DIR_LIST_SUPPORT


1507 
FL_DIR
* 
	$Ê_›ídú
(c⁄° * 
∑th
, 
FL_DIR
 *
dú
)

1509 
Àvñs
;

1510 
ªs
 = 1;

1511 
uöt32
 
˛u°î
 = 
FAT32_INVALID_CLUSTER
;

1514 
	`CHECK_FL_INIT
();

1516 
	`FL_LOCK
(&
_fs
);

1518 
Àvñs
 = 
	`Átfs_tŸÆ_∑th_Àvñs
((*)
∑th
) + 1;

1521 i‡(
Àvñs
 == 0)

1522 
˛u°î
 = 
	`Átfs_gë_roŸ_˛u°î
(&
_fs
);

1525 
ªs
 = 
	`_›í_dúe˘‹y
((*)
∑th
, &
˛u°î
);

1527 i‡(
ªs
)

1528 
	`Átfs_li°_dúe˘‹y_°¨t
(&
_fs
, 
dú
, 
˛u°î
);

1530 
	`FL_UNLOCK
(&
_fs
);

1532  
˛u°î
 !
FAT32_INVALID_CLUSTER
 ? 
dú
 : 0;

1533 
	}
}

1538 #i‡
FATFS_DIR_LIST_SUPPORT


1539 
	$Ê_ªaddú
(
FL_DIR
 *
dúls
, 
Ê_dúít
 *
íåy
)

1541 
ªs
 = 0;

1544 
	`CHECK_FL_INIT
();

1546 
	`FL_LOCK
(&
_fs
);

1548 
ªs
 = 
	`Átfs_li°_dúe˘‹y_√xt
(&
_fs
, 
dúls
, 
íåy
);

1550 
	`FL_UNLOCK
(&
_fs
);

1552  
ªs
 ? 0 : -1;

1553 
	}
}

1558 #i‡
FATFS_DIR_LIST_SUPPORT


1559 
	$Ê_˛o£dú
(
FL_DIR
* 
dú
)

1563 
	}
}

1568 #i‡
FATFS_DIR_LIST_SUPPORT


1569 
	$Ê_is_dú
(c⁄° *
∑th
)

1571 
ªs
 = 0;

1572 
FL_DIR
 
dú
;

1574 i‡(
	`Ê_›ídú
(
∑th
, &
dú
))

1576 
ªs
 = 1;

1577 
	`Ê_˛o£dú
(&
dú
);

1580  
ªs
;

1581 
	}
}

1586 #ifde‡
FATFS_INC_TEST_HOOKS


1587 
Átfs
* 
	$Ê_gë_fs
()

1589  &
_fs
;

1590 
	}
}

	@src/fat_io_lib/fat_filelib.h

1 #i‚de‡
__FAT_FILELIB_H__


2 
	#__FAT_FILELIB_H__


	)

4 
	~"Át_›ts.h
"

5 
	~"Át_ac˚ss.h
"

6 
	~"Át_li°.h
"

11 #i‚de‡
SEEK_CUR


12 
	#SEEK_CUR
 1

	)

15 #i‚de‡
SEEK_END


16 
	#SEEK_END
 2

	)

19 #i‚de‡
SEEK_SET


20 
	#SEEK_SET
 0

	)

23 #i‚de‡
EOF


24 
	#EOF
 (-1)

	)

30 
	gsFL_FILE
;

32 
	s˛u°î_lookup


34 
uöt32
 
	mClu°îIdx
;

35 
uöt32
 
	mCuºítClu°î
;

38 
	ssFL_FILE


40 
uöt32
 
	m∑ª¡˛u°î
;

41 
uöt32
 
	m°¨t˛u°î
;

42 
uöt32
 
	mbyãnum
;

43 
uöt32
 
	mfûñígth
;

44 
	mfûñígth_ch™ged
;

45 
	m∑th
[
FATFS_MAX_LONG_FILENAME
];

46 
	mfûíame
[
FATFS_MAX_LONG_FILENAME
];

47 
uöt8
 
	msh‹tfûíame
[11];

49 #ifde‡
FAT_CLUSTER_CACHE_ENTRIES


50 
uöt32
 
	m˛u°î_ˇche_idx
[
FAT_CLUSTER_CACHE_ENTRIES
];

51 
uöt32
 
	m˛u°î_ˇche_d©a
[
FAT_CLUSTER_CACHE_ENTRIES
];

55 
˛u°î_lookup
 
	mœ°_Át_lookup
;

58 
uöt8
 
	mfûe_d©a_£˘‹
[
FAT_SECTOR_SIZE
];

59 
uöt32
 
	mfûe_d©a_addªss
;

60 
	mfûe_d©a_dúty
;

63 
uöt8
 
	mÊags
;

64 
	#FILE_READ
 (1 << 0)

	)

65 
	#FILE_WRITE
 (1 << 1)

	)

66 
	#FILE_APPEND
 (1 << 2)

	)

67 
	#FILE_BINARY
 (1 << 3)

	)

68 
	#FILE_ERASE
 (1 << 4)

	)

69 
	#FILE_CREATE
 (1 << 5)

	)

71 
Át_node
 
	mli°_node
;

72 } 
	tFL_FILE
;

79 
Ê_öô
();

80 
Ê_©èch_locks
(
Átfs
 *
fs
, (*
lock
)(), (*
u∆ock
)());

81 
	`Ê_©èch_medü
(
‚_diskio_ªad
 
rd
, 
‚_diskio_wrôe
 
wr
);

82 
	`Ê_shutdown
();

85 * 
	`Ê_f›í
(c⁄° *
∑th
, c⁄° *
modifõrs
);

86 
	`Ê_f˛o£
(*
fûe
);

87 
	`Ê_fÊush
(*
fûe
);

88 
	`Ê_fgëc
(*
fûe
);

89 * 
	`Ê_fgës
(*
s
, 
n
, *
f
);

90 
	`Ê_Âutc
(
c
, *
fûe
);

91 
	`Ê_Âuts
(c⁄° * 
°r
, *
fûe
);

92 
	`Ê_fwrôe
(c⁄° * 
d©a
, 
size
, 
cou¡
, *
fûe
 );

93 
	`Ê_‰ód
(* 
d©a
, 
size
, 
cou¡
, *
fûe
 );

94 
	`Ê_f£ek
(*
fûe
 , 
off£t
 , 
‹igö
 );

95 
	`Ê_fgëpos
(*
fûe
 , 
uöt32
 * 
posôi⁄
);

96 
	`Ê_·ñl
(*
f
);

97 
	`Ê_„of
(*
f
);

98 
	`Ê_ªmove
(c⁄° * 
fûíame
);

101 
fs_dú_li°_°©us
 
	tFL_DIR
;

102 
fs_dú_ít
 
	tÊ_dúít
;

104 
FL_DIR
* 
	`Ê_›ídú
(c⁄° * 
∑th
, FL_DIR *
dú
);

105 
	`Ê_ªaddú
(
FL_DIR
 *
dúls
, 
Ê_dúít
 *
íåy
);

106 
	`Ê_˛o£dú
(
FL_DIR
* 
dú
);

109 
	`Ê_li°dúe˘‹y
(c⁄° *
∑th
);

110 
	`Ê_¸óãdúe˘‹y
(c⁄° *
∑th
);

111 
	`Ê_is_dú
(c⁄° *
∑th
);

114 #ifde‡
FATFS_INC_TEST_HOOKS


115 
Átfs
* 
	`Ê_gë_fs
();

121 #ifde‡
USE_FILELIB_STDIO_COMPAT_NAMES


123 
	#FILE
 
FL_FILE


	)

125 
	#f›í
(
a
,
b
Ë
	`Ê_f›í
◊, b)

	)

126 
	#f˛o£
(
a
Ë
	`Ê_f˛o£
◊)

	)

127 
	#fÊush
(
a
Ë
	`Ê_fÊush
◊)

	)

128 
	#fgëc
(
a
Ë
	`Ê_fgëc
◊)

	)

129 
	#fgës
(
a
,
b
,
c
Ë
	`Ê_fgës
◊, b, c)

	)

130 
	#Âutc
(
a
,
b
Ë
	`Ê_Âutc
◊, b)

	)

131 
	#Âuts
(
a
,
b
Ë
	`Ê_Âuts
◊, b)

	)

132 
	#fwrôe
(
a
,
b
,
c
,
d
Ë
	`Ê_fwrôe
◊, b, c, d)

	)

133 
	#‰ód
(
a
,
b
,
c
,
d
Ë
	`Ê_‰ód
◊, b, c, d)

	)

134 
	#f£ek
(
a
,
b
,
c
Ë
	`Ê_f£ek
◊, b, c)

	)

135 
	#fgëpos
(
a
,
b
Ë
	`Ê_fgëpos
◊, b)

	)

136 
	#·ñl
(
a
Ë
	`Ê_·ñl
◊)

	)

137 
	#„of
(
a
Ë
	`Ê_„of
◊)

	)

138 
	#ªmove
(
a
Ë
	`Ê_ªmove
◊)

	)

139 
	#mkdú
(
a
Ë
	`Ê_¸óãdúe˘‹y
◊)

	)

140 
	#rmdú
(
a
Ë0

	)

	@src/fat_io_lib/fat_format.c

32 
	~<°rög.h
>

33 
	~"Át_defs.h
"

34 
	~"Át_ac˚ss.h
"

35 
	~"Át_èbÀ.h
"

36 
	~"Át_wrôe.h
"

37 
	~"Át_°rög.h
"

38 
	~"Át_misc.h
"

39 
	~"Át_f‹m©.h
"

41 #i‡
FATFS_INC_FORMAT_SUPPORT


46 
	s£c_≥r_˛us_èbÀ


48 
uöt32
 
	m£˘‹s
;

49 
uöt8
 
	m£˘‹s_≥r_˛u°î
;

50 } 
	g_˛u°î_size_èbÀ
[] = {

64 
uöt8
 
	$Átfs_ˇlc_˛u°î_size
(
uöt32
 
£˘‹s
)

66 
i
;

68 
i
=0; 
_˛u°î_size_èbÀ
[i].
£˘‹s_≥r_˛u°î
 != 0;i++)

69 i‡(
£˘‹s
 <
_˛u°î_size_èbÀ
[
i
].sectors)

70  
_˛u°î_size_èbÀ
[
i
].
£˘‹s_≥r_˛u°î
;

73 
	}
}

77 
	$Átfs_îa£_£˘‹s
(
Átfs
 *
fs
, 
uöt32
 
lba
, 
cou¡
)

79 
i
;

82 
	`mem£t
(
fs
->
cuºít£˘‹
.
£˘‹
, 0, 
FAT_SECTOR_SIZE
);

84 
i
=0;i<
cou¡
;i++)

85 i‡(!
fs
->
disk_io
.
	`wrôe_medü
(
lba
 + 
i
, fs->
cuºít£˘‹
.
£˘‹
, 1))

89 
	}
}

93 
Átfs_¸óã_boŸ_£˘‹
(
Átfs
 *
fs
, 
uöt32
 
boŸ_£˘‹_lba
, uöt32 
vﬁ_£˘‹s
, c⁄° *
«me
);

94 
	$Átfs_¸óã_boŸ_£˘‹
(
Átfs
 *
fs
, 
uöt32
 
boŸ_£˘‹_lba
, uöt32 
vﬁ_£˘‹s
, c⁄° *
«me
)

96 
uöt32
 
tŸÆ_˛u°îs
;

97 
i
;

100 
	`mem£t
(
fs
->
cuºít£˘‹
.
£˘‹
, 0, 
FAT_SECTOR_SIZE
);

103 
fs
->
cuºít£˘‹
.
£˘‹
[0] = 0xEB;

104 
fs
->
cuºít£˘‹
.
£˘‹
[1] = 0x3C;

105 
fs
->
cuºít£˘‹
.
£˘‹
[2] = 0x90;

106 
fs
->
cuºít£˘‹
.
£˘‹
[3] = 0x4D;

107 
fs
->
cuºít£˘‹
.
£˘‹
[4] = 0x53;

108 
fs
->
cuºít£˘‹
.
£˘‹
[5] = 0x44;

109 
fs
->
cuºít£˘‹
.
£˘‹
[6] = 0x4F;

110 
fs
->
cuºít£˘‹
.
£˘‹
[7] = 0x53;

111 
fs
->
cuºít£˘‹
.
£˘‹
[8] = 0x35;

112 
fs
->
cuºít£˘‹
.
£˘‹
[9] = 0x2E;

113 
fs
->
cuºít£˘‹
.
£˘‹
[10] = 0x30;

116 
fs
->
cuºít£˘‹
.
£˘‹
[11] = (
FAT_SECTOR_SIZE
 >> 0) & 0xFF;

117 
fs
->
cuºít£˘‹
.
£˘‹
[12] = (
FAT_SECTOR_SIZE
 >> 8) & 0xFF;

120 
fs
->
£˘‹s_≥r_˛u°î
 = 
	`Átfs_ˇlc_˛u°î_size
(
vﬁ_£˘‹s
);

121 i‡(!
fs
->
£˘‹s_≥r_˛u°î
)

125 
fs
->
cuºít£˘‹
.
£˘‹
[13] = fs->
£˘‹s_≥r_˛u°î
;

128 
fs
->
ª£rved_£˘‹s
 = 8;

129 
fs
->
cuºít£˘‹
.
£˘‹
[14] = (fs->
ª£rved_£˘‹s
 >> 0) & 0xFF;

130 
fs
->
cuºít£˘‹
.
£˘‹
[15] = (fs->
ª£rved_£˘‹s
 >> 8) & 0xFF;

133 
fs
->
num_of_Áts
 = 2;

134 
fs
->
cuºít£˘‹
.
£˘‹
[16] = fs->
num_of_Áts
;

137 
fs
->
roŸ_íåy_cou¡
 = 512;

138 
fs
->
cuºít£˘‹
.
£˘‹
[17] = (fs->
roŸ_íåy_cou¡
 >> 0) & 0xFF;;

139 
fs
->
cuºít£˘‹
.
£˘‹
[18] = (fs->
roŸ_íåy_cou¡
 >> 8) & 0xFF;;

142 
fs
->
cuºít£˘‹
.
£˘‹
[19] = 0x00;

143 
fs
->
cuºít£˘‹
.
£˘‹
[20] = 0x00;

146 
fs
->
cuºít£˘‹
.
£˘‹
[21] = 0xF8;

149 
tŸÆ_˛u°îs
 = (
vﬁ_£˘‹s
 / 
fs
->
£˘‹s_≥r_˛u°î
) + 1;

150 
fs
->
Át_£˘‹s
 = (
tŸÆ_˛u°îs
/256) + 1;

151 
fs
->
cuºít£˘‹
.
£˘‹
[22] = (
uöt8
)((fs->
Át_£˘‹s
 >> 0) & 0xFF);

152 
fs
->
cuºít£˘‹
.
£˘‹
[23] = (
uöt8
)((fs->
Át_£˘‹s
 >> 8) & 0xFF);

155 
fs
->
cuºít£˘‹
.
£˘‹
[24] = 0x00;

156 
fs
->
cuºít£˘‹
.
£˘‹
[25] = 0x00;

159 
fs
->
cuºít£˘‹
.
£˘‹
[26] = 0x00;

160 
fs
->
cuºít£˘‹
.
£˘‹
[27] = 0x00;

163 
fs
->
cuºít£˘‹
.
£˘‹
[28] = 0x20;

164 
fs
->
cuºít£˘‹
.
£˘‹
[29] = 0x00;

165 
fs
->
cuºít£˘‹
.
£˘‹
[30] = 0x00;

166 
fs
->
cuºít£˘‹
.
£˘‹
[31] = 0x00;

169 
fs
->
cuºít£˘‹
.
£˘‹
[32] = (
uöt8
)((
vﬁ_£˘‹s
>>0)&0xFF);

170 
fs
->
cuºít£˘‹
.
£˘‹
[33] = (
uöt8
)((
vﬁ_£˘‹s
>>8)&0xFF);

171 
fs
->
cuºít£˘‹
.
£˘‹
[34] = (
uöt8
)((
vﬁ_£˘‹s
>>16)&0xFF);

172 
fs
->
cuºít£˘‹
.
£˘‹
[35] = (
uöt8
)((
vﬁ_£˘‹s
>>24)&0xFF);

177 
fs
->
cuºít£˘‹
.
£˘‹
[36] = 0x00;

180 
fs
->
cuºít£˘‹
.
£˘‹
[37] = 0x00;

183 
fs
->
cuºít£˘‹
.
£˘‹
[38] = 0x29;

186 
fs
->
cuºít£˘‹
.
£˘‹
[39] = 0x12;

187 
fs
->
cuºít£˘‹
.
£˘‹
[40] = 0x34;

188 
fs
->
cuºít£˘‹
.
£˘‹
[41] = 0x56;

189 
fs
->
cuºít£˘‹
.
£˘‹
[42] = 0x78;

192 
i
=0;i<11;i++)

194 i‡(
i
 < ()
	`°æí
(
«me
))

195 
fs
->
cuºít£˘‹
.
£˘‹
[
i
+43] = 
«me
[i];

197 
fs
->
cuºít£˘‹
.
£˘‹
[
i
+43] = ' ';

201 
fs
->
cuºít£˘‹
.
£˘‹
[54] = 'F';

202 
fs
->
cuºít£˘‹
.
£˘‹
[55] = 'A';

203 
fs
->
cuºít£˘‹
.
£˘‹
[56] = 'T';

204 
fs
->
cuºít£˘‹
.
£˘‹
[57] = '1';

205 
fs
->
cuºít£˘‹
.
£˘‹
[58] = '6';

206 
fs
->
cuºít£˘‹
.
£˘‹
[59] = ' ';

207 
fs
->
cuºít£˘‹
.
£˘‹
[60] = ' ';

208 
fs
->
cuºít£˘‹
.
£˘‹
[61] = ' ';

211 
fs
->
cuºít£˘‹
.
£˘‹
[510] = 0x55;

212 
fs
->
cuºít£˘‹
.
£˘‹
[511] = 0xAA;

214 i‡(
fs
->
disk_io
.
	`wrôe_medü
(
boŸ_£˘‹_lba
, fs->
cuºít£˘‹
.
£˘‹
, 1))

218 
	}
}

222 
Átfs_îa£_Át
(
Átfs
 *
fs
);

223 
	$Átfs_îa£_Át
(
Átfs
 *
fs
)

225 
uöt32
 
i
;

228 
	`mem£t
(
fs
->
cuºít£˘‹
.
£˘‹
, 0, 
FAT_SECTOR_SIZE
);

231 
	`SET_16BIT_WORD
(
fs
->
cuºít£˘‹
.
£˘‹
, 0, 0xF8FF);

232 
	`SET_16BIT_WORD
(
fs
->
cuºít£˘‹
.
£˘‹
, 2, 0xFFFF);

234 i‡(!
fs
->
disk_io
.
	`wrôe_medü
(fs->
Át_begö_lba
 + 0, fs->
cuºít£˘‹
.
£˘‹
, 1))

238 
	`mem£t
(
fs
->
cuºít£˘‹
.
£˘‹
, 0, 
FAT_SECTOR_SIZE
);

239 
i
=1;i<
fs
->
Át_£˘‹s
;i++)

240 i‡(!
fs
->
disk_io
.
	`wrôe_medü
(fs->
Át_begö_lba
 + 
i
, fs->
cuºít£˘‹
.
£˘‹
, 1))

244 
	}
}

248 
	$Átfs_f‹m©_Át16
(
Átfs
 *
fs
, 
uöt32
 
vﬁume_£˘‹s
, c⁄° *
«me
)

250 
fs
->
cuºít£˘‹
.
addªss
 = 
FAT32_INVALID_CLUSTER
;

251 
fs
->
cuºít£˘‹
.
dúty
 = 0;

253 
fs
->
√xt_‰ì_˛u°î
 = 0;

255 
	`Átfs_Át_öô
(
fs
);

258 i‡(!
fs
->
disk_io
.
ªad_medü
 || !fs->disk_io.
wrôe_medü
)

259  
FAT_INIT_MEDIA_ACCESS_ERROR
;

262 
fs
->
Át_ty≥
 = 
FAT_TYPE_16
;

266 
fs
->
lba_begö
 = 0;

267 i‡(!
	`Átfs_¸óã_boŸ_£˘‹
(
fs
, fs->
lba_begö
, 
vﬁume_£˘‹s
, 
«me
))

271 
fs
->
fs_öfo_£˘‹
 = 0;

272 
fs
->
roŸdú_fú°_˛u°î
 = 0;

275 
fs
->
roŸdú_fú°_£˘‹
 = fs->
ª£rved_£˘‹s
 + (fs->
num_of_Áts
 * fs->
Át_£˘‹s
);

276 
fs
->
roŸdú_£˘‹s
 = ((fs->
roŸ_íåy_cou¡
 * 32Ë+ (
FAT_SECTOR_SIZE
 - 1)) / FAT_SECTOR_SIZE;

279 
fs
->
Át_begö_lba
 = fs->
lba_begö
 + fs->
ª£rved_£˘‹s
;

282 
fs
->
˛u°î_begö_lba
 = fs->
Át_begö_lba
 + (fs->
num_of_Áts
 * fs->
Át_£˘‹s
);

285 i‡(!
	`Átfs_îa£_Át
(
fs
))

289 i‡(!
	`Átfs_îa£_£˘‹s
(
fs
, fs->
lba_begö
 + fs->
roŸdú_fú°_£˘‹
, fs->
roŸdú_£˘‹s
))

293 
	}
}

	@src/fat_io_lib/fat_format.h

1 #i‚de‡
__FAT_FORMAT_H__


2 
	#__FAT_FORMAT_H__


	)

4 
	~"Át_defs.h
"

5 
	~"Át_›ts.h
"

6 
	~"Át_ac˚ss.h
"

11 
Átfs_f‹m©_Át16
(
Átfs
 *
fs
, 
uöt32
 
vﬁume_£˘‹s
, c⁄° *
«me
);

	@src/fat_io_lib/fat_list.h

1 #i‚de‡
__FAT_LIST_H__


2 
	#__FAT_LIST_H__


	)

4 #i‚de‡
FAT_ASSERT


5 
	#FAT_ASSERT
(
x
)

	)

8 #i‚de‡
FAT_INLINE


9 
	#FAT_INLINE


	)

15 
	gÁt_li°
;

17 
	sÁt_node


19 
Át_node
 *
	m¥evious
;

20 
Át_node
 *
	m√xt
;

23 
	sÁt_li°


25 
Át_node
 *
	mhód
;

26 
Át_node
 *
	mèû
;

32 
	#Át_li°_íåy
(
p
, 
t
, 
m
Ë∞? (— *)((*)’)-(*)(&(— *)0)->m))Ë: 0

	)

33 
	#Át_li°_√xt
(
l
, 
p
Ë’)->
√xt


	)

34 
	#Át_li°_¥ev
(
l
, 
p
Ë’)->
¥evious


	)

35 
	#Át_li°_fú°
(
l
Ë÷)->
hód


	)

36 
	#Át_li°_œ°
(
l
Ë÷)->
èû


	)

37 
	#Át_li°_f‹_óch
(
l
, 
p
Ë’Ë÷)->
hód
; (p); (pË’)->
√xt
)

	)

46 
ölöe
 
Át_li°_öô
(
Át_li°
 *
li°
);

47 
ölöe
 
	$Át_li°_öô
(
Át_li°
 *
li°
)

49 
	`FAT_ASSERT
(
li°
);

51 
li°
->
hód
 =Üi°->
èû
 = 0;

52 
	}
}

56 
ölöe
 
Át_li°_ªmove
(
Át_li°
 *
li°
, 
Át_node
 *
node
);

57 
ölöe
 
	$Át_li°_ªmove
(
Át_li°
 *
li°
, 
Át_node
 *
node
)

59 
	`FAT_ASSERT
(
li°
);

60 
	`FAT_ASSERT
(
node
);

62 if(!
node
->
¥evious
)

63 
li°
->
hód
 = 
node
->
√xt
;

65 
node
->
¥evious
->
√xt
 =Çode->next;

67 if(!
node
->
√xt
)

68 
li°
->
èû
 = 
node
->
¥evious
;

70 
node
->
√xt
->
¥evious
 =Çode->previous;

71 
	}
}

75 
ölöe
 
Át_li°_ö£π_a·î
(
Át_li°
 *
li°
, 
Át_node
 *
node
, Át_nodê*
√w_node
) ;

76 
ölöe
 
	$Át_li°_ö£π_a·î
(
Át_li°
 *
li°
, 
Át_node
 *
node
, Át_nodê*
√w_node
)

78 
	`FAT_ASSERT
(
li°
);

79 
	`FAT_ASSERT
(
node
);

80 
	`FAT_ASSERT
(
√w_node
);

82 
√w_node
->
¥evious
 = 
node
;

83 
√w_node
->
√xt
 = 
node
->next;

84 i‡(!
node
->
√xt
)

85 
li°
->
èû
 = 
√w_node
;

87 
node
->
√xt
->
¥evious
 = 
√w_node
;

88 
node
->
√xt
 = 
√w_node
;

89 
	}
}

93 
ölöe
 
Át_li°_ö£π_bef‹e
(
Át_li°
 *
li°
, 
Át_node
 *
node
, Át_nodê*
√w_node
) ;

94 
ölöe
 
	$Át_li°_ö£π_bef‹e
(
Át_li°
 *
li°
, 
Át_node
 *
node
, Át_nodê*
√w_node
)

96 
	`FAT_ASSERT
(
li°
);

97 
	`FAT_ASSERT
(
node
);

98 
	`FAT_ASSERT
(
√w_node
);

100 
√w_node
->
¥evious
 = 
node
->previous;

101 
√w_node
->
√xt
 = 
node
;

102 i‡(!
node
->
¥evious
)

103 
li°
->
hód
 = 
√w_node
;

105 
node
->
¥evious
->
√xt
 = 
√w_node
;

106 
node
->
¥evious
 = 
√w_node
;

107 
	}
}

111 
ölöe
 
Át_li°_ö£π_fú°
(
Át_li°
 *
li°
, 
Át_node
 *
node
) ;

112 
ölöe
 
	$Át_li°_ö£π_fú°
(
Át_li°
 *
li°
, 
Át_node
 *
node
)

114 
	`FAT_ASSERT
(
li°
);

115 
	`FAT_ASSERT
(
node
);

117 i‡(!
li°
->
hód
)

119 
li°
->
hód
 = 
node
;

120 
li°
->
èû
 = 
node
;

121 
node
->
¥evious
 = 0;

122 
node
->
√xt
 = 0;

125 
	`Át_li°_ö£π_bef‹e
(
li°
,Üi°->
hód
, 
node
);

126 
	}
}

130 
ölöe
 
Át_li°_ö£π_œ°
(
Át_li°
 *
li°
, 
Át_node
 *
node
) ;

131 
ölöe
 
	$Át_li°_ö£π_œ°
(
Át_li°
 *
li°
, 
Át_node
 *
node
)

133 
	`FAT_ASSERT
(
li°
);

134 
	`FAT_ASSERT
(
node
);

136 i‡(!
li°
->
èû
)

137 
	`Át_li°_ö£π_fú°
(
li°
, 
node
);

139 
	`Át_li°_ö£π_a·î
(
li°
,Üi°->
èû
, 
node
);

140 
	}
}

144 
ölöe
 
Át_li°_is_em±y
(
Át_li°
 *
li°
);

145 
ölöe
 
	$Át_li°_is_em±y
(
Át_li°
 *
li°
)

147 
	`FAT_ASSERT
(
li°
);

149  !
li°
->
hód
;

150 
	}
}

154 
ölöe
 
Át_node
 * 
Át_li°_p›_hód
(
Át_li°
 *
li°
);

155 
ölöe
 
Át_node
 * 
	$Át_li°_p›_hód
(
Át_li°
 *
li°
)

157 
Át_node
 * 
node
;

159 
	`FAT_ASSERT
(
li°
);

161 
node
 = 
	`Át_li°_fú°
(
li°
);

162 i‡(
node
)

163 
	`Át_li°_ªmove
(
li°
, 
node
);

165  
node
;

166 
	}
}

	@src/fat_io_lib/fat_misc.c

32 
	~<°dlib.h
>

33 
	~<°rög.h
>

34 
	~"Át_misc.h
"

39 
	$Átfs_l‚_ˇche_öô
(
l‚_ˇche
 *
l‚
, 
wùeTabÀ
)

41 
i
 = 0;

43 
l‚
->
no_of_°rögs
 = 0;

45 #i‡
FATFS_INC_LFN_SUPPORT


48 i‡(
wùeTabÀ
)

49 
i
=0;i<
MAX_LONGFILENAME_ENTRIES
;i++)

50 
	`mem£t
(
l‚
->
Såög
[
i
], 0x00, 
MAX_LFN_ENTRY_LENGTH
);

52 
	}
}

57 #i‡
FATFS_INC_LFN_SUPPORT


58 
	$Átfs_l‚_ˇche_íåy
(
l‚_ˇche
 *
l‚
, 
uöt8
 *
íåyBuf„r
)

60 
uöt8
 
LFNIndex
, 
i
;

61 
LFNIndex
 = 
íåyBuf„r
[0] & 0x1F;

64 i‡(
LFNIndex
 > 
MAX_LONGFILENAME_ENTRIES
)

68 i‡(
LFNIndex
 == 0)

71 i‡(
l‚
->
no_of_°rögs
 == 0)

72 
l‚
->
no_of_°rögs
 = 
LFNIndex
;

74 
l‚
->
Såög
[
LFNIndex
-1][0] = 
íåyBuf„r
[1];

75 
l‚
->
Såög
[
LFNIndex
-1][1] = 
íåyBuf„r
[3];

76 
l‚
->
Såög
[
LFNIndex
-1][2] = 
íåyBuf„r
[5];

77 
l‚
->
Såög
[
LFNIndex
-1][3] = 
íåyBuf„r
[7];

78 
l‚
->
Såög
[
LFNIndex
-1][4] = 
íåyBuf„r
[9];

79 
l‚
->
Såög
[
LFNIndex
-1][5] = 
íåyBuf„r
[0x0E];

80 
l‚
->
Såög
[
LFNIndex
-1][6] = 
íåyBuf„r
[0x10];

81 
l‚
->
Såög
[
LFNIndex
-1][7] = 
íåyBuf„r
[0x12];

82 
l‚
->
Såög
[
LFNIndex
-1][8] = 
íåyBuf„r
[0x14];

83 
l‚
->
Såög
[
LFNIndex
-1][9] = 
íåyBuf„r
[0x16];

84 
l‚
->
Såög
[
LFNIndex
-1][10] = 
íåyBuf„r
[0x18];

85 
l‚
->
Såög
[
LFNIndex
-1][11] = 
íåyBuf„r
[0x1C];

86 
l‚
->
Såög
[
LFNIndex
-1][12] = 
íåyBuf„r
[0x1E];

88 
i
=0; i<
MAX_LFN_ENTRY_LENGTH
; i++)

89 i‡(
l‚
->
Såög
[
LFNIndex
-1][
i
]==0xFF)

90 
l‚
->
Såög
[
LFNIndex
-1][
i
] = 0x20;

91 
	}
}

96 #i‡
FATFS_INC_LFN_SUPPORT


97 * 
	$Átfs_l‚_ˇche_gë
(
l‚_ˇche
 *
l‚
)

100 i‡(
l‚
->
no_of_°rögs
 =
MAX_LONGFILENAME_ENTRIES
)

101 
l‚
->
NuŒ
 = '\0';

102 i‡(
l‚
->
no_of_°rögs
)

103 
l‚
->
Såög
[l‚->
no_of_°rögs
][0] = '\0';

105 
l‚
->
Såög
[0][0] = '\0';

107  (*)&
l‚
->
Såög
[0][0];

108 
	}
}

113 #i‡
FATFS_INC_LFN_SUPPORT


114 
	$Átfs_íåy_l‚_ãxt
(
Át_dú_íåy
 *
íåy
)

116 i‡((
íåy
->
Aâr
 & 
FILE_ATTR_LFN_TEXT
) == FILE_ATTR_LFN_TEXT)

120 
	}
}

125 #i‡
FATFS_INC_LFN_SUPPORT


126 
	$Átfs_íåy_l‚_övÆid
(
Át_dú_íåy
 *
íåy
)

128 i‡–(
íåy
->
Name
[0]==
FILE_HEADER_BLANK
) ||

129 (
íåy
->
Name
[0]==
FILE_HEADER_DELETED
)||

130 (
íåy
->
Aâr
==
FILE_ATTR_VOLUME_ID
) ||

131 (
íåy
->
Aâr
 & 
FILE_ATTR_SYSHID
) )

135 
	}
}

140 #i‡
FATFS_INC_LFN_SUPPORT


141 
	$Átfs_íåy_l‚_exi°s
(
l‚_ˇche
 *
l‚
, 
Át_dú_íåy
 *
íåy
)

143 i‡–(
íåy
->
Aâr
!=
FILE_ATTR_LFN_TEXT
) &&

144 (
íåy
->
Name
[0]!=
FILE_HEADER_BLANK
) &&

145 (
íåy
->
Name
[0]!=
FILE_HEADER_DELETED
) &&

146 (
íåy
->
Aâr
!=
FILE_ATTR_VOLUME_ID
) &&

147 (!(
íåy
->
Aâr
&
FILE_ATTR_SYSHID
)) &&

148 (
l‚
->
no_of_°rögs
) )

152 
	}
}

157 
	$Átfs_íåy_s‚_⁄ly
(
Át_dú_íåy
 *
íåy
)

159 i‡–(
íåy
->
Aâr
!=
FILE_ATTR_LFN_TEXT
) &&

160 (
íåy
->
Name
[0]!=
FILE_HEADER_BLANK
) &&

161 (
íåy
->
Name
[0]!=
FILE_HEADER_DELETED
) &&

162 (
íåy
->
Aâr
!=
FILE_ATTR_VOLUME_ID
) &&

163 (!(
íåy
->
Aâr
&
FILE_ATTR_SYSHID
)) )

167 
	}
}

172 
	$Átfs_íåy_is_dú
(
Át_dú_íåy
 *
íåy
)

174 i‡(
íåy
->
Aâr
 & 
FILE_TYPE_DIR
)

178 
	}
}

182 
	$Átfs_íåy_is_fûe
(
Át_dú_íåy
 *
íåy
)

184 i‡(
íåy
->
Aâr
 & 
FILE_TYPE_FILE
)

188 
	}
}

192 #i‡
FATFS_INC_LFN_SUPPORT


193 
	$Átfs_l‚_íåõs_ªquúed
(*
fûíame
)

195 
Àngth
 = ()
	`°æí
(
fûíame
);

197 i‡(
Àngth
)

198  (
Àngth
 + 
MAX_LFN_ENTRY_LENGTH
 - 1) / MAX_LFN_ENTRY_LENGTH;

201 
	}
}

206 #i‡
FATFS_INC_LFN_SUPPORT


207 
	$Átfs_fûíame_to_l‚
(*
fûíame
, 
uöt8
 *
buf„r
, 
íåy
, uöt8 
s‚Chk
)

209 
i
;

210 
«meIndexes
[
MAX_LFN_ENTRY_LENGTH
] = {1,3,5,7,9,0x0E,0x10,0x12,0x14,0x16,0x18,0x1C,0x1E};

213 
Àngth
 = ()
	`°æí
(
fûíame
);

214 
íåõsRequúed
 = 
	`Átfs_l‚_íåõs_ªquúed
(
fûíame
);

217 
°¨t
 = 
íåy
 * 
MAX_LFN_ENTRY_LENGTH
;

220 
	`mem£t
(
buf„r
, 0x00, 
FAT_DIR_ENTRY_SIZE
);

223 
buf„r
[0] = (
uöt8
)(((
íåõsRequúed
-1)==
íåy
)?(0x40|(entry+1)):(entry+1));

226 
buf„r
[11] = 0x0F;

229 
buf„r
[13] = 
s‚Chk
;

232 
i
=0;i<
MAX_LFN_ENTRY_LENGTH
;i++)

234 i‡–(
°¨t
+
i
Ë< 
Àngth
 )

235 
buf„r
[
«meIndexes
[
i
]] = 
fûíame
[
°¨t
+i];

236 i‡–(
°¨t
+
i
Ë=
Àngth
 )

237 
buf„r
[
«meIndexes
[
i
]] = 0x00;

240 
buf„r
[
«meIndexes
[
i
]] = 0xFF;

241 
buf„r
[
«meIndexes
[
i
]+1] = 0xFF;

244 
	}
}

249 #i‡
FATFS_INC_WRITE_SUPPORT


250 
	$Átfs_s‚_¸óã_íåy
(*
sh‹tfûíame
, 
uöt32
 
size
, uöt32 
°¨tClu°î
, 
Át_dú_íåy
 *
íåy
, 
dú
)

252 
i
;

255 
i
=0;i<
FAT_SFN_SIZE_FULL
;i++)

256 
íåy
->
Name
[
i
] = 
sh‹tfûíame
[i];

259 
íåy
->
CπTimeTíth
 = 0x00;

260 
íåy
->
CπTime
[1] =Éntry->CrtTime[0] = 0x00;

261 
íåy
->
CπD©e
[1] = 0x00;

262 
íåy
->
CπD©e
[0] = 0x20;

263 
íåy
->
L°AccD©e
[1] = 0x00;

264 
íåy
->
L°AccD©e
[0] = 0x20;

265 
íåy
->
WπTime
[1] =Éntry->WrtTime[0] = 0x00;

266 
íåy
->
WπD©e
[1] = 0x00;

267 
íåy
->
WπD©e
[0] = 0x20;

269 i‡(!
dú
)

270 
íåy
->
Aâr
 = 
FILE_TYPE_FILE
;

272 
íåy
->
Aâr
 = 
FILE_TYPE_DIR
;

274 
íåy
->
NTRes
 = 0x00;

276 
íåy
->
F°ClusHI
 = 
	`FAT_HTONS
((
uöt16
)((
°¨tClu°î
>>16) & 0xFFFF));

277 
íåy
->
F°ClusLO
 = 
	`FAT_HTONS
((
uöt16
)((
°¨tClu°î
>>0) & 0xFFFF));

278 
íåy
->
FûeSize
 = 
	`FAT_HTONL
(
size
);

279 
	}
}

284 #i‡
FATFS_INC_WRITE_SUPPORT


285 
	$Átfs_l‚_¸óã_s‚
(*
s‚_ouçut
, *
fûíame
)

287 
i
;

288 
dŸPos
 = -1;

289 
ext
[3];

290 
pos
;

291 
Àn
 = ()
	`°æí
(
fûíame
);

294 i‡(
fûíame
[0]=='.')

297 
	`mem£t
(
s‚_ouçut
, ' ', 
FAT_SFN_SIZE_FULL
);

298 
	`mem£t
(
ext
, ' ', 3);

301 
i
 = 0; i< 
Àn
; i++)

303 i‡(
fûíame
[
i
]=='.')

304 
dŸPos
 = 
i
;

308 i‡(
dŸPos
!=-1)

311 
i
 = (
dŸPos
+1); i < (dotPos+1+3); i++)

312 i‡(
i
<
Àn
)

313 
ext
[
i
-(
dŸPos
+1)] = 
fûíame
[i];

316 
Àn
 = 
dŸPos
;

320 
pos
 = 0;

321 
i
=0;i<
Àn
;i++)

323 i‡–(
fûíame
[
i
]!=' ') && (filename[i]!='.') )

325 i‡(
fûíame
[
i
] >= 'a' && filename[i] <= 'z')

326 
s‚_ouçut
[
pos
++] = 
fûíame
[
i
] - 'a' + 'A';

328 
s‚_ouçut
[
pos
++] = 
fûíame
[
i
];

332 i‡(
pos
==
FAT_SFN_SIZE_PARTIAL
)

337 
i
=
FAT_SFN_SIZE_PARTIAL
;i<
FAT_SFN_SIZE_FULL
;i++)

339 i‡(
ext
[
i
-
FAT_SFN_SIZE_PARTIAL
] >= 'a' &&Éxt[i-FAT_SFN_SIZE_PARTIAL] <= 'z')

340 
s‚_ouçut
[
i
] = 
ext
[i-
FAT_SFN_SIZE_PARTIAL
] - 'a' + 'A';

342 
s‚_ouçut
[
i
] = 
ext
[i-
FAT_SFN_SIZE_PARTIAL
];

346 
	}
}

350 
	$Átfs_ôﬂ
(
uöt32
 
num
, *
s
)

352 * 
˝
;

353 
outbuf
[12];

354 c⁄° 
digôs
[] = "0123456789ABCDEF";

357 
˝
 = 
outbuf
;

360 *
˝
++ = 
digôs
[()(
num
 % 10)];

362 (
num
 /= 10) > 0);

364 *
˝
-- = 0;

367 
˝
 >
outbuf
)

368 *
s
++ = *
˝
--;

370 *
s
 = 0;

371 
	}
}

378 #i‡
FATFS_INC_LFN_SUPPORT


379 #i‡
FATFS_INC_WRITE_SUPPORT


380 
	$Átfs_l‚_gíî©e_èû
(*
s‚_ouçut
, *
s‚_öput
, 
uöt32
 
èûNum
)

382 
èû_ch¨s
;

383 
èû_°r
[12];

385 i‡(
èûNum
 > 99999)

389 
	`mem£t
(
èû_°r
, 0x00, (tail_str));

390 
èû_°r
[0] = '~';

391 
	`Átfs_ôﬂ
(
èûNum
, 
èû_°r
+1);

394 
	`mem˝y
(
s‚_ouçut
, 
s‚_öput
, 
FAT_SFN_SIZE_FULL
);

397 
èû_ch¨s
 = ()
	`°æí
(
èû_°r
);

398 
	`mem˝y
(
s‚_ouçut
+(
FAT_SFN_SIZE_PARTIAL
-
èû_ch¨s
), 
èû_°r
,Åail_chars);

401 
	}
}

	@src/fat_io_lib/fat_misc.h

1 #i‚de‡
__FAT_MISC_H__


2 
	#__FAT_MISC_H__


	)

4 
	~"Át_defs.h
"

5 
	~"Át_›ts.h
"

10 
	#MAX_LONGFILENAME_ENTRIES
 20

	)

11 
	#MAX_LFN_ENTRY_LENGTH
 13

	)

16 
	#GET_32BIT_WORD
(
buf„r
, 
loˇti⁄
Ë–((
uöt32
)buf„r[loˇti⁄+3]<<24Ë+ ((uöt32)buf„r[loˇti⁄+2]<<16Ë+ ((uöt32)buf„r[loˇti⁄+1]<<8Ë+ (uöt32)buf„r[loˇti⁄+0] )

	)

17 
	#GET_16BIT_WORD
(
buf„r
, 
loˇti⁄
Ë–((
uöt16
)buf„r[loˇti⁄+1]<<8Ë+ (uöt16)buf„r[loˇti⁄+0] )

	)

19 
	#SET_32BIT_WORD
(
buf„r
, 
loˇti⁄
, 
vÆue
Ë{ buf„r[loˇti⁄+0] = (
uöt8
)((vÆue)&0xFF); \

	)

20 
	gbuf„r
[
loˇti⁄
+1] = (
uöt8
)((
vÆue
>>8)&0xFF); \

21 
	gbuf„r
[
loˇti⁄
+2] = (
uöt8
)((
vÆue
>>16)&0xFF); \

22 
	gbuf„r
[
loˇti⁄
+3] = (
uöt8
)((
vÆue
>>24)&0xFF); }

24 
	#SET_16BIT_WORD
(
buf„r
, 
loˇti⁄
, 
vÆue
Ë{ buf„r[loˇti⁄+0] = (
uöt8
)((vÆue)&0xFF); \

	)

25 
	gbuf„r
[
loˇti⁄
+1] = (
uöt8
)((
vÆue
>>8)&0xFF); }

30 
	sl‚_ˇche


32 #i‡
FATFS_INC_LFN_SUPPORT


34 
uöt8
 
	mSåög
[
MAX_LONGFILENAME_ENTRIES
][
MAX_LFN_ENTRY_LENGTH
];

35 
uöt8
 
	mNuŒ
;

37 
uöt8
 
	mno_of_°rögs
;

43 
Átfs_l‚_ˇche_öô
(
l‚_ˇche
 *
l‚
, 
wùeTabÀ
);

44 
Átfs_l‚_ˇche_íåy
(
l‚_ˇche
 *
l‚
, 
uöt8
 *
íåyBuf„r
);

45 * 
Átfs_l‚_ˇche_gë
(
l‚_ˇche
 *
l‚
);

46 
Átfs_íåy_l‚_ãxt
(
Át_dú_íåy
 *
íåy
);

47 
Átfs_íåy_l‚_övÆid
(
Át_dú_íåy
 *
íåy
);

48 
Átfs_íåy_l‚_exi°s
(
l‚_ˇche
 *
l‚
, 
Át_dú_íåy
 *
íåy
);

49 
Átfs_íåy_s‚_⁄ly
(
Át_dú_íåy
 *
íåy
);

50 
Átfs_íåy_is_dú
(
Át_dú_íåy
 *
íåy
);

51 
Átfs_íåy_is_fûe
(
Át_dú_íåy
 *
íåy
);

52 
Átfs_l‚_íåõs_ªquúed
(*
fûíame
);

53 
Átfs_fûíame_to_l‚
(*
fûíame
, 
uöt8
 *
buf„r
, 
íåy
, uöt8 
s‚Chk
);

54 
Átfs_s‚_¸óã_íåy
(*
sh‹tfûíame
, 
uöt32
 
size
, uöt32 
°¨tClu°î
, 
Át_dú_íåy
 *
íåy
, 
dú
);

55 
Átfs_l‚_¸óã_s‚
(*
s‚_ouçut
, *
fûíame
);

56 
Átfs_l‚_gíî©e_èû
(*
s‚_ouçut
, *
s‚_öput
, 
uöt32
 
èûNum
);

	@src/fat_io_lib/fat_opts.h

1 #i‚de‡
__FAT_OPTS_H__


2 
	#__FAT_OPTS_H__


	)

4 #ifde‡
FATFS_USE_CUSTOM_OPTS_FILE


5 
	~"Át_cu°om.h
"

13 #i‚de‡
FATFS_IS_LITTLE_ENDIAN


14 
	#FATFS_IS_LITTLE_ENDIAN
 0

	)

18 #i‚de‡
FATFS_MAX_LONG_FILENAME


19 
	#FATFS_MAX_LONG_FILENAME
 260

	)

23 #i‚de‡
FATFS_MAX_OPEN_FILES


24 
	#FATFS_MAX_OPEN_FILES
 2

	)

28 #i‚de‡
FAT_BUFFER_SECTORS


29 
	#FAT_BUFFER_SECTORS
 1

	)

34 #i‚de‡
FAT_BUFFERS


35 
	#FAT_BUFFERS
 1

	)

44 #i‚de‡
FATFS_INC_WRITE_SUPPORT


45 
	#FATFS_INC_WRITE_SUPPORT
 1

	)

51 #i‚de‡
FATFS_INC_LFN_SUPPORT


52 
	#FATFS_INC_LFN_SUPPORT
 1

	)

56 #i‚de‡
FATFS_DIR_LIST_SUPPORT


57 
	#FATFS_DIR_LIST_SUPPORT
 1

	)

61 #i‚de‡
FATFS_INC_FORMAT_SUPPORT


62 
	#FATFS_INC_FORMAT_SUPPORT
 1

	)

66 
	#FAT_SECTOR_SIZE
 512

	)

69 #i‚de‡
FAT_PRINTF


71 #ifde‡
FAT_PRINTF_NOINC_STDIO


72 
¥ötf
(c⁄° * 
˘æ1
, ... );

73 
	#FAT_PRINTF
(
a
Ë
¥ötf
 
	)
a

76 
	~<°dio.h
>

77 
	#FAT_PRINTF
(
a
Ë
¥ötf
 
	)
a

	@src/fat_io_lib/fat_string.c

32 
	~<°rög.h
>

33 
	~<as£π.h
>

34 
	~"Át_°rög.h
"

44 
	$Átfs_tŸÆ_∑th_Àvñs
(*
∑th
)

46 
Àvñs
 = 0;

47 
ex≥˘edch¨
;

49 i‡(!
∑th
)

55 i‡(*
∑th
 == '/')

57 
ex≥˘edch¨
 = '/';

58 
∑th
++;

60 i‡(
∑th
[1] == ':' ||Öath[2] == '\\')

62 
ex≥˘edch¨
 = '\\';

63 
∑th
 += 3;

69 *
∑th
)

72 ; *
∑th
; )

75 i‡(*
∑th
 =
ex≥˘edch¨
) {Öath++; ; }

76 
∑th
++;

80 
Àvñs
++;

84  
Àvñs
-1;

85 
	}
}

92 
	$Átfs_gë_sub°rög
(*
∑th
, 
Àvñªq
, *
ouçut
, 
max_Àn
)

94 
i
;

95 
∑thÀn
=0;

96 
Àvñs
=0;

97 
c›y≤t
=0;

98 
ex≥˘edch¨
;

100 i‡(!
∑th
 || 
max_Àn
 <= 0)

106 i‡(*
∑th
 == '/')

108 
ex≥˘edch¨
 = '/';

109 
∑th
++;

111 i‡(
∑th
[1] == ':' ||Öath[2] == '\\')

113 
ex≥˘edch¨
 = '\\';

114 
∑th
 += 3;

120 
∑thÀn
 = ()
	`°æí
 (
∑th
);

123 
i
 = 0; i<
∑thÀn
; i++)

126 i‡(*
∑th
 =
ex≥˘edch¨
Ë
Àvñs
++;

129 i‡–(
Àvñs
 =
Àvñªq
Ë&& (*
∑th
 !
ex≥˘edch¨
Ë&& (
c›y≤t
 < (
max_Àn
-1)))

130 
ouçut
[
c›y≤t
++] = *
∑th
;

133 
∑th
++;

137 
ouçut
[
c›y≤t
] = '\0';

140 i‡(
ouçut
[0] != '\0')

144 
	}
}

151 
	$Átfs_•lô_∑th
(*
fuŒ_∑th
, *
∑th
, 
max_∑th
, *
fûíame
, 
max_fûíame
)

153 
°rödex
;

156 
Àvñs
 = 
	`Átfs_tŸÆ_∑th_Àvñs
(
fuŒ_∑th
);

157 i‡(
Àvñs
 == -1)

161 i‡(
	`Átfs_gë_sub°rög
(
fuŒ_∑th
, 
Àvñs
, 
fûíame
, 
max_fûíame
) != 0)

165 i‡(
Àvñs
 == 0)

166 
∑th
[0] = '\0';

169 
°rödex
 = ()
	`°æí
(
fuŒ_∑th
Ë- ()°æí(
fûíame
);

170 i‡(
°rödex
 > 
max_∑th
)

171 
°rödex
 = 
max_∑th
;

173 
	`mem˝y
(
∑th
, 
fuŒ_∑th
, 
°rödex
);

174 
∑th
[
°rödex
-1] = '\0';

178 
	}
}

182 
	$FûeSåög_SåCmpNoCa£
(*
s1
, *
s2
, 
n
)

184 
diff
;

185 
a
,
b
;

187 
n
--)

189 
a
 = *
s1
;

190 
b
 = *
s2
;

193 i‡((
a
>='A') && (a<='Z'))

194 
a
+= 32;

195 i‡((
b
>='A') && (b<='Z'))

196 
b
+= 32;

198 
diff
 = 
a
 - 
b
;

201 i‡(
diff
)

202  
diff
;

205 i‡–(*
s1
 =0Ë|| (*
s2
 == 0) )

208 
s1
++;

209 
s2
++;

212 
	}
}

217 
	$FûeSåög_GëExãnsi⁄
(*
°r
)

219 
dŸPos
 = -1;

220 *
°rSrc
 = 
°r
;

223 *
°rSrc
)

225 i‡(*
°rSrc
=='.')

226 
dŸPos
 = ()(
°rSrc
-
°r
);

228 
°rSrc
++;

231  
dŸPos
;

232 
	}
}

237 
	$FûeSåög_TrimLígth
(*
°r
, 
°rLí
)

239 
Àngth
 = 
°rLí
;

240 *
°rSrc
 = 
°r
+
°rLí
-1;

243 
°rLí
 != 0)

245 i‡(*
°rSrc
 == ' ')

246 
Àngth
 = ()(
°rSrc
 - 
°r
);

250 
°rSrc
--;

251 
°rLí
--;

254  
Àngth
;

255 
	}
}

260 
	$Átfs_com∑ª_«mes
(* 
°rA
, * 
°rB
)

262 *
ext1
 = 
NULL
;

263 *
ext2
 = 
NULL
;

264 
ext1Pos
, 
ext2Pos
;

265 
fûe1Lí
, 
fûe2Lí
;

268 
ext1Pos
 = 
	`FûeSåög_GëExãnsi⁄
(
°rA
);

269 
ext2Pos
 = 
	`FûeSåög_GëExãnsi⁄
(
°rB
);

274 i‡((
ext1Pos
==-1Ë&& (
ext2Pos
!=-1))

276 i‡((
ext2Pos
==-1Ë&& (
ext1Pos
!=-1))

280 i‡(
ext1Pos
!=-1)

283 
ext1
 = 
°rA
+
ext1Pos
+1;

284 
ext2
 = 
°rB
+
ext2Pos
+1;

287 i‡(
	`°æí
(
ext1
Ë!°æí(
ext2
))

291 i‡(
	`FûeSåög_SåCmpNoCa£
(
ext1
, 
ext2
, ()
	`°æí
(ext1))!=0)

295 
fûe1Lí
 = 
ext1Pos
;

296 
fûe2Lí
 = 
ext2Pos
;

302 
fûe1Lí
 = ()
	`°æí
(
°rA
);

303 
fûe2Lí
 = ()
	`°æí
(
°rB
);

307 
fûe1Lí
 = 
	`FûeSåög_TrimLígth
(
°rA
, file1Len);

308 
fûe2Lí
 = 
	`FûeSåög_TrimLígth
(
°rB
, file2Len);

311 i‡(
fûe1Lí
!=
fûe2Lí
)

315 i‡(
	`FûeSåög_SåCmpNoCa£
(
°rA
, 
°rB
, 
fûe1Lí
)!=0)

319 
	}
}

323 
	$Átfs_°rög_íds_wôh_¶ash
(*
∑th
)

325 i‡(
∑th
)

327 *
∑th
)

330 i‡(!(*(
∑th
+1)))

332 i‡(*
∑th
 == '\\' || *path == '/')

336 
∑th
++;

341 
	}
}

345 
	$Átfs_gë_s‚_di•œy_«me
(* 
out
, * 
ö
)

347 
Àn
 = 0;

348 *
ö
 && 
Àn
 <= 11)

350 
a
 = *
ö
++;

352 i‡(
a
 == ' ')

355 i‡((
a
>='A') && (a<='Z'))

356 
a
+= 32;

358 *
out
++ = 
a
;

359 
Àn
++;

362 *
out
 = '\0';

364 
	}
}

370 
	$Átfs_gë_exãnsi⁄
(* 
fûíame
, * 
out
, 
maxÀn
)

372 
Àn
 = 0;

375 
ext_pos
 = 
	`FûeSåög_GëExãnsi⁄
(
fûíame
);

377 i‡(
ext_pos
 > 0 && 
out
 && 
maxÀn
)

379 
fûíame
 +
ext_pos
 + 1;

381 *
fûíame
 && 
Àn
 < (
maxÀn
-1))

383 
a
 = *
fûíame
++;

386 i‡((
a
>='A') && (a<='Z'))

387 
a
+= 32;

389 *
out
++ = 
a
;

390 
Àn
++;

393 *
out
 = '\0';

398 
	}
}

403 
	$Átfs_¸óã_∑th_°rög
(* 
∑th
, *
fûíame
, * 
out
, 
maxÀn
)

405 
Àn
 = 0;

406 
œ°
 = 0;

407 
£≥øt‹
 = '/';

409 i‡(
∑th
 && 
fûíame
 && 
out
 && 
maxÀn
 > 0)

411 *
∑th
 && 
Àn
 < (
maxÀn
-2))

413 
œ°
 = *
∑th
++;

414 i‡(
œ°
 == '\\')

415 
£≥øt‹
 = '\\';

416 *
out
++ = 
œ°
;

417 
Àn
++;

421 i‡(
œ°
 != '\\' &&Üast != '/')

422 *
out
++ = 
£≥øt‹
;

424 *
fûíame
 && 
Àn
 < (
maxÀn
-1))

426 *
out
++ = *
fûíame
++;

427 
Àn
++;

430 *
out
 = '\0';

436 
	}
}

440 #ifde‡
FAT_STRING_TESTBENCH


441 
	$maö
()

443 
ouçut
[255];

444 
ouçut2
[255];

446 
	`as£π
(
	`Átfs_tŸÆ_∑th_Àvñs
("C:\\folder\\file.zip") == 1);

447 
	`as£π
(
	`Átfs_tŸÆ_∑th_Àvñs
("C:\\file.zip") == 0);

448 
	`as£π
(
	`Átfs_tŸÆ_∑th_Àvñs
("C:\\folder\\folder2\\file.zip") == 2);

449 
	`as£π
(
	`Átfs_tŸÆ_∑th_Àvñs
("C:\\") == -1);

450 
	`as£π
(
	`Átfs_tŸÆ_∑th_Àvñs
("") == -1);

451 
	`as£π
(
	`Átfs_tŸÆ_∑th_Àvñs
("/dev/etc/file.zip") == 2);

452 
	`as£π
(
	`Átfs_tŸÆ_∑th_Àvñs
("/dev/file.zip") == 1);

454 
	`as£π
(
	`Átfs_gë_sub°rög
("C:\\fﬁdî\\fûe.zù", 0, 
ouçut
, (output)) == 0);

455 
	`as£π
(
	`°rcmp
(
ouçut
, "folder") == 0);

457 
	`as£π
(
	`Átfs_gë_sub°rög
("C:\\fﬁdî\\fûe.zù", 1, 
ouçut
, (output)) == 0);

458 
	`as£π
(
	`°rcmp
(
ouçut
, "file.zip") == 0);

460 
	`as£π
(
	`Átfs_gë_sub°rög
("/dev/ëc/fûe.zù", 0, 
ouçut
, (output)) == 0);

461 
	`as£π
(
	`°rcmp
(
ouçut
, "dev") == 0);

463 
	`as£π
(
	`Átfs_gë_sub°rög
("/dev/ëc/fûe.zù", 1, 
ouçut
, (output)) == 0);

464 
	`as£π
(
	`°rcmp
(
ouçut
, "etc") == 0);

466 
	`as£π
(
	`Átfs_gë_sub°rög
("/dev/ëc/fûe.zù", 2, 
ouçut
, (output)) == 0);

467 
	`as£π
(
	`°rcmp
(
ouçut
, "file.zip") == 0);

469 
	`as£π
(
	`Átfs_•lô_∑th
("C:\\fﬁdî\\fûe.zù", 
ouçut
, (ouçut), 
ouçut2
, (output2)) == 0);

470 
	`as£π
(
	`°rcmp
(
ouçut
, "C:\\folder") == 0);

471 
	`as£π
(
	`°rcmp
(
ouçut2
, "file.zip") == 0);

473 
	`as£π
(
	`Átfs_•lô_∑th
("C:\\fûe.zù", 
ouçut
, (ouçut), 
ouçut2
, (output2)) == 0);

474 
	`as£π
(
ouçut
[0] == 0);

475 
	`as£π
(
	`°rcmp
(
ouçut2
, "file.zip") == 0);

477 
	`as£π
(
	`Átfs_•lô_∑th
("/dev/ëc/fûe.zù", 
ouçut
, (ouçut), 
ouçut2
, (output2)) == 0);

478 
	`as£π
(
	`°rcmp
(
ouçut
, "/dev/etc") == 0);

479 
	`as£π
(
	`°rcmp
(
ouçut2
, "file.zip") == 0);

481 
	`as£π
(
	`FûeSåög_GëExãnsi⁄
("C:\\fûe.zù"Ë=
	`°æí
("C:\\file"));

482 
	`as£π
(
	`FûeSåög_GëExãnsi⁄
("C:\\fûe.zù.ext"Ë=
	`°æí
("C:\\file.zip"));

483 
	`as£π
(
	`FûeSåög_GëExãnsi⁄
("C:\\fûe.zù."Ë=
	`°æí
("C:\\file.zip"));

485 
	`as£π
(
	`FûeSåög_TrimLígth
("C:\\fûe.zù", 
	`°æí
("C:\\file.zip")) == strlen("C:\\file.zip"));

486 
	`as£π
(
	`FûeSåög_TrimLígth
("C:\\fûe.zù ", 
	`°æí
("C:\\file.zip ")) == strlen("C:\\file.zip"));

487 
	`as£π
(
	`FûeSåög_TrimLígth
(" ", 
	`°æí
(" ")) == 0);

489 
	`as£π
(
	`Átfs_com∑ª_«mes
("C:\\file.ext", "C:\\file.ext") == 1);

490 
	`as£π
(
	`Átfs_com∑ª_«mes
("C:\\file2.ext", "C:\\file.ext") == 0);

491 
	`as£π
(
	`Átfs_com∑ª_«mes
("C:\\file .ext", "C:\\file.ext") == 1);

492 
	`as£π
(
	`Átfs_com∑ª_«mes
("C:\\file .ext", "C:\\file2.ext") == 0);

494 
	`as£π
(
	`Átfs_°rög_íds_wôh_¶ash
("C:\\folder") == 0);

495 
	`as£π
(
	`Átfs_°rög_íds_wôh_¶ash
("C:\\folder\\") == 1);

496 
	`as£π
(
	`Átfs_°rög_íds_wôh_¶ash
("/path") == 0);

497 
	`as£π
(
	`Átfs_°rög_íds_wôh_¶ash
("/path/a") == 0);

498 
	`as£π
(
	`Átfs_°rög_íds_wôh_¶ash
("/path/") == 1);

500 
	`as£π
(
	`Átfs_gë_exãnsi⁄
("/my∑th/fûe.wav", 
ouçut
, 4) == 1);

501 
	`as£π
(
	`°rcmp
(
ouçut
, "wav") == 0);

502 
	`as£π
(
	`Átfs_gë_exãnsi⁄
("/my∑th/fûe.WAV", 
ouçut
, 4) == 1);

503 
	`as£π
(
	`°rcmp
(
ouçut
, "wav") == 0);

504 
	`as£π
(
	`Átfs_gë_exãnsi⁄
("/my∑th/fûe.zù", 
ouçut
, 4) == 1);

505 
	`as£π
(
	`°rcmp
(
ouçut
, "ext") != 0);

507 
	`as£π
(
	`Átfs_¸óã_∑th_°rög
("/mydú1", "myfûe.txt", 
ouçut
, (output)) == 1);

508 
	`as£π
(
	`°rcmp
(
ouçut
, "/mydir1/myfile.txt") == 0);

509 
	`as£π
(
	`Átfs_¸óã_∑th_°rög
("/mydú2/", "myfûe2.txt", 
ouçut
, (output)) == 1);

510 
	`as£π
(
	`°rcmp
(
ouçut
, "/mydir2/myfile2.txt") == 0);

511 
	`as£π
(
	`Átfs_¸óã_∑th_°rög
("C:\\mydú3", "myfûe3.txt", 
ouçut
, (output)) == 1);

512 
	`as£π
(
	`°rcmp
(
ouçut
, "C:\\mydir3\\myfile3.txt") == 0);

513 
	}
}

	@src/fat_io_lib/fat_string.h

1 #i‚de‡
__FILESTRING_H__


2 
	#__FILESTRING_H__


	)

7 
Átfs_tŸÆ_∑th_Àvñs
(*
∑th
);

8 
Átfs_gë_sub°rög
(*
P©h
, 
Àvñªq
, *
ouçut
, 
max_Àn
);

9 
Átfs_•lô_∑th
(*
FuŒP©h
, *
P©h
, 
max_∑th
, *
FûeName
, 
max_fûíame
);

10 
Átfs_com∑ª_«mes
(* 
°rA
, * 
°rB
);

11 
Átfs_°rög_íds_wôh_¶ash
(*
∑th
);

12 
Átfs_gë_s‚_di•œy_«me
(* 
out
, * 
ö
);

13 
Átfs_gë_exãnsi⁄
(* 
fûíame
, * 
out
, 
maxÀn
);

14 
Átfs_¸óã_∑th_°rög
(* 
∑th
, *
fûíame
, * 
out
, 
maxÀn
);

16 #i‚de‡
NULL


17 
	#NULL
 0

	)

	@src/fat_io_lib/fat_table.c

32 
	~<°rög.h
>

33 
	~"Át_defs.h
"

34 
	~"Át_ac˚ss.h
"

35 
	~"Át_èbÀ.h
"

37 #i‚de‡
FAT_BUFFERS


38 
	#FAT_BUFFERS
 1

	)

41 #i‚de‡
FAT_BUFFER_SECTORS


42 
	#FAT_BUFFER_SECTORS
 1

	)

45 #i‡
FAT_BUFFERS
 < 1 || 
FAT_BUFFER_SECTORS
 < 1

52 
	#FAT32_GET_32BIT_WORD
(
pbuf
, 
loˇti⁄
Ë–
	`GET_32BIT_WORD
’buf->
±r
,Üoˇti⁄Ë)

	)

53 
	#FAT32_SET_32BIT_WORD
(
pbuf
, 
loˇti⁄
, 
vÆue
Ë{ 
	`SET_32BIT_WORD
’buf->
±r
,Üoˇti⁄, vÆue);Öbuf->
dúty
 = 1; }

	)

54 
	#FAT16_GET_16BIT_WORD
(
pbuf
, 
loˇti⁄
Ë–
	`GET_16BIT_WORD
’buf->
±r
,Üoˇti⁄Ë)

	)

55 
	#FAT16_SET_16BIT_WORD
(
pbuf
, 
loˇti⁄
, 
vÆue
Ë{ 
	`SET_16BIT_WORD
’buf->
±r
,Üoˇti⁄, vÆue);Öbuf->
dúty
 = 1; }

	)

60 
	$Átfs_Át_öô
(
Átfs
 *
fs
)

62 
i
;

65 
fs
->
Át_buf„r_hód
 = 
NULL
;

67 
i
=0;i<
FAT_BUFFERS
;i++)

70 
fs
->
Át_buf„rs
[
i
].
addªss
 = 
FAT32_INVALID_CLUSTER
;

71 
fs
->
Át_buf„rs
[
i
].
dúty
 = 0;

72 
	`mem£t
(
fs
->
Át_buf„rs
[
i
].
£˘‹
, 0x00, (fs->fat_buffers[i].sector));

73 
fs
->
Át_buf„rs
[
i
].
±r
 = 
NULL
;

76 
fs
->
Át_buf„rs
[
i
].
√xt
 = fs->
Át_buf„r_hód
;

77 
fs
->
Át_buf„r_hód
 = &fs->
Át_buf„rs
[
i
];

79 
	}
}

83 
	$Átfs_Át_wrôeback
(
Átfs
 *
fs
, 
Át_buf„r
 *
pcur
)

85 i‡(
pcur
)

88 i‡(
pcur
->
dúty
)

90 i‡(
fs
->
disk_io
.
wrôe_medü
)

92 
uöt32
 
£˘‹s
 = 
FAT_BUFFER_SECTORS
;

93 
uöt32
 
off£t
 = 
pcur
->
addªss
 - 
fs
->
Át_begö_lba
;

96 i‡((
off£t
 + 
FAT_BUFFER_SECTORS
Ë<
fs
->
Át_£˘‹s
)

97 
£˘‹s
 = 
FAT_BUFFER_SECTORS
;

99 
£˘‹s
 = 
fs
->
Át_£˘‹s
 - 
off£t
;

101 i‡(!
fs
->
disk_io
.
	`wrôe_medü
(
pcur
->
addªss
,Öcur->
£˘‹
, 
£˘‹s
))

105 
pcur
->
dúty
 = 0;

112 
	}
}

116 
Át_buf„r
 *
	$Átfs_Át_ªad_£˘‹
(
Átfs
 *
fs
, 
uöt32
 
£˘‹
)

118 
Át_buf„r
 *
œ°
 = 
NULL
;

119 
Át_buf„r
 *
pcur
 = 
fs
->
Át_buf„r_hód
;

122 
pcur
)

125 i‡((
£˘‹
 >
pcur
->
addªss
Ë&& (£˘‹ < (pcur->addªs†+ 
FAT_BUFFER_SECTORS
)))

129 i‡(
pcur
->
√xt
 =
NULL
)

132 i‡(
œ°
)

133 
œ°
->
√xt
 = 
NULL
;

136 
fs
->
Át_buf„r_hód
 = 
NULL
;

139 
œ°
 = 
pcur
;

140 
pcur
 =Öcur->
√xt
;

144 i‡(
pcur
)

146 
pcur
->
±r
 = (
uöt8
 *)’cur->
£˘‹
 + ((£˘‹ -Öcur->
addªss
Ë* 
FAT_SECTOR_SIZE
));

147  
pcur
;

151 
pcur
 = 
œ°
;

154 
pcur
->
√xt
 = 
fs
->
Át_buf„r_hód
;

155 
fs
->
Át_buf„r_hód
 = 
pcur
;

158 i‡(
pcur
->
dúty
)

159 i‡(!
	`Átfs_Át_wrôeback
(
fs
, 
pcur
))

163 
pcur
->
addªss
 = 
£˘‹
;

166 i‡(!
fs
->
disk_io
.
	`ªad_medü
(
pcur
->
addªss
,Öcur->
£˘‹
, 
FAT_BUFFER_SECTORS
))

169 
pcur
->
addªss
 = 
FAT32_INVALID_CLUSTER
;

170  
NULL
;

173 
pcur
->
±r
 =Öcur->
£˘‹
;

174  
pcur
;

175 
	}
}

179 
	$Átfs_Át_purge
(
Átfs
 *
fs
)

181 
Át_buf„r
 *
pcur
 = 
fs
->
Át_buf„r_hód
;

184 
pcur
)

187 i‡(
pcur
->
dúty
)

188 i‡(!
	`Átfs_Át_wrôeback
(
fs
, 
pcur
))

191 
pcur
 =Öcur->
√xt
;

195 
	}
}

205 
uöt32
 
	$Átfs_föd_√xt_˛u°î
(
Átfs
 *
fs
, 
uöt32
 
cuºít_˛u°î
)

207 
uöt32
 
Át_£˘‹_off£t
, 
posôi⁄
;

208 
uöt32
 
√xt˛u°î
;

209 
Át_buf„r
 *
pbuf
;

212 i‡(
cuºít_˛u°î
 == 0)

213 
cuºít_˛u°î
 = 2;

216 i‡(
fs
->
Át_ty≥
 =
FAT_TYPE_16
)

217 
Át_£˘‹_off£t
 = 
cuºít_˛u°î
 / 256;

219 
Át_£˘‹_off£t
 = 
cuºít_˛u°î
 / 128;

222 
pbuf
 = 
	`Átfs_Át_ªad_£˘‹
(
fs
, fs->
Át_begö_lba
+
Át_£˘‹_off£t
);

223 i‡(!
pbuf
)

224  (
FAT32_LAST_CLUSTER
);

226 i‡(
fs
->
Át_ty≥
 =
FAT_TYPE_16
)

229 
posôi⁄
 = (
cuºít_˛u°î
 - (
Át_£˘‹_off£t
 * 256)) * 2;

232 
√xt˛u°î
 = 
	`FAT16_GET_16BIT_WORD
(
pbuf
, (
uöt16
)
posôi⁄
);

235 i‡(
√xt˛u°î
 >= 0xFFF8 &&Çextcluster <= 0xFFFF)

236  (
FAT32_LAST_CLUSTER
);

241 
posôi⁄
 = (
cuºít_˛u°î
 - (
Át_£˘‹_off£t
 * 128)) * 4;

244 
√xt˛u°î
 = 
	`FAT32_GET_32BIT_WORD
(
pbuf
, (
uöt16
)
posôi⁄
);

247 
√xt˛u°î
 =Çextcluster & 0x0FFFFFFF;

250 i‡(
√xt˛u°î
 >= 0x0FFFFFF8 &&Çextcluster <= 0x0FFFFFFF)

251  (
FAT32_LAST_CLUSTER
);

255  (
√xt˛u°î
);

256 
	}
}

260 
	$Átfs_£t_fs_öfo_√xt_‰ì_˛u°î
(
Átfs
 *
fs
, 
uöt32
 
√wVÆue
)

262 i‡(
fs
->
Át_ty≥
 =
FAT_TYPE_16
)

267 
Át_buf„r
 *
pbuf
 = 
	`Átfs_Át_ªad_£˘‹
(
fs
, fs->
lba_begö
+fs->
fs_öfo_£˘‹
);

268 i‡(!
pbuf
)

272 
	`FAT32_SET_32BIT_WORD
(
pbuf
, 492, 
√wVÆue
);

273 
fs
->
√xt_‰ì_˛u°î
 = 
√wVÆue
;

276 i‡(
fs
->
disk_io
.
wrôe_medü
)

277 
fs
->
disk_io
.
	`wrôe_medü
(
pbuf
->
addªss
,Öbuf->
£˘‹
, 1);

280 
pbuf
->
addªss
 = 
FAT32_INVALID_CLUSTER
;

281 
pbuf
->
dúty
 = 0;

283 
	}
}

287 #i‡
FATFS_INC_WRITE_SUPPORT


288 
	$Átfs_föd_bœnk_˛u°î
(
Átfs
 *
fs
, 
uöt32
 
°¨t_˛u°î
, uöt32 *
‰ì_˛u°î
)

290 
uöt32
 
Át_£˘‹_off£t
, 
posôi⁄
;

291 
uöt32
 
√xt˛u°î
;

292 
uöt32
 
cuºít_˛u°î
 = 
°¨t_˛u°î
;

293 
Át_buf„r
 *
pbuf
;

298 i‡(
fs
->
Át_ty≥
 =
FAT_TYPE_16
)

299 
Át_£˘‹_off£t
 = 
cuºít_˛u°î
 / 256;

301 
Át_£˘‹_off£t
 = 
cuºít_˛u°î
 / 128;

303 i‡–
Át_£˘‹_off£t
 < 
fs
->
Át_£˘‹s
)

306 
pbuf
 = 
	`Átfs_Át_ªad_£˘‹
(
fs
, fs->
Át_begö_lba
+
Át_£˘‹_off£t
);

307 i‡(!
pbuf
)

310 i‡(
fs
->
Át_ty≥
 =
FAT_TYPE_16
)

313 
posôi⁄
 = (
cuºít_˛u°î
 - (
Át_£˘‹_off£t
 * 256)) * 2;

316 
√xt˛u°î
 = 
	`FAT16_GET_16BIT_WORD
(
pbuf
, (
uöt16
)
posôi⁄
);

321 
posôi⁄
 = (
cuºít_˛u°î
 - (
Át_£˘‹_off£t
 * 128)) * 4;

324 
√xt˛u°î
 = 
	`FAT32_GET_32BIT_WORD
(
pbuf
, (
uöt16
)
posôi⁄
);

327 
√xt˛u°î
 =Çextcluster & 0x0FFFFFFF;

330 i‡(
√xt˛u°î
 !=0 )

331 
cuºít_˛u°î
++;

337 
√xt˛u°î
 != 0x0);

340 *
‰ì_˛u°î
 = 
cuºít_˛u°î
;

342 
	}
}

348 #i‡
FATFS_INC_WRITE_SUPPORT


349 
	$Átfs_Át_£t_˛u°î
(
Átfs
 *
fs
, 
uöt32
 
˛u°î
, uöt32 
√xt_˛u°î
)

351 
Át_buf„r
 *
pbuf
;

352 
uöt32
 
Át_£˘‹_off£t
, 
posôi⁄
;

355 i‡(
fs
->
Át_ty≥
 =
FAT_TYPE_16
)

356 
Át_£˘‹_off£t
 = 
˛u°î
 / 256;

358 
Át_£˘‹_off£t
 = 
˛u°î
 / 128;

361 
pbuf
 = 
	`Átfs_Át_ªad_£˘‹
(
fs
, fs->
Át_begö_lba
+
Át_£˘‹_off£t
);

362 i‡(!
pbuf
)

365 i‡(
fs
->
Át_ty≥
 =
FAT_TYPE_16
)

368 
posôi⁄
 = (
˛u°î
 - (
Át_£˘‹_off£t
 * 256)) * 2;

371 
	`FAT16_SET_16BIT_WORD
(
pbuf
, (
uöt16
)
posôi⁄
, ((uöt16)
√xt_˛u°î
));

376 
posôi⁄
 = (
˛u°î
 - (
Át_£˘‹_off£t
 * 128)) * 4;

379 
	`FAT32_SET_32BIT_WORD
(
pbuf
, (
uöt16
)
posôi⁄
, 
√xt_˛u°î
);

383 
	}
}

388 #i‡
FATFS_INC_WRITE_SUPPORT


389 
	$Átfs_‰ì_˛u°î_chaö
(
Átfs
 *
fs
, 
uöt32
 
°¨t_˛u°î
)

391 
uöt32
 
œ°_˛u°î
;

392 
uöt32
 
√xt_˛u°î
 = 
°¨t_˛u°î
;

395  (
√xt_˛u°î
 !
FAT32_LAST_CLUSTER
) && (next_cluster != 0x00000000) )

397 
œ°_˛u°î
 = 
√xt_˛u°î
;

400 
√xt_˛u°î
 = 
	`Átfs_föd_√xt_˛u°î
(
fs
,Çext_cluster);

403 
	`Átfs_Át_£t_˛u°î
(
fs
, 
œ°_˛u°î
, 0x00000000);

407 
	}
}

413 #i‡
FATFS_INC_WRITE_SUPPORT


414 
	$Átfs_Át_add_˛u°î_to_chaö
(
Átfs
 *
fs
, 
uöt32
 
°¨t_˛u°î
, uöt32 
√wE¡ry
)

416 
uöt32
 
œ°_˛u°î
 = 
FAT32_LAST_CLUSTER
;

417 
uöt32
 
√xt_˛u°î
 = 
°¨t_˛u°î
;

419 i‡(
°¨t_˛u°î
 =
FAT32_LAST_CLUSTER
)

423  
√xt_˛u°î
 !
FAT32_LAST_CLUSTER
 )

425 
œ°_˛u°î
 = 
√xt_˛u°î
;

428 
√xt_˛u°î
 = 
	`Átfs_föd_√xt_˛u°î
(
fs
,Çext_cluster);

429 i‡(!
√xt_˛u°î
)

434 
	`Átfs_Át_£t_˛u°î
(
fs
, 
œ°_˛u°î
, 
√wE¡ry
);

437 
	`Átfs_Át_£t_˛u°î
(
fs
, 
√wE¡ry
, 
FAT32_LAST_CLUSTER
);

440 
	}
}

445 
uöt32
 
	$Átfs_cou¡_‰ì_˛u°îs
(
Átfs
 *
fs
)

447 
uöt32
 
i
,
j
;

448 
uöt32
 
cou¡
 = 0;

449 
Át_buf„r
 *
pbuf
;

451 
i
 = 0; i < 
fs
->
Át_£˘‹s
; i++)

454 
pbuf
 = 
	`Átfs_Át_ªad_£˘‹
(
fs
, fs->
Át_begö_lba
 + 
i
);

455 i‡(!
pbuf
)

458 
j
 = 0; j < 
FAT_SECTOR_SIZE
; )

460 i‡(
fs
->
Át_ty≥
 =
FAT_TYPE_16
)

462 i‡(
	`FAT16_GET_16BIT_WORD
(
pbuf
, (
uöt16
)
j
) == 0)

463 
cou¡
++;

465 
j
 += 2;

469 i‡(
	`FAT32_GET_32BIT_WORD
(
pbuf
, (
uöt16
)
j
) == 0)

470 
cou¡
++;

472 
j
 += 4;

477  
cou¡
;

478 
	}
}

	@src/fat_io_lib/fat_table.h

1 #i‚de‡
__FAT_TABLE_H__


2 
	#__FAT_TABLE_H__


	)

4 
	~"Át_›ts.h
"

5 
	~"Át_misc.h
"

10 
Átfs_Át_öô
(
Átfs
 *
fs
);

11 
Átfs_Át_purge
(
Átfs
 *
fs
);

12 
uöt32
 
Átfs_föd_√xt_˛u°î
(
Átfs
 *
fs
, uöt32 
cuºít_˛u°î
);

13 
Átfs_£t_fs_öfo_√xt_‰ì_˛u°î
(
Átfs
 *
fs
, 
uöt32
 
√wVÆue
);

14 
Átfs_föd_bœnk_˛u°î
(
Átfs
 *
fs
, 
uöt32
 
°¨t_˛u°î
, uöt32 *
‰ì_˛u°î
);

15 
Átfs_Át_£t_˛u°î
(
Átfs
 *
fs
, 
uöt32
 
˛u°î
, uöt32 
√xt_˛u°î
);

16 
Átfs_Át_add_˛u°î_to_chaö
(
Átfs
 *
fs
, 
uöt32
 
°¨t_˛u°î
, uöt32 
√wE¡ry
);

17 
Átfs_‰ì_˛u°î_chaö
(
Átfs
 *
fs
, 
uöt32
 
°¨t_˛u°î
);

18 
uöt32
 
Átfs_cou¡_‰ì_˛u°îs
(
Átfs
 *
fs
);

	@src/fat_io_lib/fat_types.h

1 #i‚de‡
__FAT_TYPES_H__


2 
	#__FAT_TYPES_H__


	)

7 #i‚de‡
FATFS_NO_DEF_TYPES


8 
	tuöt8
;

9 
	tuöt16
;

10 
	tuöt32
;

13 #i‚de‡
NULL


14 
	#NULL
 0

	)

23 #i‡
FATFS_IS_LITTLE_ENDIAN
 == 1

25 
	#FAT_HTONS
(
n
Ë“)

	)

26 
	#FAT_HTONL
(
n
Ë“)

	)

31 
	#FAT_HTONS
(
n
Ë((((
uöt16
)(“Ë& 0xff)Ë<< 8Ë| ((“Ë& 0xff00Ë>> 8))

	)

32 
	#FAT_HTONL
(
n
Ë(((((
uöt32
)“Ë& 0xFF)Ë<< 24Ë| \

	)

33 ((((
	guöt32
)(
	gn
) & 0xFF00)) << 8) | \

34 ((((
	guöt32
)(
	gn
) & 0xFF0000)) >> 8) | \

35 ((((
	guöt32
)(
	gn
) & 0xFF000000)) >> 24))

42 
	#STRUCT_PACK


	)

43 
	#STRUCT_PACK_BEGIN


	)

44 
	#STRUCT_PACK_END


	)

45 
	#STRUCT_PACKED
 
	`__©åibuã__
((
__∑cked__
))

	)

	@src/fat_io_lib/fat_write.c

32 
	~<°rög.h
>

33 
	~"Át_defs.h
"

34 
	~"Át_ac˚ss.h
"

35 
	~"Át_èbÀ.h
"

36 
	~"Át_wrôe.h
"

37 
	~"Át_°rög.h
"

38 
	~"Át_misc.h
"

40 #i‡
FATFS_INC_WRITE_SUPPORT


45 
	$Átfs_add_‰ì_•a˚
(
Átfs
 *
fs
, 
uöt32
 *
°¨tClu°î
, uöt32 
˛u°îs
)

47 
uöt32
 
i
;

48 
uöt32
 
√xt˛u°î
;

49 
uöt32
 
°¨t
 = *
°¨tClu°î
;

52 i‡(
fs
->
√xt_‰ì_˛u°î
 !
FAT32_LAST_CLUSTER
)

53 
	`Átfs_£t_fs_öfo_√xt_‰ì_˛u°î
(
fs
, 
FAT32_LAST_CLUSTER
);

55 
i
=0;i<
˛u°îs
;i++)

58 i‡(
	`Átfs_föd_bœnk_˛u°î
(
fs
, fs->
roŸdú_fú°_˛u°î
, &
√xt˛u°î
))

61 
	`Átfs_Át_£t_˛u°î
(
fs
, 
°¨t
, 
√xt˛u°î
);

64 
	`Átfs_Át_£t_˛u°î
(
fs
, 
√xt˛u°î
, 
FAT32_LAST_CLUSTER
);

67 
°¨t
 = 
√xt˛u°î
;

68 i‡(
i
 == 0)

69 *
°¨tClu°î
 = 
√xt˛u°î
;

76 
	}
}

82 
	$Átfs_Æloˇã_‰ì_•a˚
(
Átfs
 *
fs
, 
√wFûe
, 
uöt32
 *
°¨tClu°î
, uöt32 
size
)

84 
uöt32
 
˛u°îSize
;

85 
uöt32
 
˛u°îCou¡
;

86 
uöt32
 
√xt˛u°î
;

88 i‡(
size
==0)

92 i‡(
fs
->
√xt_‰ì_˛u°î
 !
FAT32_LAST_CLUSTER
)

93 
	`Átfs_£t_fs_öfo_√xt_‰ì_˛u°î
(
fs
, 
FAT32_LAST_CLUSTER
);

96 
˛u°îSize
 = 
fs
->
£˘‹s_≥r_˛u°î
 * 
FAT_SECTOR_SIZE
;

97 
˛u°îCou¡
 = (
size
 / 
˛u°îSize
);

100 i‡(
size
-(
˛u°îSize
*
˛u°îCou¡
))

101 
˛u°îCou¡
++;

104 i‡(
√wFûe
)

106 i‡(!
	`Átfs_föd_bœnk_˛u°î
(
fs
, fs->
roŸdú_fú°_˛u°î
, &
√xt˛u°î
))

110 i‡(
˛u°îCou¡
==1)

112 
	`Átfs_Át_£t_˛u°î
(
fs
, 
√xt˛u°î
, 
FAT32_LAST_CLUSTER
);

113 *
°¨tClu°î
 = 
√xt˛u°î
;

119 
√xt˛u°î
 = *
°¨tClu°î
;

121 i‡(!
	`Átfs_add_‰ì_•a˚
(
fs
, &
√xt˛u°î
, 
˛u°îCou¡
))

125 
	}
}

130 
	$Átfs_föd_‰ì_dú_off£t
(
Átfs
 *
fs
, 
uöt32
 
dúClu°î
, 
íåyCou¡
, uöt32 *
pSe˘‹
, 
uöt8
 *
pOff£t
)

132 
Át_dú_íåy
 *
dúe˘‹yE¡ry
;

133 
uöt8
 
ôem
=0;

134 
uöt16
 
ªc‹doff£t
 = 0;

135 
uöt8
 
i
=0;

136 
x
=0;

137 
possibÀ_•a˚s
 = 0;

138 
°¨t_ªc‹ded
 = 0;

141 i‡(
íåyCou¡
 == 0)

148 i‡(
	`Átfs_£˘‹_ªadî
(
fs
, 
dúClu°î
, 
x
++, 0))

151 
ôem
 = 0; iãm < 
FAT_DIR_ENTRIES_PER_SECTOR
; item++)

154 
ªc‹doff£t
 = 
FAT_DIR_ENTRY_SIZE
 * 
ôem
;

157 
dúe˘‹yE¡ry
 = (
Át_dú_íåy
*)(
fs
->
cuºít£˘‹
.
£˘‹
+
ªc‹doff£t
);

160 i‡(
	`Átfs_íåy_l‚_ãxt
(
dúe˘‹yE¡ry
))

163 i‡(
possibÀ_•a˚s
 == 0)

166 *
pSe˘‹
 = 
x
-1;

167 *
pOff£t
 = 
ôem
;

168 
°¨t_ªc‹ded
 = 1;

173 
possibÀ_•a˚s
++;

179 i‡(
fs
->
cuºít£˘‹
.
£˘‹
[
ªc‹doff£t
] =
FILE_HEADER_DELETED
)

182 i‡(
possibÀ_•a˚s
 == 0)

185 *
pSe˘‹
 = 
x
-1;

186 *
pOff£t
 = 
ôem
;

187 
°¨t_ªc‹ded
 = 1;

190 
possibÀ_•a˚s
++;

193 i‡(
possibÀ_•a˚s
 >
íåyCou¡
)

199 i‡(
fs
->
cuºít£˘‹
.
£˘‹
[
ªc‹doff£t
] =
FILE_HEADER_BLANK
)

202 i‡(
possibÀ_•a˚s
 == 0)

205 *
pSe˘‹
 = 
x
-1;

206 *
pOff£t
 = 
ôem
;

207 
°¨t_ªc‹ded
 = 1;

211 
possibÀ_•a˚s
++;

214 i‡(
possibÀ_•a˚s
 >
íåyCou¡
)

221 
possibÀ_•a˚s
 = 0;

222 
°¨t_ªc‹ded
 = 0;

230 
uöt32
 
√wClu°î
;

233 i‡(!
	`Átfs_föd_bœnk_˛u°î
(
fs
, fs->
roŸdú_fú°_˛u°î
, &
√wClu°î
))

237 i‡(!
	`Átfs_Át_add_˛u°î_to_chaö
(
fs
, 
dúClu°î
, 
√wClu°î
))

241 
	`mem£t
(
fs
->
cuºít£˘‹
.
£˘‹
, 0x00, 
FAT_SECTOR_SIZE
);

242 
i
=0;i<
fs
->
£˘‹s_≥r_˛u°î
;i++)

244 i‡(!
	`Átfs_wrôe_£˘‹
(
fs
, 
√wClu°î
, 
i
, 0))

249 i‡(!
°¨t_ªc‹ded
)

252 *
pSe˘‹
 = (
x
-1);

253 *
pOff£t
 = 0;

254 
°¨t_ªc‹ded
 = 1;

262 
	}
}

266 
	$Átfs_add_fûe_íåy
(
Átfs
 *
fs
, 
uöt32
 
dúClu°î
, *
fûíame
, *
sh‹tfûíame
, uöt32 
°¨tClu°î
, uöt32 
size
, 
dú
)

268 
uöt8
 
ôem
=0;

269 
uöt16
 
ªc‹doff£t
 = 0;

270 
uöt8
 
i
=0;

271 
uöt32
 
x
=0;

272 
íåyCou¡
;

273 
Át_dú_íåy
 
sh‹tE¡ry
;

274 
dútySe˘‹
 = 0;

276 
uöt32
 
dúSe˘‹
 = 0;

277 
uöt8
 
dúOff£t
 = 0;

278 
foundEnd
 = 0;

280 
uöt8
 
checksum
;

281 
uöt8
 *
pS«me
;

284 i‡(!
fs
->
disk_io
.
wrôe_medü
)

287 #i‡
FATFS_INC_LFN_SUPPORT


290 
íåyCou¡
 = 
	`Átfs_l‚_íåõs_ªquúed
(
fûíame
);

291 i‡(!
íåyCou¡
)

294 
íåyCou¡
 = 0;

299 i‡(!
	`Átfs_föd_‰ì_dú_off£t
(
fs
, 
dúClu°î
, 
íåyCou¡
 + 1, &
dúSe˘‹
, &
dúOff£t
))

303 
pS«me
 = (
uöt8
*)
sh‹tfûíame
;

304 
checksum
 = 0;

305 
i
=11; i!=0; i--Ë
checksum
 = ((checksum & 1Ë? 0x80 : 0Ë+ (checksum >> 1Ë+ *
pS«me
++;

308 
x
 = 
dúSe˘‹
;

314 i‡(
	`Átfs_£˘‹_ªadî
(
fs
, 
dúClu°î
, 
x
++, 0))

317 
ôem
 = 0; iãm < 
FAT_DIR_ENTRIES_PER_SECTOR
; item++)

320 
ªc‹doff£t
 = 
FAT_DIR_ENTRY_SIZE
 * 
ôem
;

323 i‡(
foundEnd
==0)

324 i‡–(
dúSe˘‹
==(
x
-1)Ë&& (
dúOff£t
==
ôem
) )

325 
foundEnd
 = 1;

328 i‡(
foundEnd
)

330 i‡(
íåyCou¡
==0)

333 
	`Átfs_s‚_¸óã_íåy
(
sh‹tfûíame
, 
size
, 
°¨tClu°î
, &
sh‹tE¡ry
, 
dú
);

334 
	`mem˝y
(&
fs
->
cuºít£˘‹
.
£˘‹
[
ªc‹doff£t
], &
sh‹tE¡ry
, (shortEntry));

337  
fs
->
disk_io
.
	`wrôe_medü
(fs->
cuºít£˘‹
.
addªss
, fs->cuºít£˘‹.
£˘‹
, 1);

339 #i‡
FATFS_INC_LFN_SUPPORT


342 
íåyCou¡
--;

345 
	`Átfs_fûíame_to_l‚
(
fûíame
, &
fs
->
cuºít£˘‹
.
£˘‹
[
ªc‹doff£t
], 
íåyCou¡
, 
checksum
);

346 
dútySe˘‹
 = 1;

353 i‡(
dútySe˘‹
)

355 i‡(!
fs
->
disk_io
.
	`wrôe_medü
(fs->
cuºít£˘‹
.
addªss
, fs->cuºít£˘‹.
£˘‹
, 1))

358 
dútySe˘‹
 = 0;

366 
	}
}

	@src/fat_io_lib/fat_write.h

1 #i‚de‡
__FAT_WRITE_H__


2 
	#__FAT_WRITE_H__


	)

4 
	~"Át_defs.h
"

5 
	~"Át_›ts.h
"

10 
Átfs_add_fûe_íåy
(
Átfs
 *
fs
, 
uöt32
 
dúClu°î
, *
fûíame
, *
sh‹tfûíame
, uöt32 
°¨tClu°î
, uöt32 
size
, 
dú
);

11 
Átfs_add_‰ì_•a˚
(
Átfs
 *
fs
, 
uöt32
 *
°¨tClu°î
, uöt32 
˛u°îs
);

12 
Átfs_Æloˇã_‰ì_•a˚
(
Átfs
 *
fs
, 
√wFûe
, 
uöt32
 *
°¨tClu°î
, uöt32 
size
);

	@src/files.c

2 
	~"¥öt_funcs.h
"

5 
	~"≠p.h
"

6 
	~"bfö.h
"

7 
	~"Êash.h
"

8 
	~"fûesy°em.h
"

13 
	~"fûes.h
"

15 
	#LPPR_LDR_PATH
 "/d•/bfö-dac-ã°.ldr"

	)

24 
	$Áke_‰ód
(vﬁ©ûê
u8
* 
d°
, 
u32
 
size
, * 
Â
) {

25 
u32
 
n
 = 0;

27 
n
 < 
size
) {

28 *
d°
 = 
	`Ê_fgëc
(
Â
);

33 
n
++;

34 
d°
++;

36 
	}
}

38 
u8
 
	$fûes_£¨ch_d•
() {

39 * 
Â
;

41 
u32
 
size
;

43 
	`¥öt_dbg
("\r\n opening dsp fileátÖath: ");

44 
	`¥öt_dbg
(
LPPR_LDR_PATH
);

47 
	`≠p_∑u£
();

49 
Â
 = 
	`Ê_f›í
(
LPPR_LDR_PATH
, "r");

50 if–
Â
 !
NULL
) {

51 
size
 = ((
FL_FILE
*)(
Â
))->
fûñígth
;

52 
	`¥öt_dbg
("\r\n opened .ldr file, size: ");

53 
	`¥öt_dbg_ul⁄g
(
size
);

54 
	`¥öt_dbg
(" ;Öointer: ");

55 
	`¥öt_dbg_hex
((
u32
)
Â
);

62 
	`¥öt_dbg
("\r\nÑeading .ldrÅo RAM");

63 
	`Áke_‰ód
((*)
bföLdrD©a
, 
size
, 
Â
);

65 
	`Ê_f˛o£
(
Â
);

67 
	`¥öt_dbg
("\r\n finishedÑeading .ldr fileÅo RAM");

68 
bföLdrSize
 = 
size
;

78 
	`¥öt_dbg
("\r\n booting DSP from RAM");

84 
	`bfö_lﬂd_buf
();

85 
	`≠p_ªsume
();

89 
	`¥öt_dbg
("\r\nÉncounteredánÉrror opening .ldr file.");

91 
	`≠p_ªsume
();

94 
	}
}

	@src/files.h

1 #i‚de‡
_ALEPH_AVR32_TEST_FILES_H_


2 
	#_ALEPH_AVR32_TEST_FILES_H_


	)

5 
u8
 
fûes_£¨ch_d•
();

	@src/filesystem.c

10 
	~<°rög.h
>

12 
	~"compûî.h
"

13 
	~"dñay.h
"

14 
	~"pdˇ.h
"

15 
	~"¥öt_funcs.h
"

16 
	~"sd_mmc_•i.h
"

17 
	~"•i.h
"

18 
	~"ty≥s.h
"

20 
	~"≠p.h
"

21 
	~"fûesy°em.h
"

26 vﬁ©ûê
U8
 
	gpdˇRxBuf
[
FS_BUF_SIZE
];

27 vﬁ©ûê
U8
 
	gpdˇTxBuf
[
FS_BUF_SIZE
];

30 vﬁ©ûê
u8
 
	gfsEndTøns„r
;

34 vﬁ©ûê
avr32_pdˇ_ch™√l_t
* 
	gpdˇRxCh™
 ;

35 vﬁ©ûê
avr32_pdˇ_ch™√l_t
* 
	gpdˇTxCh™
 ;

42 
u8
 
fûe_ªad_wrôe_ã°
();

48 
medü_ªad
(
£˘‹
, *
buf„r
, 
£˘‹_cou¡
);

49 
	$medü_ªad
(
£˘‹
, *
buf„r
, 
£˘‹_cou¡
) {

50 
i
;

52 
i
=0;i<
£˘‹_cou¡
;i++) {

53 
	`pdˇ_lﬂd_ch™√l
–
AVR32_PDCA_CHANNEL_SPI_RX
,

54 &
pdˇRxBuf
,

55 
FS_BUF_SIZE
);

57 
	`pdˇ_lﬂd_ch™√l
–
AVR32_PDCA_CHANNEL_SPI_TX
,

58 (*)&
pdˇTxBuf
,

59 
FS_BUF_SIZE
);

61 
fsEndTøns„r
 = 
Ál£
;

63 if(
	`sd_mmc_•i_ªad_›í_PDCA
 (
£˘‹
)) {

65 
	`•i_wrôe
(
SD_MMC_SPI
,0xFF);

67 
	`pdˇ_íabÀ_öãºu±_å™s„r_com∂ëe
(
AVR32_PDCA_CHANNEL_SPI_RX
);

68 
pdˇRxCh™
 =(vﬁ©ûê
avr32_pdˇ_ch™√l_t
*Ë
	`pdˇ_gë_h™dÀr
(
AVR32_PDCA_CHANNEL_SPI_RX
);

69 
pdˇTxCh™
 =(vﬁ©ûê
avr32_pdˇ_ch™√l_t
*Ë
	`pdˇ_gë_h™dÀr
(
AVR32_PDCA_CHANNEL_SPI_TX
);

70 
pdˇRxCh™
->
¸
 = 
AVR32_PDCA_TEN_MASK
;

71 
pdˇTxCh™
->
¸
 = 
AVR32_PDCA_TEN_MASK
;

73 !
fsEndTøns„r
) { ;; }

75 
i
=0; i<
FS_BUF_SIZE
; i++) {

76 
buf„r
[
i
] = 
pdˇRxBuf
[i];

79 
	`¥öt_dbg
("\r\nÉrror opening PDCAát sector ");

80 
	`¥öt_dbg_ul⁄g
(
£˘‹
);

82 
£˘‹
 ++;

83 
buf„r
 +
FS_BUF_SIZE
;

86 
	}
}

89 
medü_wrôe
(
£˘‹
, *
buf„r
, 
£˘‹_cou¡
);

90 
	$medü_wrôe
(
£˘‹
, *
buf„r
, 
£˘‹_cou¡
) {

91 
i
;

92 
boﬁ
 
°©us
;

97 
°©us
 = 
	`sd_mmc_•i_wrôe_›í
(
£˘‹
);

99 if(
°©us
 =
Ál£
) {

100 
	`¥öt_dbg
("\r\nÉrror opening sd_mmc_spi, sector: ");

101 
	`¥öt_dbg_hex
(
£˘‹
);

105 
i
=0;i<
£˘‹_cou¡
;i++) {

106 
°©us
 = 
	`sd_mmc_•i_wrôe_£˘‹_‰om_øm
(
buf„r
);

108 if(
°©us
 =
Ál£
) {

109 
	`¥öt_dbg
("\r\nÉrror writing sd_mmc_spi, sector: ");

110 
	`¥öt_dbg_hex
(
£˘‹
);

113 
£˘‹
++;

114 
buf„r
 += 512;

116 
	`sd_mmc_•i_wrôe_˛o£
();

118 
	}
}

124 
	$Át_öô
() {

125 
u8
 
ªt
 = 0;

127 
	`¥öt_dbg
("\r\n beginning FATÜibrary init.");

128 
	`Ê_öô
();

129 
	`¥öt_dbg
("\r\n finished FATÜibrary init.");

132 i‡–
	`Ê_©èch_medü
((
‚_diskio_ªad
)
medü_ªad
, (
‚_diskio_wrôe
)
medü_wrôe
Ë!
FAT_INIT_OK
 ) {

133 
	`¥öt_dbg
("\r\n failedÅoáttach mediaáccess functionsÅo fat_io_lib \r\n");

135 
ªt
 = 1;

137 
	`¥öt_dbg
("\r\náttached mediaáccess functionsÅo fat_io_lib");

139 
ªt
 = 0;

142 
ªt
 |
	`fûe_ªad_wrôe_ã°
();

143  
ªt
;

145 
	}
}

150 c⁄° 
	gã°_°rög_wrôe
[] = "ALEPH_TEST";

151 
	#TESTN
 10

	)

152 
	gã°_°rög_ªad
[
TESTN
];

154 
u8
 
	$fûe_ªad_wrôe_ã°
() {

155 * 
Â
;

156 
u8
 
ªt
;

157 
u8
 
i
;

159 
	`≠p_∑u£
();

163 
Â
 = 
	`Ê_f›í
("/aleph_test.txt", "w");

164 
	`¥öt_dbg
("\r\nÅest sdcard write, fp: ");

165 
	`¥öt_dbg_hex
((
u32
)
Â
);

166 
	`Ê_Âuts
(
ã°_°rög_wrôe
, 
Â
);

167 
	`Ê_f˛o£
(
Â
);

169 
	`¥öt_dbg
("\r\n waitingáfter write...");

170 
	`dñay_ms
(500);

172 
Â
 = 
	`Ê_f›í
("/aleph_test.txt", "r");

173 
	`¥öt_dbg
("\r\nÅest sdcardÑead, fp: ");

174 
	`¥öt_dbg_hex
((
u32
)
Â
);

175 
i
=0; i<
TESTN
; i++) {

176 
ã°_°rög_ªad
[
i
] = 
	`Ê_fgëc
(
Â
);

179 
	`¥öt_dbg
(" ,Ñead: ");

180 
	`¥öt_dbg
(
ã°_°rög_ªad
);

182 if(
	`°∫cmp
(
ã°_°rög_wrôe
, 
ã°_°rög_ªad
, 
TESTN
)) {

183 
ªt
 = 1;

184 
	`¥öt_dbg
("\r\n ERROR: sdcard write /Ñead mismatch");

186 
ªt
 = 0;

187 
	`¥öt_dbg
("\r\n OK: sdcard write /Ñead match");

190 
	`Ê_f˛o£
(
Â
);

192 
	`≠p_ªsume
();

194 
	`¥öt_dbg
("\r\n finished sdcard write/readÅest.");

195  
ªt
;

196 
	}
}

	@src/filesystem.h

1 #i‚de‡
_ALEPH_AVR32_FILESYSTEM_H_


2 
	#_ALEPH_AVR32_FILESYSTEM_H_


	)

4 
	~"ty≥s.h
"

5 
	~"Át_fûñib.h
"

7 
	#FS_BUF_SIZE
 512

	)

12 vﬁ©ûê
u8
 
fsEndTøns„r
;

14 vﬁ©ûê
U8
 
pdˇRxBuf
[
FS_BUF_SIZE
];

15 vﬁ©ûê
U8
 
pdˇTxBuf
[
FS_BUF_SIZE
];

17 vﬁ©ûê
avr32_pdˇ_ch™√l_t
* 
pdˇRxCh™
 ;

18 vﬁ©ûê
avr32_pdˇ_ch™√l_t
* 
pdˇTxCh™
 ;

22 
Át_öô
();

	@src/flash.c

2 
	~<°rög.h
>

4 
	~"dñay.h
"

5 
	~"Êashc.h
"

6 
	~"powî_˛ocks_lib.h
"

7 
	~"¥öt_funcs.h
"

9 
	~"moduÀ_comm⁄.h
"

11 
	~"bfö.h
"

12 
	~"Êash.h
"

13 
	~"mem‹y.h
"

14 
	~"ty≥s.h
"

20 
	#LDR_FLASH_BYTES
 0x10000

	)

22 
	#LDR_FLASH_STRING_LEN
 64

	)

25 
	#FIRSTRUN_MAGIC
 0x76543210

	)

29 
u32
 
	mfú°Run
;

30 
u32
 
	mldrSize
;

31 
	mldrSåög
[
LDR_FLASH_STRING_LEN
];

32 
u8
 
	mldrD©a
[
LDR_FLASH_BYTES
];

34 } 
	tnvøm_d©a_t
;

39 
__©åibuã__
((
__£˘i⁄__
(".flash_nvram")))

40 
nvøm_d©a_t
 
	gÊash_nvøm_d©a
;

46 vﬁ©ûê
u8
* 
	gfwBöD©a
;

48 vﬁ©ûê
u32
 
	gfwBöSize
 = 0;

51 vﬁ©ûê
u8
 *
	gbföLdrD©a
;

53 vﬁ©ûê
u32
 
	gbföLdrSize
 = 0;

59 
u8
 
	$öô_Êash
() {

60 
u32
 
i
;

62 
	`¥öt_dbg
("\r\n init flash... ");

65 
bföLdrD©a
 = 
	`Æloc_mem
(
BFIN_LDR_MAX_BYTES
);

66 
i
=0; i<
BFIN_LDR_MAX_BYTES
; i++Ë{ 
bföLdrD©a
[i] = 0; }

68 if(
Êash_nvøm_d©a
.
fú°Run
 !
FIRSTRUN_MAGIC
) {

70 
bföLdrSize
 = 0;

71 
	`Êashc_mem£t32
((*)&(
Êash_nvøm_d©a
.
ldrSize
), 0x00000000, 4, 
åue
);

79 
	}
}

82 
	$Êash_ªad_ldr
() {

83 
bföLdrSize
 = 
Êash_nvøm_d©a
.
ldrSize
;

84 
	`¥öt_dbg
("\r\nÑeadÜdrSize from flash: ");

85 
	`¥öt_dbg_ul⁄g
(
bföLdrSize
);

86 
	`mem˝y
((*)
bföLdrD©a
, (*)
Êash_nvøm_d©a
.
ldrD©a
, 
bföLdrSize
);

88 
	}
}

91 
	$Êash_wrôe_ldr
() {

95 
u32
 
i
;

96 
u32
 
nPages
 = 
bföLdrSize
 / 0x200;

97 
u32
 
ªm
;

98 c⁄° 
u8
* 
pSrc
;

99 
u8
* 
pD°
;

101 
	`Êashc_mem£t32
((*)&(
Êash_nvøm_d©a
.
ldrSize
), 
bföLdrSize
, 4, 
åue
);

103 
pSrc
 = (c⁄° *)
bföLdrD©a
;

104 
pD°
 = (*)&(
Êash_nvøm_d©a
.
ldrD©a
);

105 
i
=0; i<
nPages
; i++) {

106 
	`Êashc_mem˝y
((*)
pD°
, (c⁄° *)
pSrc
, 0x200, 
åue
);

107 
pD°
 += 0x200;

108 
pSrc
 += 0x200;

109 
	`dñay_ms
(1);

112 
ªm
 = 
bföLdrSize
 - (
nPages
 * 0x200);

113 
	`Êashc_mem˝y
((*)
pD°
, (c⁄° *)
pSrc
, 
ªm
, 
åue
);

114 
	}
}

117 
u8
 
	$Êash_ªad_fú°run
() {

118  (
Êash_nvøm_d©a
.
fú°Run
 =
FIRSTRUN_MAGIC
);

119 
	}
}

122 
	$Êash_wrôe_fú°run
() {

123 
	`Êashc_mem£t32
((*)&(
Êash_nvøm_d©a
.
fú°Run
), 
FIRSTRUN_MAGIC
, 4, 
åue
);

124 
	}
}

127 
	$Êash_˛ór_fú°run
() {

128 
	`Êashc_mem£t32
((*)&(
Êash_nvøm_d©a
.
fú°Run
), 0x00000000, 4, 
åue
);

129 
	}
}

	@src/flash.h

9 #i‚de‡
__ALEPH_FLASH_H__


10 
	#__ALEPH_FLASH_H__


	)

13 
	~"ty≥s.h
"

18 
	#FIRMWARE_FLASH_ADDRESS
 0x80010000

	)

24 vﬁ©ûê
u8
 *
bföLdrD©a
;

26 vﬁ©ûê
u32
 
bföLdrSize
;

33 
u8
 
öô_Êash
();

36 
Êash_ªad_ldr
();

37 
Êash_wrôe_ldr
();

40 
u8
 
Êash_ªad_fú°run
();

42 
Êash_wrôe_fú°run
();

44 
Êash_˛ór_fú°run
();

50 
u8
 
Êash_wrôe_hex_ªc‹d
(u8* 
d©a
);

	@src/font.c

1 
	~"¥öt_funcs.h
"

17 
	~"ty≥s.h
"

18 
	~"f⁄t.h
"

21 
	#MAX_RENDER_STRING
 32

	)

24 c⁄° 
glyph_t
 
	gf⁄t_d©a
[]= {

124 c⁄° 
U32
 
	gf⁄t_nglyphs
 = (
f⁄t_d©a
)/(
glyph_t
) - 1;

145 
u8
* 
	$f⁄t_glyph
(
ch
, 
u8
* 
buf
, u8 
w
, u8 
a
, u8 
b
) {

146 
u8
 
i
=0;

147 
u8
 
j
;

148 c⁄° 
glyph_t
* 
gl
 = &(
f⁄t_d©a
[
ch
 - 
FONT_ASCII_OFFSET
]);

150 
u8
 
cﬁs
 = 
FONT_CHARW
 - 
gl
->
fú°
 - gl->
œ°
;

152 
u32
 
cﬁOff£t
 = 
FONT_CHARH
 * 
w
 - 1;

156 
i
 < 
cﬁs
) {

157 
j
=0; j<
FONT_CHARH
; j++) {

158 *
buf
 = 
gl
->
d©a
[
i
 + gl->
fú°
] & (1 << 
j
Ë? 
a
 : 
b
;

161 
buf
 +
w
;

165 
buf
 -
cﬁOff£t
;

169 
i
++;

171  
buf
;

172 
	}
}

176 
u8
* 
	$f⁄t_glyph_big
(
ch
, 
u8
* 
buf
, u8 
w
, u8 
a
, u8 
b
) {

177 
u8
 
i
=0, 
j
, 
vÆ
;

178 c⁄° 
glyph_t
* 
gl
 = &(
f⁄t_d©a
[
ch
 - 
FONT_ASCII_OFFSET
]);

180 
u8
 
cﬁs
 = (
FONT_CHARW
 - 
gl
->
fú°
 - gl->
œ°
) * 2;

182 
u32
 
cﬁOff£t
 = 
FONT_CHARH
 * 
w
 - 1;

186 
i
 < 
cﬁs
) {

187 
j
=0; j<
FONT_CHARH
; j++) {

188 
vÆ
 = 
gl
->
d©a
[
i
 + gl->
fú°
] & (1 << 
j
Ë? 
a
 : 
b
;

189 *
buf
 = 
vÆ
;

190 *(
buf
 +1Ë
vÆ
;

192 
buf
 +
w
;

194 *
buf
 = 
vÆ
;

195 *(
buf
 +1Ë
vÆ
;

197 
buf
 +
w
;

200 
buf
 -
cﬁOff£t
;

202 
buf
 += 2;

204 
i
 += 2;

206  
buf
;

207 
	}
}

210 
u8
* 
	$f⁄t_°rög
(c⁄° * 
°r
, 
u8
* 
buf
, 
u32
 
size
, u8 
w
, u8 
a
, u8 
b
) {

213 
u8
* 
max
 = 
buf
 + 
size
;

214 
buf
 < 
max
) {

215 i‡(*
°r
 == 0) {

228 
buf
 = 
	`f⁄t_glyph
(*
°r
, buf, 
w
, 
a
, 
b
);

230 
buf
++;

231 
°r
++;

233  
buf
;

234 
	}
}

237 
u8
* 
	$f⁄t_°rög_big
(c⁄° * 
°r
, 
u8
* 
buf
, 
u32
 
size
, u8 
w
, u8 
a
, u8 
b
) {

238  
buf
;

239 
	}
}

	@src/font.h

1 #i‚de‡
_FONT_H_


2 
	#_FONT_H_


	)

5 
	~"ty≥s.h
"

7 
	#FONT_CHARW
 6

	)

8 
	#FONT_CHARH
 8

	)

9 
	#FONT_CHARH_1
 7

	)

11 
	#FONT_ASCII_OFFSET
 0x20

	)

16 
	s_glyph
 {

17 
U8
 
	mfú°
 ;

18 
U8
 
	mœ°
 ;

19 
U8
 
	md©a
[
FONT_CHARW
];

20 } 
	tglyph_t
;

22 c⁄° 
glyph_t
 
f⁄t_d©a
[];

24 c⁄° 
U32
 
f⁄t_nglyphs
;

32 
u8
* 
f⁄t_glyph
(
ch
, u8* 
buf
, u8 
w
, u8 
a
, u8 
b
);

34 
u8
* 
f⁄t_glyph_big
(
ch
, u8* 
buf
, u8 
w
, u8 
a
, u8 
b
);

36 
u8
* 
f⁄t_°rög
(c⁄° * 
°r
, u8* 
buf
, 
u32
 
size
, u8 
w
, u8 
a
, u8 
b
);

38 
u8
* 
f⁄t_°rög_big
(c⁄° * 
°r
, u8* 
buf
, 
u32
 
size
, u8 
w
, u8 
a
, u8 
b
);

	@src/global.h

9 #i‚de‡
_GLOBAL_H_


10 
	#_GLOBAL_H_


	)

12 
	~"ty≥s.h
"

19 vﬁ©ûê
u8
* 
bföLdrD©a
;

21 vﬁ©ûê
u32
 
bföLdrSize
;

24 vﬁ©ûê
U64
 
tcTicks
;

26 vﬁ©ûê
U8
 
ª‰esh
;

28 
S32
 
ícVÆ
[4];

31 
u8
 
·diPlug
;

	@src/i2c.c

2 
	~"¥öt_funcs.h
"

3 
	~"twi.h
"

5 
	~"c⁄f_Æïh.h
"

6 
	~"i2c.h
"

12 
u8
 
	gaddr
;

14 
twi_›ti⁄s_t
 
	g›t
;

16 
u8
 
	g°©us
;

21 
u8
 
öô_ma°î
();

23 
u8
 
£nd_ma°î
(u8 
chù
, 
u32
 
addr
, u8 
addr_Àn
, u32 
d©a_Àn
, * 
d©a
);

25 
u8
 
öô_¶ave
();

27 
¶ave_rx
(
u8
 
vÆ
);

28 
u8
 
¶ave_tx
();

29 
¶ave_°›
();

35 
	$i2c_öô
(
u8
 
add
) {

36 
	`i2c_£t_addªss
(
add
);

37 
°©us
 = 
	`öô_¶ave
();

38 
	`¥öt_dbg
("\r\nI2C init (slave) : ");

39 if(
°©us
==
TWI_SUCCESS
Ë{ 
	`¥öt_dbg
("SUCCESS"); } {Öröt_dbg("FAIL: "); 
	`¥öt_dbg_hex
(status); }

40 
	`¥öt_dbg
("\r\nslaveáddress: ");

41 
	`¥öt_dbg_hex
(
addr
);

42 
	}
}

45 
	$i2c_£t_addªss
(
u8
 
addªss
) {

46 
addr
 = 
addªss
;

48 
	}
}

51 
	$i2c_tx
(
u8
 
chù
, 
u32
 
addr
, u8 
addr_Àn
, u32 
d©a_Àn
, * 
d©a
) {

52  
	`twi_is_busy
() ) {;;}

53 
°©us
 = 
	`öô_ma°î
();

54 
	`¥öt_dbg
("\r\nI2C init (master) : ");

55 if(
°©us
==
TWI_SUCCESS
Ë{ 
	`¥öt_dbg
("SUCCESS"); } {Öröt_dbg("FAIL: "); 
	`¥öt_dbg_hex
(status); }

56 
	`¥öt_dbg
("\r\n chipáddr: ");

57 
	`¥öt_dbg_hex
(
chù
);

58 
	`¥öt_dbg
(", memáddr: ");

59 
	`¥öt_dbg_hex
(
addr
);

60 
	`¥öt_dbg
(",áddrÜen: ");

61 
	`¥öt_dbg_hex
(
addr_Àn
);

62 
	`¥öt_dbg
(", dataÜen: ");

63 
	`¥öt_dbg_hex
(
d©a_Àn
);

64 
	`¥öt_dbg
(", data (1st 4 bytes): ");

65 
	`¥öt_dbg_hex
(*((
u32
*)(
d©a
)));

67 
°©us
 = 
	`£nd_ma°î
(
chù
, 
addr
, 
addr_Àn
, 
d©a_Àn
, 
d©a
);

68 
	`¥öt_dbg
("\r\nI2CÅx (master) : ");

69 if(
°©us
==
TWI_SUCCESS
Ë{ 
	`¥öt_dbg
("SUCCESS"); } {Öröt_dbg("FAIL: "); 
	`¥öt_dbg_hex
(status); }

70  
	`twi_is_busy
() ) {;;}

71 
°©us
 = 
	`öô_¶ave
();

72 
	`¥öt_dbg
("\r\nI2C init (slave) : ");

73 if(
°©us
==
TWI_SUCCESS
Ë{ 
	`¥öt_dbg
("SUCCESS"); } {Öröt_dbg("FAIL: "); 
	`¥öt_dbg_hex
(status);}

74 
	}
}

79 
u8
 
	$öô_ma°î
() {

81 
›t
.
pba_hz
 = 
FPBA_HZ
;

82 
›t
.
•ìd
 = 
TWI_SPEED
;

83 
›t
.
chù
 = 
addr
;

85  
	`twi_ma°î_öô
(&
AVR32_TWI
, &
›t
);

86 
	}
}

88 
u8
 
	$£nd_ma°î
(
u8
 
chù
, 
u32
 
addr
, u8 
addr_Àn
, u32 
d©a_Àn
, * 
d©a
) {

89 
twi_∑ckage_t
 
∑c
;

91 
∑c
.
chù
 = chip;

92 
∑c
.
addr_Àngth
 = 
addr_Àn
;

93 
∑c
.
Àngth
 = 
d©a_Àn
;

94 
∑c
.
addr
[0] =áddr >> 16;

95 
∑c
.
addr
[1] =áddr >> 8;

96 
∑c
.
addr
[2] =áddr;

97 
∑c
.
buf„r
 = 
d©a
;

99  
	`twi_ma°î_wrôe
(&
AVR32_TWI
, &
∑c
);

102 
	}
}

104 
u8
 
	$öô_¶ave
() {

105 
twi_¶ave_f˘_t
 
twi_¶ave_f˘
;

106 
›t
.
pba_hz
 = 
FPBA_HZ
;

107 
›t
.
•ìd
 = 
TWI_SPEED
;

108 
›t
.
chù
 = 
addr
;

109 
twi_¶ave_f˘
.
rx
 = &
¶ave_rx
;

110 
twi_¶ave_f˘
.
tx
 = &
¶ave_tx
;

111 
twi_¶ave_f˘
.
°›
 = &
¶ave_°›
;

112  
	`twi_¶ave_öô
(&
AVR32_TWI
, &
›t
, &
twi_¶ave_f˘
 );

113 
	}
}

115 
	$¶ave_rx
(
u8
 
vÆ
) {

116 
	`¥öt_dbg
("\r\n i2c slaveÑeceive: ");

117 
	`¥öt_dbg_ch¨_hex
(
vÆ
);

118 
	}
}

120 
u8
 
	$¶ave_tx
() {

123 
	}
}

125 
	$¶ave_°›
() {

127 
	}
}

	@src/i2c.h

1 #i‚de‡
_I2C_H_


2 
	#_I2C_H_


	)

4 
	~"compûî.h
"

5 
	~"ty≥s.h
"

8 
i2c_öô
(
u8
 
addªss
);

10 
i2c_£t_addªss
(
u8
 
addªss
);

12 
i2c_tx
(
u8
 
chù
, 
u32
 
addr
, u8 
addr_Àn
, u32 
d©a_Àn
, * 
d©a
);

	@src/init.c

8 
	~<Êashc.h
>

9 
	~<∂l.h
>

10 
	~<sys˛k.h
>

13 
	~<usb_¥Ÿocﬁ_hid.h
>

15 
	~<uhi_hid_mou£.h
>

16 
	~<uhc.h
>

17 
	~<uhd.h
>

19 
	~"compûî.h
"

20 
	~"c⁄f_sd_mmc_•i.h
"

21 
	~"utû.h
"

22 
	~"gpio.h
"

23 
	~"pdˇ.h
"

24 
	~"powî_˛ocks_lib.h
"

25 
	~"¥öt_funcs.h
"

26 
	~"sd_mmc_•i.h
"

27 
	~"•i.h
"

28 
	~"tc.h
"

29 
	~"ußπ.h
"

32 
	~"Æïh_bﬂrd.h
"

33 
	~"c⁄f_tc_úq.h
"

34 
	~"fûesy°em.h
"

35 
	~"öô.h
"

45 
	$öô_gpio
() {

47 
	`gpio_íabÀ_pö_puŒ_up
(
ENC0_S0_PIN
);

48 
	`gpio_íabÀ_pö_puŒ_up
(
ENC0_S1_PIN
);

49 
	`gpio_íabÀ_pö_puŒ_up
(
ENC1_S0_PIN
);

50 
	`gpio_íabÀ_pö_puŒ_up
(
ENC1_S1_PIN
);

51 
	`gpio_íabÀ_pö_puŒ_up
(
ENC2_S0_PIN
);

52 
	`gpio_íabÀ_pö_puŒ_up
(
ENC2_S1_PIN
);

53 
	`gpio_íabÀ_pö_puŒ_up
(
ENC3_S0_PIN
);

54 
	`gpio_íabÀ_pö_puŒ_up
(
ENC3_S1_PIN
);

57 
	`gpio_íabÀ_pö_puŒ_up
(
SW0_PIN
);

58 
	`gpio_íabÀ_pö_puŒ_up
(
SW1_PIN
);

59 
	`gpio_íabÀ_pö_puŒ_up
(
SW2_PIN
);

60 
	`gpio_íabÀ_pö_puŒ_up
(
SW3_PIN
);

61 
	`gpio_íabÀ_pö_puŒ_up
(
SW_MODE_PIN
);

64 
	`gpio_íabÀ_pö_puŒ_up
(
SW_POWER_PIN
);

71 
	`gpio_íabÀ_pö_glôch_fûãr
(
SW_MODE_PIN
);

72 
	}
}

75 
	$öô_tc
 (vﬁ©ûê
avr32_tc_t
 *
tc
) {

77 c⁄° 
tc_wavef‹m_›t_t
 
wavef‹m_›t
 = {

78 .
ch™√l
 = 
APP_TC_CHANNEL
,

79 .
bswåg
 = 
TC_EVT_EFFECT_NOOP
,

80 .
bìvt
 = 
TC_EVT_EFFECT_NOOP
,

81 .
b˝c
 = 
TC_EVT_EFFECT_NOOP
,

82 .
b˝b
 = 
TC_EVT_EFFECT_NOOP
,

83 .
aswåg
 = 
TC_EVT_EFFECT_NOOP
,

84 .
´evt
 = 
TC_EVT_EFFECT_NOOP
,

85 .
a˝c
 = 
TC_EVT_EFFECT_NOOP
,

86 .
a˝a
 = 
TC_EVT_EFFECT_NOOP
,

88 .
wav£l
 = 
TC_WAVEFORM_SEL_UP_MODE_RC_TRIGGER
,

89 .
íërg
 = 
Ál£
,

90 .
ìvt
 = 0,

91 .
ìvãdg
 = 
TC_SEL_NO_EDGE
,

92 .
˝cdis
 = 
Ál£
,

93 .
˝c°›
 = 
Ál£
,

94 .
bur°
 = 
Ál£
,

95 .
˛ki
 = 
Ál£
,

97 .
tc˛ks
 = 
TC_CLOCK_SOURCE_TC5


101 c⁄° 
tc_öãºu±_t
 
tc_öãºu±
 = {

102 .
ërgs
 = 0,

103 .
ldrbs
 = 0,

104 .
ldøs
 = 0,

105 .
˝cs
 = 1,

106 .
˝bs
 = 0,

107 .
˝as
 = 0,

108 .
lovrs
 = 0,

109 .
covfs
 = 0

112 
	`tc_öô_wavef‹m
(
tc
, &
wavef‹m_›t
);

118 
	`tc_wrôe_rc
(
tc
, 
APP_TC_CHANNEL
, (
FPBA_HZ
 / 128 / 1000));

120 
	`tc_c⁄figuª_öãºu±s
(
tc
, 
APP_TC_CHANNEL
, &
tc_öãºu±
);

122 
	`tc_°¨t
(
tc
, 
APP_TC_CHANNEL
);

123 
	}
}

127 
	$öô_·di_ußπ
 () {

129 c⁄° 
gpio_m≠_t
 
FTDI_USART_GPIO_MAP
 = {

130 { 
FTDI_USART_RX_PIN
, 
FTDI_USART_RX_FUNCTION
 },

131 { 
FTDI_USART_TX_PIN
, 
FTDI_USART_TX_FUNCTION
 }

135 c⁄° 
ußπ_›ti⁄s_t
 
FTDI_USART_OPTIONS
 = {

136 .
baudøã
 = 
FTDI_USART_BAUDRATE
,

137 .
ch¨Àngth
 = 8,

138 .
∑rôyty≥
 = 
USART_NO_PARITY
,

139 .
°›bôs
 = 
USART_1_STOPBIT
,

140 .
ch™√lmode
 = 
USART_NORMAL_CHMODE


144 
	`gpio_íabÀ_moduÀ
(
FTDI_USART_GPIO_MAP
,

145 (
FTDI_USART_GPIO_MAP
) / (FTDI_USART_GPIO_MAP[0]));

148 
	`ußπ_öô_rs232
(
FTDI_USART
, &
FTDI_USART_OPTIONS
, 
FPBA_HZ
);

149 
	}
}

152 
	$öô_•i1
 () {

154 c⁄° 
gpio_m≠_t
 
OLED_SPI_GPIO_MAP
 = {

155 {
OLED_SPI_SCK_PIN
, 
OLED_SPI_SCK_FUNCTION
 },

156 {
OLED_SPI_MISO_PIN
, 
OLED_SPI_MISO_FUNCTION
},

157 {
OLED_SPI_MOSI_PIN
, 
OLED_SPI_MOSI_FUNCTION
},

158 {
OLED_SPI_NPCS0_PIN
, 
OLED_SPI_NPCS0_FUNCTION
 },

159 {
OLED_SPI_NPCS1_PIN
, 
OLED_SPI_NPCS1_FUNCTION
 },

160 {
OLED_SPI_NPCS2_PIN
, 
OLED_SPI_NPCS2_FUNCTION
 },

164 
•i_›ti⁄s_t
 
•iO±i⁄s
 = {

165 .
ªg
 = 
OLED_SPI_NPCS
,

166 .
baudøã
 = 40000000,

167 .
bôs
 = 8,

168 .
å™s_dñay
 = 0,

169 .
•ck_dñay
 = 0,

170 .
°ay_a˘
 = 1,

171 .
•i_mode
 = 3,

172 .
modfdis
 = 1

176 
	`gpio_íabÀ_moduÀ
(
OLED_SPI_GPIO_MAP
,

177 (
OLED_SPI_GPIO_MAP
) / (OLED_SPI_GPIO_MAP[0]));

179 
	`•i_öôMa°î
(
OLED_SPI
, &
•iO±i⁄s
);

181 
	`•i_£À˘i⁄Mode
(
OLED_SPI
, 0, 0, 0);

183 
	`•i_íabÀ
(
OLED_SPI
);

186 
	`•i_£tupChùReg
–
OLED_SPI
, &
•iO±i⁄s
, 
FPBA_HZ
 );

189 
•iO±i⁄s
.
ªg
 = 
ADC_SPI_NPCS
;

190 
•iO±i⁄s
.
baudøã
 = 20000000;

191 
•iO±i⁄s
.
bôs
 = 16;

192 
•iO±i⁄s
.
•i_mode
 = 2;

193 
•iO±i⁄s
.
•ck_dñay
 = 0;

194 
•iO±i⁄s
.
å™s_dñay
 = 5;

195 
•iO±i⁄s
.
°ay_a˘
 = 0;

196 
•iO±i⁄s
.
modfdis
 = 0;

198 
	`•i_£tupChùReg
–
ADC_SPI
, &
•iO±i⁄s
, 
FPBA_HZ
 );

201 
•iO±i⁄s
.
ªg
 = 
SD_MMC_SPI_NPCS
;

202 
•iO±i⁄s
.
baudøã
 = 
SD_MMC_SPI_MASTER_SPEED
;

203 
•iO±i⁄s
.
bôs
 = 
SD_MMC_SPI_BITS
;

204 
•iO±i⁄s
.
•ck_dñay
 = 0;

205 
•iO±i⁄s
.
å™s_dñay
 = 0;

206 
•iO±i⁄s
.
°ay_a˘
 = 1;

207 
•iO±i⁄s
.
•i_mode
 = 0;

208 
•iO±i⁄s
.
modfdis
 = 1;

211 
	`sd_mmc_•i_öô
(
•iO±i⁄s
, 
FPBA_HZ
);

212 
	}
}

216 
	$öô_loˇl_pdˇ
()

219 
pdˇ_ch™√l_›ti⁄s_t
 
pdˇ_›ti⁄s_SPI_RX
 ={

220 .
addr
 = (*)&
pdˇRxBuf
,

221 .
size
 = 
FS_BUF_SIZE
,

222 .
r_addr
 = 
NULL
,

223 .
r_size
 = 0,

224 .
pid
 = 
AVR32_PDCA_CHANNEL_USED_RX
,

225 .
å™s„r_size
 = 
PDCA_TRANSFER_SIZE_BYTE


229 
pdˇ_ch™√l_›ti⁄s_t
 
pdˇ_›ti⁄s_SPI_TX
 ={

230 .
addr
 = (*)&
pdˇTxBuf
,

231 .
size
 = 
FS_BUF_SIZE
,

232 .
r_addr
 = 
NULL
,

233 .
r_size
 = 0,

234 .
pid
 = 
AVR32_PDCA_CHANNEL_USED_TX
,

235 .
å™s„r_size
 = 
PDCA_TRANSFER_SIZE_BYTE


239 
	`pdˇ_öô_ch™√l
(
AVR32_PDCA_CHANNEL_SPI_TX
, &
pdˇ_›ti⁄s_SPI_TX
);

242 
	`pdˇ_öô_ch™√l
(
AVR32_PDCA_CHANNEL_SPI_RX
, &
pdˇ_›ti⁄s_SPI_RX
);

243 
	}
}

246 
	$öô_bfö_ªsour˚s
() {

247 c⁄° 
gpio_m≠_t
 
BFIN_SPI_GPIO_MAP
 = {

248 { 
BFIN_SPI_SCK_PIN
, 
BFIN_SPI_SCK_FUNCTION
 },

249 { 
BFIN_SPI_MISO_PIN
, 
BFIN_SPI_MISO_FUNCTION
 },

250 { 
BFIN_SPI_MOSI_PIN
, 
BFIN_SPI_MOSI_FUNCTION
 },

251 { 
BFIN_SPI_NPCS0_PIN
, 
BFIN_SPI_NPCS0_FUNCTION
 },

254 
•i_›ti⁄s_t
 
•iO±i⁄s
 = {

255 .
ªg
 = 
BFIN_SPI_NPCS
,

263 .
baudøã
 = 20000000,

264 .
bôs
 = 8,

265 .
•ck_dñay
 = 0,

267 .
å™s_dñay
 = 20,

268 .
°ay_a˘
 = 1,

269 .
•i_mode
 = 1,

270 .
modfdis
 = 1

274 
	`gpio_íabÀ_moduÀ
(
BFIN_SPI_GPIO_MAP
,

275 (
BFIN_SPI_GPIO_MAP
) / (BFIN_SPI_GPIO_MAP[0]));

278 
	`•i_öôMa°î
(
BFIN_SPI
, &
•iO±i⁄s
);

281 
	`•i_£À˘i⁄Mode
(
BFIN_SPI
, 0, 0, 0);

284 
	`•i_íabÀ
(
BFIN_SPI
);

287 
	`•i_£tupChùReg
(
BFIN_SPI
, &
•iO±i⁄s
, 
FPBA_HZ
);

293 
	`gpio_íabÀ_pö_puŒ_up
(
BFIN_RESET_PIN
);

294 
	}
}

297 
	$öô_twi
() {

299 c⁄° 
gpio_m≠_t
 
TWI_GPIO_MAP
 = {

300 { 
TWI_DATA_PIN
, 
TWI_DATA_FUNCTION
 },

301 { 
TWI_CLOCK_PIN
, 
TWI_CLOCK_FUNCTION
 }

303 
	`gpio_íabÀ_moduÀ
(
TWI_GPIO_MAP
, (TWI_GPIO_MAP) / (TWI_GPIO_MAP[0]));

304 
	}
}

308 
	$öô_usb_ho°
 () {

310 
	`uhc_°¨t
();

311 
	}
}

	@src/init.h

7 #i‚de‡
_INIT_H_


8 
	#_INIT_H_


	)

15 
öô_bfö_ªsour˚s
();

17 
öô_·di_ußπ
 ();

19 
öô_gpio
();

21 
öô_loˇl_pdˇ
();

23 
öô_•i1
 ();

25 
öô_tc
 (vﬁ©ûê
avr32_tc_t
 *
tc
);

27 
öô_twi
();

29 
öô_sd_mmc_ªsour˚s
();

31 
öô_usb_ho°
 ();

	@src/interrupts.c

2 
	~"compûî.h
"

3 
	~"dñay.h
"

4 
	~"gpio.h
"

5 
	~"ötc.h
"

6 
	~"pdˇ.h
"

7 
	~"¥öt_funcs.h
"

8 
	~"sd_mmc_•i.h
"

9 
	~"tc.h
"

11 
	~"Æïh_bﬂrd.h
"

12 
	~"bfö.h
"

13 
	~"c⁄f_tc_úq.h
"

14 
	~"ícodîs.h
"

15 
	~"evíts.h
"

16 
	~"evít_ty≥s.h
"

17 
	~"fûesy°em.h
"

18 
	~"globÆ.h
"

19 
	~"öãºu±s.h
"

20 
	~"swôches.h
"

21 
	~"timîs.h
"

22 
	~"ty≥s.h
"

27 
u8
 
	gtog
 = 0;

32 vﬁ©ûê
u64
 
	gtcTicks
 = 0;

33 vﬁ©ûê
u8
 
	gtcOvîÊow
 = 0;

34 c⁄° 
u64
 
	gtcMax
 = (
U64
)0x7fffffff;

35 c⁄° 
u64
 
	gtcMaxInv
 = (u64)0x10000000;

37 vﬁ©ûê
u8
 
	gª‰esh
 = 0;

46 
__©åibuã__
((
__öãºu±__
))

47 
úq_pdˇ
();

50 
__©åibuã__
((
__öãºu±__
))

51 
úq_tc
();

54 
__©åibuã__
((
__öãºu±__
))

55 
úq_p‹t0_löe3
();

58 
__©åibuã__
((
__öãºu±__
))

59 
úq_p‹t1_löe0
();

62 
__©åibuã__
((
__öãºu±__
))

63 
úq_p‹t1_löe1
();

70 
__©åibuã__
((
__öãºu±__
))

71 
úq_p‹t1_löe3
();

75 
__©åibuã__
((
__öãºu±__
))

76 
	$úq_pdˇ
() {

79 
	`˝u_úq_dißbÀ
();

81 
	`pdˇ_dißbÀ_öãºu±_å™s„r_com∂ëe
(
AVR32_PDCA_CHANNEL_SPI_RX
);

83 
	`sd_mmc_•i_ªad_˛o£_PDCA
();

86 
	`dñay_ms
(10);

89 
	`pdˇ_dißbÀ
(
AVR32_PDCA_CHANNEL_SPI_TX
);

90 
	`pdˇ_dißbÀ
(
AVR32_PDCA_CHANNEL_SPI_RX
);

92 
	`˝u_úq_íabÀ
();

95 
fsEndTøns„r
 = 
åue
;

96 
	}
}

99 
__©åibuã__
((
__öãºu±__
))

100 
	$úq_tc
() {

101 
tcTicks
++;

103 if(
tcTicks
 > 
tcMax
) {

104 
tcTicks
 = 0;

105 
tcOvîÊow
 = 1;

107 
tcOvîÊow
 = 0;

109 
	`¥o˚ss_timîs
();

110 if(
tog
) {

111 
tog
 = 0;

112 
	`gpio_˛r_gpio_pö
(
LED_MODE_PIN
);

114 
tog
 = 1;

115 
	`gpio_£t_gpio_pö
(
LED_MODE_PIN
);

119 
	`tc_ªad_§
(
APP_TC
, 
APP_TC_CHANNEL
);

120 
	}
}

123 
__©åibuã__
((
__öãºu±__
))

124 
	$úq_p‹t0_löe3
() {

127 if(
	`gpio_gë_pö_öãºu±_Êag
(
SW0_PIN
)) {

128 
	`gpio_˛ór_pö_öãºu±_Êag
(
SW0_PIN
);

134 
	`¥o˚ss_sw
(0);

137 if(
	`gpio_gë_pö_öãºu±_Êag
(
SW1_PIN
)) {

138 
	`gpio_˛ór_pö_öãºu±_Êag
(
SW1_PIN
);

139 
	`¥o˚ss_sw
(1);

142 if(
	`gpio_gë_pö_öãºu±_Êag
(
SW2_PIN
)) {

143 
	`gpio_˛ór_pö_öãºu±_Êag
(
SW2_PIN
);

144 
	`¥o˚ss_sw
(2);

148 if(
	`gpio_gë_pö_öãºu±_Êag
(
SW3_PIN
)) {

149 
	`gpio_˛ór_pö_öãºu±_Êag
(
SW3_PIN
);

150 
	`¥o˚ss_sw
(3);

153 if(
	`gpio_gë_pö_öãºu±_Êag
(
SW_MODE_PIN
)) {

154 
	`gpio_˛ór_pö_öãºu±_Êag
(
SW_MODE_PIN
);

155 
	`¥o˚ss_sw
(4);

157 
	}
}

160 
__©åibuã__
((
__öãºu±__
))

161 
	$úq_p‹t1_löe0
() {

164 if(
	`gpio_gë_pö_öãºu±_Êag
(
ENC0_S0_PIN
)) {

165 
	`¥o˚ss_íc
(0);

166 
	`gpio_˛ór_pö_öãºu±_Êag
(
ENC0_S0_PIN
);

169 if(
	`gpio_gë_pö_öãºu±_Êag
(
ENC0_S1_PIN
)) {

170 
	`¥o˚ss_íc
(0);

171 
	`gpio_˛ór_pö_öãºu±_Êag
(
ENC0_S1_PIN
);

174 if(
	`gpio_gë_pö_öãºu±_Êag
(
ENC1_S0_PIN
)) {

175 
	`¥o˚ss_íc
(1);

176 
	`gpio_˛ór_pö_öãºu±_Êag
(
ENC1_S0_PIN
);

179 if(
	`gpio_gë_pö_öãºu±_Êag
(
ENC1_S1_PIN
)) {

180 
	`¥o˚ss_íc
(1);

181 
	`gpio_˛ór_pö_öãºu±_Êag
(
ENC1_S1_PIN
);

184 if(
	`gpio_gë_pö_öãºu±_Êag
(
ENC2_S0_PIN
)) {

185 
	`¥o˚ss_íc
(2);

186 
	`gpio_˛ór_pö_öãºu±_Êag
(
ENC2_S0_PIN
);

189 if(
	`gpio_gë_pö_öãºu±_Êag
(
ENC2_S1_PIN
)) {

190 
	`¥o˚ss_íc
(2);

191 
	`gpio_˛ór_pö_öãºu±_Êag
(
ENC2_S1_PIN
);

193 
	}
}

196 
__©åibuã__
((
__öãºu±__
))

197 
	$úq_p‹t1_löe1
() {

200 if(
	`gpio_gë_pö_öãºu±_Êag
(
ENC3_S0_PIN
)) {

201 
	`¥o˚ss_íc
(3);

202 
	`gpio_˛ór_pö_öãºu±_Êag
(
ENC3_S0_PIN
);

205 if(
	`gpio_gë_pö_öãºu±_Êag
(
ENC3_S1_PIN
)) {

206 
	`¥o˚ss_íc
(3);

207 
	`gpio_˛ór_pö_öãºu±_Êag
(
ENC3_S1_PIN
);

210 
	}
}

225 
__©åibuã__
((
__öãºu±__
))

226 
	$úq_p‹t1_löe3
() {

228 if(
	`gpio_gë_pö_öãºu±_Êag
(
FS0_PIN
)) {

229 
	`gpio_˛ór_pö_öãºu±_Êag
(
FS0_PIN
);

230 
	`¥o˚ss_sw
(6);

232 if(
	`gpio_gë_pö_öãºu±_Êag
(
FS1_PIN
)) {

233 
	`gpio_˛ór_pö_öãºu±_Êag
(
FS1_PIN
);

234 
	`¥o˚ss_sw
(7);

236 
	}
}

242 
	$ªgi°î_öãºu±s
() {

247 
	`gpio_íabÀ_pö_öãºu±
–
BFIN_HWAIT_PIN
, 
GPIO_RISING_EDGE
);

250 
	`gpio_íabÀ_pö_öãºu±
–
ENC0_S0_PIN
, 
GPIO_PIN_CHANGE
);

251 
	`gpio_íabÀ_pö_öãºu±
–
ENC0_S1_PIN
, 
GPIO_PIN_CHANGE
);

252 
	`gpio_íabÀ_pö_öãºu±
–
ENC1_S0_PIN
, 
GPIO_PIN_CHANGE
);

253 
	`gpio_íabÀ_pö_öãºu±
–
ENC1_S1_PIN
, 
GPIO_PIN_CHANGE
);

254 
	`gpio_íabÀ_pö_öãºu±
–
ENC2_S0_PIN
, 
GPIO_PIN_CHANGE
);

255 
	`gpio_íabÀ_pö_öãºu±
–
ENC2_S1_PIN
, 
GPIO_PIN_CHANGE
);

256 
	`gpio_íabÀ_pö_öãºu±
–
ENC3_S0_PIN
, 
GPIO_PIN_CHANGE
);

257 
	`gpio_íabÀ_pö_öãºu±
–
ENC3_S1_PIN
, 
GPIO_PIN_CHANGE
);

260 
	`gpio_íabÀ_pö_öãºu±
–
SW0_PIN
, 
GPIO_PIN_CHANGE
);

261 
	`gpio_íabÀ_pö_öãºu±
–
SW1_PIN
, 
GPIO_PIN_CHANGE
);

262 
	`gpio_íabÀ_pö_öãºu±
–
SW2_PIN
, 
GPIO_PIN_CHANGE
);

263 
	`gpio_íabÀ_pö_öãºu±
–
SW3_PIN
, 
GPIO_PIN_CHANGE
);

265 
	`gpio_íabÀ_pö_öãºu±
–
FS0_PIN
, 
GPIO_PIN_CHANGE
);

266 
	`gpio_íabÀ_pö_öãºu±
–
FS1_PIN
, 
GPIO_PIN_CHANGE
);

268 
	`gpio_íabÀ_pö_öãºu±
–
SW_MODE_PIN
, 
GPIO_PIN_CHANGE
);

272 
	`INTC_ªgi°î_öãºu±
–&
úq_p‹t0_löe3
, 
AVR32_GPIO_IRQ_0
 + (
AVR32_PIN_PA24
 / 8), 
UI_IRQ_PRIORITY
);

275 
	`INTC_ªgi°î_öãºu±
–&
úq_p‹t1_löe0
, 
AVR32_GPIO_IRQ_0
 + (
AVR32_PIN_PB00
 / 8), 
UI_IRQ_PRIORITY
 );

278 
	`INTC_ªgi°î_öãºu±
–&
úq_p‹t1_löe1
, 
AVR32_GPIO_IRQ_0
 + (
AVR32_PIN_PB08
 / 8), 
UI_IRQ_PRIORITY
);

284 
	`INTC_ªgi°î_öãºu±
–&
úq_p‹t1_löe3
, 
AVR32_GPIO_IRQ_0
 + (
AVR32_PIN_PB24
 / 8), 
UI_IRQ_PRIORITY
);

288 
	`INTC_ªgi°î_öãºu±
(&
úq_pdˇ
, 
AVR32_PDCA_IRQ_0
, 
SYS_IRQ_PRIORITY
);

291 
	`INTC_ªgi°î_öãºu±
(&
úq_tc
, 
APP_TC_IRQ
, 
APP_TC_IRQ_PRIORITY
);

292 
	}
}

	@src/interrupts.h

1 #i‚de‡
_INTERRUPTS_H_


2 
	#_INTERRUPTS_H_


	)

5 vﬁ©ûê
u64
 
	gtcTicks
;

6 vﬁ©ûê
u8
 
	gtcOvîÊow
;

8 
ªgi°î_öãºu±s
();

	@src/ls_fragment.c

3 i‡(
«v_drive_gë
(Ë>
«v_drive_nb
(Ë|| 
fú°_ls
)

5 
fú°_ls
 = 
Ál£
;

7 
«v_ª£t
();

9 
«v_drive_£t
(
«v_drive_nb
() - 1);

11 
«v_∑πôi⁄_mou¡
();

14 
«v_dú_«me
((
FS_STRING
)
°r_buff
, 
MAX_FILE_PATH_LENGTH
);

16 
¥öt
(
SHL_USART
, "\r\nVolume is ");

17 
¥öt_ch¨
(
SHL_USART
, 'A' + 
«v_drive_gë
());

18 
¥öt
(
SHL_USART
, ":\r\nDirÇame is ");

19 
¥öt
(
SHL_USART
, 
°r_buff
);

20 
¥öt
(
SHL_USART
, 
CRLF
);

22 i‡(!
	$«v_fûñi°_fú°
(
FS_DIR
))

25 
	`«v_fûñi°_fú°
(
FS_FILE
);

26 
	}
}

28 
¥öt
(
SHL_USART
, "\tSize (Bytes)\tName\r\n");

30 
«v_fûñi°_ª£t
();

32 
	$«v_fûñi°_£t
(0, 
FS_FIND_NEXT
))

35 
	`¥öt
(
SHL_USART
, (
	`«v_fûe_isdú
()) ? "Dir\t" : " \t");

36 
	`¥öt_ul⁄g
(
SHL_USART
, 
	`«v_fûe_lgt
());

37 
	`¥öt
(
SHL_USART
, "\t\t");

38 
	`«v_fûe_«me
((
FS_STRING
)
°r_buff
, 
MAX_FILE_PATH_LENGTH
, 
FS_NAME_GET
, 
åue
);

39 
	`¥öt
(
SHL_USART
, 
°r_buff
);

40 
	`¥öt
(
SHL_USART
, 
CRLF
);

41 
	}
}

43 
¥öt_ul⁄g
(
SHL_USART
, 
«v_fûñi°_nb
(
FS_FILE
));

44 
¥öt
(
SHL_USART
, " Files\r\n");

46 
¥öt_ul⁄g
(
SHL_USART
, 
«v_fûñi°_nb
(
FS_DIR
));

47 
¥öt
(
SHL_USART
, " Dir\r\n");

	@src/main.c

8 
	~"compûî.h
"

9 
	~"bﬂrd.h
"

10 
	~"c⁄f_sd_mmc_•i.h
"

11 
	~"˘æ_ac˚ss.h
"

12 
	~"dñay.h
"

13 
	~"Êashc.h
"

14 
	~"ötc.h
"

15 
	~"pdˇ.h
"

16 
	~"powî_˛ocks_lib.h
"

17 
	~"¥öt_funcs.h
"

18 
	~"pm.h
"

19 
	~"gpio.h
"

20 
	~"sd_mmc_•i.h
"

21 
	~"smc.h
"

22 
	~"sys˛k.h
"

26 
	~"fix.h
"

27 
	~"∑øm_comm⁄.h
"

28 
	~"s¸ìn.h
"

29 
	~"sim∂e_°rög.h
"

30 
	~"ty≥s.h
"

31 
	~"utû.h
"

33 
	~"Æïh_bﬂrd.h
"

34 
	~"adc.h
"

35 
	~"≠p.h
"

37 
	~"bfö.h
"

38 
	~"c⁄f_tc_úq.h
"

39 
	~"ícodîs.h
"

40 
	~"evíts.h
"

41 
	~"fûes.h
"

42 
	~"fûesy°em.h
"

43 
	~"Êash.h
"

44 
	~"f⁄t.h
"

45 
	~"·di.h
"

46 
	~"globÆ.h
"

47 
	~"i2c.h
"

48 
	~"öô.h
"

49 
	~"öãºu±s.h
"

50 
	~"mem‹y.h
"

51 
	~"m⁄ome.h
"

52 
	~"swôches.h
"

53 
	~"sys_timîs.h
"

54 
	~"timîs.h
"

66 
u8
 
	gfú°run
 = 0;

68 
u8
 
	g°¨tup
 = 1;

71 
u32
 
	gadcVÆ
;

79 
öô_avr32
();

80 
öô_˘l
();

81 
check_evíts
();

83 
	$h™dÀ_m⁄ome_grid_key
(
u32
 
d©a
) {

84 
u8
 
x
, 
y
, 
z
;

86 
	`m⁄ome_grid_key_∑r£_evít_d©a
(
d©a
, &
x
, &
y
, &
z
);

87 
m⁄omeLedBuf„r
[
x
 | (
y
 << 4)] = 
z
;

88 
	`m⁄ome_ˇlc_quadø¡_Êag
(
x
, 
y
);

90 
	}
}

95 
	$öô_avr32
() {

96 vﬁ©ûê
avr32_tc_t
 *
tc
 = 
APP_TC
;

99 
	`sys˛k_öô
();

102 
	`sys˛k_íabÀ_pbb_moduÀ
(
SYSCLK_SMC_REGS
);

103 
	`Êashc_£t_bus_‰eq
(
FCPU_HZ
);

104 
	`Êashc_£t_waô_°©e
(1);

108 
	`úq_öôülize_ve˘‹s
();

111 
	`˝u_úq_dißbÀ
();

114 
	`¥öt_dbg
("\r\n init_ftdi_usart() ");

115 
	`öô_·di_ußπ
();

117 
	`¥öt_dbg
("\r\n smc_init(FHSB_HZ) ");

118 
	`smc_öô
(
FHSB_HZ
);

121 
	`¥öt_dbg
("\r\n init_spi1() ");

122 
	`öô_•i1
();

125 
	`¥öt_dbg
("\r\n init_local_pdca() ");

126 
	`öô_loˇl_pdˇ
();

129 
	`¥öt_dbg
("\r\n init_bfin_resources() ");

130 
	`öô_bfö_ªsour˚s
();

133 
	`¥öt_dbg
("\r\n init_tc(tc) ");

134 
	`öô_tc
(
tc
);

137 
	`¥öt_dbg
("\r\n init_gpio() ");

138 
	`öô_gpio
();

141 
	`¥öt_dbg
("\r\nÑegister_interrupts() ");

142 
	`ªgi°î_öãºu±s
();

145 
	`¥öt_dbg
("\r\n init_oled() ");

146 
	`öô_ﬁed
();

149 
	`¥öt_dbg
("\r\n cpu_irq_enable() ");

150 
	`˝u_úq_íabÀ
();

153 
	`öô_usb_ho°
();

155 
	`¥öt_dbg
("\r\n init_monome ");

156 
	`öô_m⁄ome
();

159 
	}
}

162 
	$öô_˘l
() {

164 
	`˝u_úq_dißbÀ
();

167 
	`öô_evíts
();

168 
	`¥öt_dbg
("\r\n init_events");

171 
	`¥öt_dbg
("\r\n init_encoders");

172 
	`öô_ícodîs
();

175 
	`¥öt_dbg
("\r\n init_adc");

176 
	`öô_adc
();

179 
	`¥öt_dbg
("\r\n init_sys_timers");

180 
	`öô_sys_timîs
();

184 
	`˝u_úq_íabÀ
();

186 
	}
}

189 
	$check_evíts
() {

190 
evít_t
 
e
;

191 
u8
 
œunch
 = 0;

193 if–
	`gë_√xt_evít
(&
e
) ) {

199 if(
°¨tup
) {

200 if–
e
.
evítTy≥
 =
kEvítSwôch0


201 || 
e
.
evítTy≥
 =
kEvítSwôch1


202 || 
e
.
evítTy≥
 =
kEvítSwôch2


203 || 
e
.
evítTy≥
 =
kEvítSwôch3


204 || 
e
.
evítTy≥
 =
kEvítSwôch4


206 
°¨tup
 = 0;

207 
	`¥öt_dbg
("\r\n keyÖressed,Üaunching ");

210 
	`dñay_ms
(10);

211 if–
fú°run
) {

214 
	`Êash_wrôe_fú°run
();

223 
e
.
evítTy≥
) {

225 
kEvítRe‰esh
:

232 
kEvítM⁄omePﬁl
 :

234 
	`m⁄ome_ªad_£rül
();

236 
kEvítM⁄omeRe‰esh
 :

238 
	`m⁄ome_grid_ª‰esh
();

241 
kEvítFtdiC⁄√˘
:

244 
	`·di_£tup
();

246 
kEvítFtdiDisc⁄√˘
:

248 
kEvítHidC⁄√˘
 :

250 
kEvítHidDisc⁄√˘
 :

252 
kEvítMidiC⁄√˘
 :

254 
kEvítMidiDisc⁄√˘
 :

256 
kEvítEncodî0
 :

257 
	`¥öt_dbg
("\r\¿–0x"); 
	`¥öt_dbg_hex
((
u32
)
tcTicks
);Örint_dbg(" ) kEventEncoder0");

258 
	`¥öt_dbg
(" : 0x"); 
	`¥öt_dbg_hex
((
u32
Ë
e
.
evítD©a
);

260 
kEvítEncodî1
 :

261 
	`¥öt_dbg
("\r\¿–0x"); 
	`¥öt_dbg_hex
((
u32
)
tcTicks
);Örint_dbg(" ) kEventEncoder1");

262 
	`¥öt_dbg
(" : 0x"); 
	`¥öt_dbg_hex
((
u32
Ë
e
.
evítD©a
);

264 
kEvítEncodî2
 :

265 
	`¥öt_dbg
("\r\¿–0x"); 
	`¥öt_dbg_hex
((
u32
)
tcTicks
);Örint_dbg(" ) kEventEncoder2");

266 
	`¥öt_dbg
(" : 0x"); 
	`¥öt_dbg_hex
((
u32
Ë
e
.
evítD©a
);

268 
kEvítEncodî3
 :

269 
	`¥öt_dbg
("\r\¿–0x"); 
	`¥öt_dbg_hex
((
u32
)
tcTicks
);Örint_dbg(" ) kEventEncoder3");

270 
	`¥öt_dbg
(" : 0x"); 
	`¥öt_dbg_hex
((
u32
Ë
e
.
evítD©a
);

272 
kEvítSwôch0
 :

273 
	`¥öt_dbg
("\r\¿–0x"); 
	`¥öt_dbg_hex
((
u32
)
tcTicks
);Örint_dbg(" ) kEventSwitch0");

274 
	`¥öt_dbg
(" : 0x"); 
	`¥öt_dbg_hex
((
u32
Ë
e
.
evítD©a
);

276 
kEvítSwôch1
 :

277 
	`¥öt_dbg
("\r\¿–0x"); 
	`¥öt_dbg_hex
((
u32
)
tcTicks
);Örint_dbg(" ) kEventSwitch1");

278 
	`¥öt_dbg
(" : 0x"); 
	`¥öt_dbg_hex
((
u32
Ë
e
.
evítD©a
);

280 
kEvítSwôch2
 :

281 
	`¥öt_dbg
("\r\¿–0x"); 
	`¥öt_dbg_hex
((
u32
)
tcTicks
);Örint_dbg(" ) kEventSwitch2");

282 
	`¥öt_dbg
(" : 0x"); 
	`¥öt_dbg_hex
((
u32
Ë
e
.
evítD©a
);

284 
kEvítSwôch3
 :

285 
	`¥öt_dbg
("\r\¿–0x"); 
	`¥öt_dbg_hex
((
u32
)
tcTicks
);Örint_dbg(" ) kEventSwitch3");

286 
	`¥öt_dbg
(" : 0x"); 
	`¥öt_dbg_hex
((
u32
Ë
e
.
evítD©a
);

288 
kEvítSwôch4
 :

289 
	`¥öt_dbg
("\r\¿–0x"); 
	`¥öt_dbg_hex
((
u32
)
tcTicks
);Örint_dbg(" ) kEventSwitch4");

290 
	`¥öt_dbg
(" : 0x"); 
	`¥öt_dbg_hex
((
u32
Ë
e
.
evítD©a
);

292 
kEvítSwôch5
 :

293 
	`¥öt_dbg
("\r\¿–0x"); 
	`¥öt_dbg_hex
((
u32
)
tcTicks
);Örint_dbg(" ) kEventSwitch5");

294 
	`¥öt_dbg
(" : 0x"); 
	`¥öt_dbg_hex
((
u32
Ë
e
.
evítD©a
);

296 
kEvítSwôch6
 :

297 
	`¥öt_dbg
("\r\¿–0x"); 
	`¥öt_dbg_hex
((
u32
)
tcTicks
);Örint_dbg(" ) kEventSwitch6");

298 
	`¥öt_dbg
(" : 0x"); 
	`¥öt_dbg_hex
((
u32
Ë
e
.
evítD©a
);

300 
kEvítSwôch7
 :

301 
	`¥öt_dbg
("\r\¿–0x"); 
	`¥öt_dbg_hex
((
u32
)
tcTicks
);Örint_dbg(" ) kEventSwitch7");

302 
	`¥öt_dbg
(" : 0x"); 
	`¥öt_dbg_hex
((
u32
Ë
e
.
evítD©a
);

304 
kEvítAdc0
 :

305 
	`¥öt_dbg
("\r\¿–0x"); 
	`¥öt_dbg_hex
((
u32
)
tcTicks
);Örint_dbg(" ) kEventAdc0");

306 
	`¥öt_dbg
(" : 0x"); 
	`¥öt_dbg_hex
((
u32
Ë
e
.
evítD©a
);

308 
kEvítAdc1
 :

309 
	`¥öt_dbg
("\r\¿–0x"); 
	`¥öt_dbg_hex
((
u32
)
tcTicks
);Örint_dbg(" ) kEventAdc1");

310 
	`¥öt_dbg
(" : 0x"); 
	`¥öt_dbg_hex
((
u32
Ë
e
.
evítD©a
);

312 
kEvítAdc2
 :

313 
	`¥öt_dbg
("\r\¿–0x"); 
	`¥öt_dbg_hex
((
u32
)
tcTicks
);Örint_dbg(" ) kEventAdc2");

314 
	`¥öt_dbg
(" : 0x"); 
	`¥öt_dbg_hex
((
u32
Ë
e
.
evítD©a
);

316 
kEvítAdc3
 :

317 
	`¥öt_dbg
("\r\¿–0x"); 
	`¥öt_dbg_hex
((
u32
)
tcTicks
);Örint_dbg(" ) kEventAdc3");

318 
	`¥öt_dbg
(" : 0x"); 
	`¥öt_dbg_hex
((
u32
Ë
e
.
evítD©a
);

320 
kEvítM⁄omeGridKey
:

321 
	`¥öt_dbg
("\r\¿–0x"); 
	`¥öt_dbg_hex
((
u32
)
tcTicks
);Örint_dbg(" ) kEventMonomeGridKey");

322 
	`¥öt_dbg
(" : 0x"); 
	`¥öt_dbg_hex
((
u32
Ë
e
.
evítD©a
);

323 
	`h™dÀ_m⁄ome_grid_key
((
u32
)
e
.
evítD©a
);

333 
	}
}

337 
	$maö
 () {

338 
u32
 
waôF‹C¨d
 = 0;

341 
	`öô_avr32
();

344 
	`¥öt_dbg
("\r\n SRAM size: 0x");

345 
	`¥öt_dbg_hex
(
	`smc_gë_cs_size
(1));

348 
	`˝u_úq_dißbÀ
();

350 
	`§am_ã°
();

352 
	`˝u_úq_íabÀ
();

355 
	`öô_mem
();

356 
	`¥öt_dbg
("\r\n init_mem");

360 
	`¥öt_dbg
("\r\n SD check... ");

361 !
	`sd_mmc_•i_mem_check
()) {

362 
waôF‹C¨d
++;

364 
	`¥öt_dbg
("\r\nfound SD card. ");

368 
	`¥öt_dbg
("\r\n init fat");

369 
	`Át_öô
();

371 
	`¥öt_dbg
("\r\n init ctl");

372 
	`öô_˘l
();

379 
fú°run
 = 
	`öô_Êash
();

380 
	`¥öt_dbg
("r\n init flash, firstrun: ");

381 
	`¥öt_dbg_ul⁄g
(
fú°run
);

383 
	`s¸ìn_°¨tup
();

386 
	`fûes_£¨ch_d•
();

389 
	`¥öt_dbg
("\r\n startingÉventÜoop.\r\n");

392 
°¨tup
 = 0;

395 
	`check_evíts
();

397 
	}
}

	@src/memory.c

10 
	~<°dio.h
>

13 
	~"dñay.h
"

14 
	~"¥öt_funcs.h
"

15 
	~"smc.h
"

18 
	~"s¸ìn.h
"

19 
	~"ty≥s.h
"

20 
	~"mem‹y.h
"

23 
	#SRAM
 ((*)
AVR32_EBI_CS1_ADDRESS
)

	)

25 
	#SRAM_SIZE
 (1 << 
	`smc_gë_cs_size
(1))

	)

29 
hóp_t
 
	gpHópSèπ
;

30 
hóp_t
 
	gpHópEnd
;

31 
u32
 
	ghópOff£t
;

33 
u32
 
	ghópSize
;

37 
	$öô_mem
() {

38 
hópSize
 = 
SRAM_SIZE
;

39 
pHópSèπ
 = (
hóp_t
)
SRAM
;

40 
pHópEnd
 = (
hóp_t
)((
u32
)
pHópSèπ
 + 
hópSize
);

41 
hópOff£t
 = 0;

42 
	}
}

45 
hóp_t
 
	$Æloc_mem
(
u32
 
byãs
) {

46 
	`¥öt_dbg
("\r\nállocating memory, bytes: 0x");

47 
	`¥öt_dbg_hex
(
byãs
);

49 
	`¥öt_dbg
("\r\nÜocation: 0x");

50 
	`¥öt_dbg_hex
(
hópOff£t
);

52 
u32
 
tmp
 = 
hópOff£t
 + 
byãs
;

53 
u8
 
mtmp
 = 
tmp
 % 4;

54 
hóp_t
 
ªt
;

56 i‡–
mtmp
 != 0) {

57 
tmp
 +–4 - 
mtmp
 );

59 i‡(
tmp
 < 
hópSize
) {

60 
hópOff£t
 = 
tmp
;

61 
ªt
 = 
pHópSèπ
 + 
hópOff£t
;

63 
ªt
 = (
hóp_t
)
ALLOC_FAIL
;

65  
ªt
;

66 
	}
}

69 
	$§am_ã°
() {

71 
§am_size
, 
¥ogªss_öc
, 
i
, 
j
, 
tmp
, 
noEº‹s
 = 0;

72 vﬁ©ûê*
§am
 = 
SRAM
;

74 
§am_size
 = 
SRAM_SIZE
 >> 2;

76 
	`¥öt_dbg
("\r\n SRAM size (words): ");

77 
	`¥öt_dbg_ul⁄g
(
§am_size
);

78 
	`¥öt_dbg
("\r\n");

80 
	`dñay_ms
(1);

82 
¥ogªss_öc
 = (
§am_size
 + 50) / 100;

85 
i
 = 0, 
j
 = 0; i < 
§am_size
; i++) {

86 i‡(
i
 =
j
 * 
¥ogªss_öc
) {

87 
	`¥öt_dbg
("\rFilling SRAM withÅestÖattern: ");

88 
	`¥öt_dbg_ul⁄g
(
j
++);

89 
	`¥öt_dbg_ch¨
('%');

91 
§am
[
i
] = i;

93 
	`¥öt_dbg
("\rSRAM filled withÅestÖattern \r\n");

96 
i
 = 0, 
j
 = 0; i < 
§am_size
; i++) {

97 i‡(
i
 =
j
 * 
¥ogªss_öc
) {

98 
	`¥öt_dbg
("\rRecoveringÅestÖattern from SRAM: ");

99 
	`¥öt_dbg_ul⁄g
(
j
++);

100 
	`¥öt_dbg_ch¨
('%');

102 
tmp
 = 
§am
[
i
];

103 i‡(
tmp
 !
i
) {

104 
noEº‹s
++;

107 
	`¥öt_dbg
("\rSRAMÅested: ");

108 
	`¥öt_dbg_ul⁄g
(
noEº‹s
);

109 
	`¥öt_dbg
(" corrupted word(s) \r\n");

110 
	}
}

	@src/memory.h

8 #i‚de‡
_ALEPH_MEM_H_


9 
	#_ALEPH_MEM_H_


	)

11 
	~"ty≥s.h
"

13 
	#ALLOC_FAIL
 0xffffffff

	)

16 vﬁ©ûê
	tu8
 * 
	thóp_t
;

19 
öô_mem
();

21 
hóp_t
 
Æloc_mem
(
u32
 
byãs
);

23 
§am_ã°
();

	@src/monome.c

10 
	~"dñay.h
"

11 
	~"¥öt_funcs.h
"

12 
	~<°rög.h
>

14 
	~"≠p.h
"

15 
	~"evíts.h
"

16 
	~"evít_ty≥s.h
"

17 
	~"·di.h
"

18 
	~"m⁄ome.h
"

24 
	#MONOME_MANSTR_LEN
 6

	)

26 
	#MONOME_PRODSTR_LEN
 8

	)

28 
	#MONOME_SERSTR_LEN
 9

	)

30 
	#MONOME_TX_BUF_LEN
 72

	)

38 
	mePrŸocﬁ40h
,

39 
	mePrŸocﬁSîõs
,

40 
	mePrŸocﬁMext
,

41 
	mePrŸocﬁNumPrŸocﬁs


42 } 
	teM⁄omePrŸocﬁ
;

46 
	meDevi˚Grid
,

47 
	meDevi˚Arc
,

48 
	meDevi˚NumDevi˚s


49 } 
	teM⁄omeDevi˚
;

52 
	se_m⁄omeDesc
 {

53 
eM⁄omePrŸocﬁ
 
	m¥Ÿocﬁ
;

54 
eM⁄omeDevi˚
 
	mdevi˚
;

55 
u8
 
	mcﬁs
;

56 
u8
 
	mrows
;

57 
u8
 
	mícs
;

58 
u8
 
	mtût
;

59 } 
	tm⁄omeDesc
;

63 
	$ªad_£rül_dummy
() {

64 
	`¥öt_dbg
("\r\n monome dummy handler");

66 
	}
}

72 
u8
 
	gm⁄omeC⁄√˘
 = 0;

74 
u8
 
	gm⁄omeFømeDúty
 = 0;

77 
u8
 
	gm⁄omeLedBuf„r
[
MONOME_MAX_LED_BYTES
];

80 
ªad_£rül_t
 
	gm⁄ome_ªad_£rül
 = &
ªad_£rül_dummy
;

82 
grid_m≠_t
 
	gm⁄ome_grid_m≠
;

83 
grid_Àvñ_m≠_t
 
	gm⁄ome_grid_Àvñ_m≠
;

84 
rög_m≠_t
 
	gm⁄ome_rög_m≠
;

90 
m⁄omeDesc
 
	gmdesc
 = {

91 .
¥Ÿocﬁ
 = 
ePrŸocﬁNumPrŸocﬁs
,

92 .
	gdevi˚
 = 
eDevi˚NumDevi˚s
,

93 .
	gcﬁs
 = 0,

94 .
	grows
 = 0,

95 .
	gícs
 = 0,

96 .
	gtût
 = 0,

100 
u8
 
	grxByãs
;

102 
evít_t
 
	gev
;

104 
u8
 
	gtxBuf
[
MONOME_TX_BUF_LEN
];

110 
£tup_40h
(
u8
 
cﬁs
, u8 
rows
);

111 
£tup_£rõs
(
u8
 
cﬁs
, u8 
rows
);

112 
u8
 
£tup_mext
();

114 
ã°_døw
();

117 
ªad_£rül_40h
();

118 
ªad_£rül_£rõs
();

119 
ªad_£rül_mext
();

127 
grid_m≠_40h
(
u8
 
x
, u8 
y
, c⁄° u8* 
d©a
);

128 
grid_m≠_£rõs
(
u8
 
x
, u8 
y
, c⁄° u8* 
d©a
);

129 
grid_m≠_mext
(
u8
 
x
, u8 
y
, c⁄° u8* 
d©a
);

137 
rög_m≠_mext
(
u8
 
n
, u8* 
d©a
);

140 
ölöe
 
m⁄ome_grid_key_wrôe_evít
–
u8
 
x
, u8 
y
, u8 
vÆ
);

141 
ölöe
 
m⁄ome_grid_adc_wrôe_evít
–
u8
 
n
, 
u16
 
vÆ
);

142 
ölöe
 
m⁄ome_rög_íc_wrôe_evít
–
u8
 
n
, u8 
vÆ
);

143 
ölöe
 
m⁄ome_rög_key_wrôe_evít
–
u8
 
n
, u8 
vÆ
);

149 
ªad_£rül_t
 
	gªadSîülFuncs
[
ePrŸocﬁNumPrŸocﬁs
] = {

150 &
ªad_£rül_40h
,

151 &
ªad_£rül_£rõs
,

152 &
ªad_£rül_mext
,

163 
grid_m≠_t
 
	ggridM≠Funcs
[
ePrŸocﬁNumPrŸocﬁs
] = {

164 &
grid_m≠_40h
,

165 &
grid_m≠_£rõs
,

166 &
grid_m≠_mext
,

177 
rög_m≠_t
 
	grögM≠Funcs
[
ePrŸocﬁNumPrŸocﬁs
] = {

178 
NULL
,

179 
NULL
,

180 &
rög_m≠_mext
,

187 
	$öô_m⁄ome
() {

188 
u32
 
i
;

189 
i
=0; i<
MONOME_MAX_LED_BYTES
; i++) {

190 
m⁄omeLedBuf„r
[
i
] = 0;

193 
	}
}

196 
u8
 
	$check_m⁄ome_devi˚_desc
(* 
m°r
, * 
p°r
, * 
s°r
) {

197 
buf
[16];

198 
u8
 
m©chM™
 = 0;

199 
u8
 
i
;

202 
i
=0; i<
MONOME_MANSTR_LEN
; i++) {

203 
buf
[
i
] = 
m°r
[i*2];

205 
buf
[
i
] = 0;

206 
m©chM™
 = ( 
	`°∫cmp
(
buf
, "m⁄ome", 
MONOME_MANSTR_LEN
) == 0 );

211 
i
=0; i<
MONOME_SERSTR_LEN
; i++) {

212 
buf
[
i
] = 
s°r
[i*2];

214 
buf
[
i
] = 0;

217 if(
m©chM™
 == 0) {

219 if–
	`°∫cmp
(
buf
, "a40h", 4) == 0) {

221 
mdesc
.
¥Ÿocﬁ
 = 
ePrŸocﬁ40h
;

222 
mdesc
.
devi˚
 = 
eDevi˚Grid
;

223 
mdesc
.
cﬁs
 = 8;

224 
mdesc
.
rows
 = 8;

232 if(
buf
[0] != 'm') {

236 if(
buf
[3] == 'h') {

238 
	`£tup_40h
(8, 8);

241 if–
	`°∫cmp
(
buf
, "m64-", 4) == 0 ) {

243 
	`£tup_£rõs
(8, 8);

246 if–
	`°∫cmp
(
buf
, "m128-", 5) == 0 ) {

248 
	`£tup_£rõs
(8, 16);

251 if–
	`°∫cmp
(
buf
, "m128-", 5) == 0 ) {

253 
	`£tup_£rõs
(16, 16);

259  
	`£tup_mext
();

261 
	}
}

264 
	$m⁄ome_grid_ª‰esh
() {

266 
u8
 
busy
 = 
	`·di_tx_busy
();

269 if–
m⁄omeFømeDúty
 & 0b0001 ) {

270  
busy
 ) { busy = 
	`·di_tx_busy
(); }

271 (*
m⁄ome_grid_m≠
)(0, 0, 
m⁄omeLedBuf„r
);

272 
m⁄omeFømeDúty
 &= 0b1110;

273 
busy
 = 1;

276 if–
m⁄omeFømeDúty
 & 0b0010 ) {

277 i‡–
mdesc
.
cﬁs
 > 8 ) {

278  
busy
 ) { busy = 
	`·di_tx_busy
(); }

279 (*
m⁄ome_grid_m≠
)(8, 0, 
m⁄omeLedBuf„r
 + 8);

280 
m⁄omeFømeDúty
 &= 0b1101;

281 
busy
 = 1;

285 if–
m⁄omeFømeDúty
 & 0b0100 ) {

286 if–
mdesc
.
rows
 > 8 ) {

287  
busy
 ) { busy = 
	`·di_tx_busy
(); }

288 (*
m⁄ome_grid_m≠
)(0, 8, 
m⁄omeLedBuf„r
 + 128);

289 
m⁄omeFømeDúty
 &= 0b1011;

290 
busy
 = 1;

294 if–
m⁄omeFømeDúty
 & 0b1000 ) {

295 if–(
mdesc
.
rows
 > 8Ë&& (mdesc.
cﬁs
 > 8) ) {

296  
busy
 ) { busy = 
	`·di_tx_busy
(); }

297 (*
m⁄ome_grid_m≠
)(8, 8, 
m⁄omeLedBuf„r
 + 136);

298 
m⁄omeFømeDúty
 &= 0b0111;

299 
busy
 = 1;

302  
busy
 ) { busy = 
	`·di_tx_busy
(); }

303 
	}
}

308 
ölöe
 
	$m⁄ome_grid_key_wrôe_evít
(
u8
 
x
, u8 
y
, u8 
vÆ
) {

309 
u8
* 
d©a
 = (u8*)(&(
ev
.
evítD©a
));

310 
d©a
[0] = 
x
;

311 
d©a
[1] = 
y
;

312 
d©a
[2] = 
vÆ
;

321 
ev
.
evítTy≥
 = 
kEvítM⁄omeGridKey
;

322 
	`po°_evít
(&
ev
);

323 
	}
}

325 
	$m⁄ome_grid_key_∑r£_evít_d©a
(
u32
 
d©a
, 
u8
* 
x
, u8* 
y
, u8* 
vÆ
) {

326 
u8
* 
bd©a
 = (u8*)(&
d©a
);

327 *
x
 = 
bd©a
[0];

328 *
y
 = 
bd©a
[1];

329 *
vÆ
 = 
bd©a
[2];

330 
	}
}

333 
ölöe
 
	$m⁄ome_grid_adc_wrôe_evít
–
u8
 
n
, 
u16
 
vÆ
) {

335 
	}
}

336 
	$m⁄ome_grid_adc_∑r£_evít_d©a
(
u32
 
d©a
, 
u8
* 
n
, 
u16
* 
vÆ
) {

338 
	}
}

341 
ölöe
 
	$m⁄ome_rög_íc_wrôe_evít
–
u8
 
n
, u8 
vÆ
) {

343 
	}
}

344 
	$m⁄ome_rög_íc_∑r£_evít_d©a
(
u32
 
d©a
, 
u8
* 
n
, 
s8
* 
vÆ
) {

346 
	}
}

349 
ölöe
 
	$m⁄ome_rög_key_wrôe_evít
–
u8
 
n
, u8 
vÆ
) {

351 
	}
}

352 
	$m⁄ome_rög_key_∑r£_evít_d©a
(
u32
 
d©a
, 
u8
* 
n
, u8* 
vÆ
) {

354 
	}
}

357 
	$m⁄ome_ˇlc_quadø¡_Êag
(
u8
 
x
, u8 
y
) {

358 if(
x
 > 7) {

359 i‡(
y
 > 7) {

360 
m⁄omeFømeDúty
 |= 0b1000;

363 
m⁄omeFømeDúty
 |= 0b0010;

366 i‡(
y
 > 7) {

367 
m⁄omeFømeDúty
 |= 0b0100;

370 
m⁄omeFømeDúty
 |= 0b0001;

375 
	}
}

378 
	$m⁄ome_idx_xy
(
u32
 
idx
, 
u8
* 
x
, u8* 
y
) {

379 *
x
 = 
idx
 & 0xf;

380 *
y
 = (
idx
 >> 4);

381 
	}
}

384 
u32
 
	$m⁄ome_xy_idx
(
u8
 
x
, u8 
y
) {

385  
x
 | (
y
 << 4);

386 
	}
}

394 
ölöe
 
	$£t_funcs
() {

395 
	`¥öt_dbg
("\r\n setting monome functions,Örotocol idx: ");

396 
	`¥öt_dbg_ul⁄g
(
mdesc
.
¥Ÿocﬁ
);

397 
m⁄ome_ªad_£rül
 = 
ªadSîülFuncs
[
mdesc
.
¥Ÿocﬁ
];

398 
m⁄ome_grid_m≠
 = 
gridM≠Funcs
[
mdesc
.
¥Ÿocﬁ
];

399 
m⁄ome_grid_Àvñ_m≠
 = 
gridM≠Funcs
[
mdesc
.
¥Ÿocﬁ
];

400 
m⁄ome_rög_m≠
 = 
rögM≠Funcs
[
mdesc
.
¥Ÿocﬁ
];

401 
	}
}

404 
	$£tup_40h
(
u8
 
cﬁs
, u8 
rows
) {

405 
mdesc
.
¥Ÿocﬁ
 = 
ePrŸocﬁ40h
;

406 
mdesc
.
devi˚
 = 
eDevi˚Grid
;

407 
mdesc
.
cﬁs
 = 8;

408 
mdesc
.
rows
 = 8;

409 
	`£t_funcs
();

410 
m⁄omeC⁄√˘
 = 1;

411 
	`ã°_døw
();

412 
	}
}

415 
	$£tup_£rõs
(
u8
 
cﬁs
, u8 
rows
) {

416 
	`¥öt_dbg
("\r\n setup series device");

417 
mdesc
.
¥Ÿocﬁ
 = 
ePrŸocﬁSîõs
;

418 
mdesc
.
devi˚
 = 
eDevi˚Grid
;

419 
mdesc
.
cﬁs
 = 8;

420 
mdesc
.
rows
 = 8;

421 
mdesc
.
tût
 = 1;

422 
	`£t_funcs
();

423 
m⁄omeC⁄√˘
 = 1;

424 
	`ã°_døw
();

425 
	}
}

428 
u8
 
	$£tup_mext
() {

429 
u8
* 
¥x
;

430 
u8
 
w
 = 0;

431 
u8
 
busy
;

433 
	`¥öt_dbg
("\r\n setup mext device");

435 
mdesc
.
¥Ÿocﬁ
 = 
ePrŸocﬁMext
;

437 
	`dñay_ms
(10);

438 
	`·di_wrôe
(&
w
, 1);

440 
	`dñay_ms
(10);

442 
	`·di_ªad
();

444 
	`dñay_ms
(10);

445 
busy
 = 1;

447 
	`¥öt_dbg
("\r\n setupÑequest ftdiÑead; waiting...");

450 
busy
) {

451 
busy
 = 
	`·di_rx_busy
();

452 
	`¥öt_dbg
("\r\n waiting forÅransfer complete; busy flag: ");

453 
	`¥öt_dbg_ul⁄g
(
busy
);

456 
rxByãs
 = 
	`·di_rx_byãs
();

458 
	`¥öt_dbg
(" done waiting. bytesÑead: ");

459 
	`¥öt_dbg_ul⁄g
(
rxByãs
);

461 if(
rxByãs
 != 6 ){

462 
	`¥öt_dbg
("\r\n got unexpected byte count inÑesponseÅo mext setupÑequest;áborting");

466 
¥x
 = 
	`·di_rx_buf
();

467 
¥x
++;

468 if(*
¥x
 == 1) {

469 
mdesc
.
devi˚
 = 
eDevi˚Grid
;

470 
¥x
++;

471 if(*
¥x
 == 1) {

472 
	`¥öt_dbg
("\r\n monome 64");

473 
mdesc
.
rows
 = 8;

474 
mdesc
.
cﬁs
 = 8;

476 if(*
¥x
 == 2) {

477 
	`¥öt_dbg
("\r\n monome 128");

478 
mdesc
.
rows
 = 8;

479 
mdesc
.
cﬁs
 = 16;

481 if(*
¥x
 == 4) {

482 
	`¥öt_dbg
("\r\n monome 256");

483 
mdesc
.
rows
 = 16;

484 
mdesc
.
cﬁs
 = 16;

489 
mdesc
.
tût
 = 1;

491 if(*
¥x
 == 5) {

492 
mdesc
.
devi˚
 = 
eDevi˚Arc
;

493 
mdesc
.
ícs
 = *(++
¥x
);

497 
	`£t_funcs
();

498 
m⁄omeC⁄√˘
 = 1;

499 
	`¥öt_dbg
("\r\n connected monome device, mextÖrotocol");

501 
	`ã°_døw
();

503 
	}
}

513 
	$ªad_£rül_40h
() {

514 
	}
}

516 
	$ªad_£rül_£rõs
() {

517 
u8
* 
¥x
 = 
	`·di_rx_buf
();

518 
u8
 
i
;

519 
	`¥öt_dbg
( "\r\nÑead_serial_series ... ");

520 
rxByãs
 = 
	`·di_rx_byãs
();

521 
	`¥öt_dbg
(" ... byte count: ");

522 
	`¥öt_dbg_ul⁄g
(
rxByãs
);

523 
	`¥öt_dbg
(" ; data : [ 0x");

524 
	`¥öt_dbg_hex
(
¥x
[0]);

525 
	`¥öt_dbg
(" , 0x");

526 
	`¥öt_dbg_hex
(
¥x
[1]);

527 
	`¥öt_dbg
(" ]");

528 
i
 = 0;

529 
i
 < 
rxByãs
) {

537 
	`m⁄ome_grid_key_wrôe_evít
–((
¥x
[1] & 0xf0) >> 4) ,

538 
¥x
[1] & 0xf,

539 ((
¥x
[0] & 0xf0) == 0)

541 
i
 += 2;

542 
¥x
 += 2;

545 
	}
}

547 
	$ªad_£rül_mext
() {

549 
u8
 
nbp
;

550 
u8
* 
¥x
;

551 
u8
 
com
;

553 
rxByãs
 = 
	`·di_rx_byãs
();

554 if–
rxByãs
 ) {

555 
nbp
 = 0;

556 
¥x
 = 
	`·di_rx_buf
();

557 
nbp
 < 
rxByãs
) {

558 
com
 = (
u8
)(*(
¥x
++));

559 
nbp
++;

560 
com
) {

562 
	`m⁄ome_grid_key_wrôe_evít
–*
¥x
, *(prx+1), 0);

563 
nbp
 += 2;

564 
¥x
 += 2;

567 
	`m⁄ome_grid_key_wrôe_evít
–*
¥x
, *(prx+1), 1);

568 
nbp
 += 2;

569 
¥x
 += 2;

572 
	`m⁄ome_rög_íc_wrôe_evít
–*
¥x
, *(prx+1));

573 
nbp
 += 2;

574 
¥x
 += 2;

577 
	`m⁄ome_rög_key_wrôe_evít
–*
¥x
++, 0);

578 
¥x
++;

581 
	`m⁄ome_rög_key_wrôe_evít
–*
¥x
++, 1);

582 
nbp
++;

590 
	}
}

618 
	$grid_m≠_mext
–
u8
 
x
, u8 
y
, c⁄° u8* 
d©a
 ) {

620 
u8
* 
±x
;

621 
u8
 
i
, 
j
;

623 
txBuf
[0] = 0x14;

624 
txBuf
[1] = 
x
;

625 
txBuf
[2] = 
y
;

627 
±x
 = 
txBuf
 + 3;

630 
i
=0; i<
MONOME_QUAD_LEDS
; i++) {

631 *
±x
 = 0;

632 
j
=0; j<
MONOME_QUAD_LEDS
; j++) {

634 *
±x
 |((*
d©a
 > 0Ë<< 
j
);

635 
d©a
++;

637 
d©a
 +
MONOME_QUAD_LEDS
;

638 
±x
++;

640 
	`·di_wrôe
(
txBuf
, 
MONOME_QUAD_LEDS
 + 3);

641 
	}
}

644 
	$grid_m≠_40h
(
u8
 
x
, u8 
y
, c⁄° u8* 
d©a
) {

646 
	}
}

648 
	$grid_m≠_£rõs
(
u8
 
x
, u8 
y
, c⁄° u8* 
d©a
) {

649 
u8
 * 
±x
;

650 
u8
 
i
, 
j
;

652 
txBuf
[0] = 0x80;

654 
txBuf
[0] |–(
x
 > 8Ë| ((
y
 > 8) << 1) );

657 
±x
 = 
txBuf
 + 1;

660 
i
=0; i<
MONOME_QUAD_LEDS
; i++) {

661 *
±x
 = 0;

662 
j
=0; j<
MONOME_QUAD_LEDS
; j++) {

664 *
±x
 |((*
d©a
 > 0Ë<< 
j
);

665 
d©a
++;

667 
d©a
 +
MONOME_QUAD_LEDS
;

668 
±x
++;

670 
	`·di_wrôe
(
txBuf
, 
MONOME_QUAD_LEDS
 + 1);

671 
	}
}

677 
	$rög_m≠_mext
(
u8
 
n
, u8* 
d©a
) {

679 
	}
}

682 
	$ã°_døw
() {

715 
	}
}

	@src/monome.h

9 #i‚de‡
_ALEPH_MONOME_INTERFACE_H_


10 
	#_ALEPH_MONOME_INTERFACE_H_


	)

12 
	~"evíts.h
"

13 
	~"ty≥s.h
"

23 
	#MONOME_MAX_LED_BYTES
 256

	)

25 
	#MONOME_QUAD_LEDS
 8

	)

28 
	#MONOME_GRID_MAX_FRAMES
 4

	)

30 
	#MONOME_GRID_MAP_BYTES
 8

	)

36 
	#MONOME_RING_MAX_FRAMES
 4

	)

38 
	#MONOME_RING_MAP_SIZE
 32

	)

45 (*
	tªad_£rül_t
)();

49 (*
	tgrid_Àd_t
)(
	tu8
 
	tx
, u8 
	ty
, u8 
	tvÆ
);

51 (*
	tgrid_m≠_t
)(
	tu8
 
	tx
, u8 
	ty
, c⁄° u8* 
	td©a
);

53 (*
	tgrid_Àvñ_m≠_t
)(
	tu8
 
	tx
, u8 
	ty
, c⁄° u8* 
	td©a
);

56 (*
	trög_£t_t
)(
	tu8
 
	tn
, u8 
	trho
, u8 
	tvÆ
);

58 (*
	trög_m≠_t
)(
	tu8
 
	tn
, u8* 
	td©a
);

63 
u8
 
m⁄omeC⁄√˘
;

65 
u8
 
m⁄omeFømeDúty
;

68 
u8
 
m⁄omeLedBuf„r
[
MONOME_MAX_LED_BYTES
];

72 
ªad_£rül_t
 
m⁄ome_ªad_£rül
;

73 
grid_Àd_t
 
m⁄ome_grid_Àd
;

74 
grid_m≠_t
 
m⁄ome_grid_m≠
;

75 
grid_Àvñ_m≠_t
 
m⁄ome_grid_Àvñ_m≠
;

76 
rög_m≠_t
 
m⁄ome_rög_m≠
;

81 
	`öô_m⁄ome
();

83 
u8
 
	`check_m⁄ome_devi˚_desc
(* 
m°r
, * 
p°r
, * 
s°r
);

85 
	`m⁄ome_grid_ª‰esh
();

90 
	`m⁄ome_grid_key_∑r£_evít_d©a
(
u32
 
d©a
, 
u8
* 
x
, u8* 
y
, u8* 
vÆ
);

92 
	`m⁄ome_grid_adc_∑r£_evít_d©a
(
u32
 
d©a
, 
u8
* 
n
, 
u16
* 
vÆ
);

94 
	`m⁄ome_rög_íc_∑r£_evít_d©a
(
u32
 
d©a
, 
u8
* 
n
, 
s8
* 
dñè
);

96 
	`m⁄ome_rög_key_∑r£_evít_d©a
(
u32
 
d©a
, 
u8
* 
n
, u8* 
vÆ
);

99 
	`m⁄ome_ˇlc_quadø¡_Êag
(
u8
 
x
, u8 
y
);

101 
	`m⁄ome_idx_xy
(
u32
 
idx
, 
u8
* 
x
, u8* 
y
);

103 
u32
 
	`m⁄ome_xy_idx
(
u8
 
x
, u8 
y
);

	@src/mt48lc16m16a2tg75.h

47 #i‚de‡
_MT48LC16M16A2TG75_H_


48 
	#_MT48LC16M16A2TG75_H_


	)

60 
	#SDRAM_BANK_BITS
 2

	)

66 
	#SDRAM_ROW_BITS
 13

	)

69 
	#SDRAM_COL_BITS
 9

	)

73 
	#SDRAM_CAS
 2

	)

77 
	#SDRAM_TWR
 15

	)

82 
	#SDRAM_TRC
 66

	)

87 
	#SDRAM_TRP
 20

	)

92 
	#SDRAM_TRCD
 20

	)

97 
	#SDRAM_TRAS
 44

	)

102 
	#SDRAM_TXSR
 67

	)

107 
	#SDRAM_TR
 7812

	)

112 
	#SDRAM_TRFC
 66

	)

117 
	#SDRAM_TMRD
 2

	)

121 
	#SDRAM_STABLE_CLOCK_INIT_DELAY
 100

	)

124 
	#SDRAM_INIT_AUTO_REFRESH_COUNT
 2

	)

	@src/mt48lc16m16a2tg7e.h

47 #i‚de‡
_MT48LC16M16A2TG7E_H_


48 
	#_MT48LC16M16A2TG7E_H_


	)

60 
	#SDRAM_BANK_BITS
 2

	)

66 
	#SDRAM_ROW_BITS
 13

	)

69 
	#SDRAM_COL_BITS
 9

	)

73 
	#SDRAM_CAS
 2

	)

77 
	#SDRAM_TWR
 14

	)

82 
	#SDRAM_TRC
 60

	)

87 
	#SDRAM_TRP
 15

	)

92 
	#SDRAM_TRCD
 15

	)

97 
	#SDRAM_TRAS
 37

	)

102 
	#SDRAM_TXSR
 67

	)

107 
	#SDRAM_TR
 7812

	)

112 
	#SDRAM_TRFC
 66

	)

117 
	#SDRAM_TMRD
 2

	)

121 
	#SDRAM_STABLE_CLOCK_INIT_DELAY
 100

	)

124 
	#SDRAM_INIT_AUTO_REFRESH_COUNT
 2

	)

	@src/screen.c

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~<m©h.h
>

13 
	~"dñay.h
"

14 
	~"gpio.h
"

16 
	~"ötc.h
"

17 
	~"¥öt_funcs.h
"

18 
	~"•i.h
"

20 
	~"Æïh_bﬂrd.h
"

22 
	~"fix.h
"

23 
	~"f⁄t.h
"

24 
	~"globÆ.h
"

25 
	~"s¸ìn.h
"

32 
U8
 
	gs¸ìnBuf
[
GRAM_BYTES
];

35 
u32
 
	gi
, 
	gj
;

40 
wrôe_comm™d
(
U8
 
c
);

41 
	$wrôe_comm™d
(
U8
 
c
) {

42 
	`•i_£À˘Chù
(
OLED_SPI
, 
OLED_SPI_NPCS
);

44 
	`gpio_˛r_gpio_pö
(
OLED_REGISTER_PIN
);

45 
	`•i_wrôe
(
OLED_SPI
, 
c
);

46 
	`•i_un£À˘Chù
(
OLED_SPI
, 
OLED_SPI_NPCS
);

47 
	}
}

50 
s¸ìn_£t_ª˘
(
u8
 
x
, u8 
y
, u8 
w
, u8 
h
);

51 
	$s¸ìn_£t_ª˘
(
u8
 
x
, u8 
y
, u8 
w
, u8 
h
) {

53 
	`wrôe_comm™d
(0x15);

54 
	`wrôe_comm™d
(
x
);

55 
	`wrôe_comm™d
((
x
+
w
-1));

57 
	`wrôe_comm™d
(0x75);

58 
	`wrôe_comm™d
(
y
);

59 
	`wrôe_comm™d
(
y
+
h
-1);

60 
	}
}

64 
	$öô_ﬁed
() {

68 
	`DißbÀ_globÆ_öãºu±
();

71 
	`gpio_£t_gpio_pö
(
OLED_RESET_PIN
);

72 
	`dñay_ms
(1);

73 
	`gpio_˛r_gpio_pö
(
OLED_RESET_PIN
);

74 
	`dñay_ms
(1);

75 
	`gpio_£t_gpio_pö
(
OLED_RESET_PIN
);

76 
	`dñay_ms
(10);

79 
	`wrôe_comm™d
(0xAE);

80 
	`wrôe_comm™d
(0xB3);

81 
	`wrôe_comm™d
(0x91);

82 
	`wrôe_comm™d
(0xA8);

83 
	`wrôe_comm™d
(0x3F);

84 
	`wrôe_comm™d
(0x86);

85 
	`wrôe_comm™d
(0x81);

86 
	`wrôe_comm™d
(0x7F);

87 
	`wrôe_comm™d
(0xB2);

88 
	`wrôe_comm™d
(0x51);

89 
	`wrôe_comm™d
(0xA8);

90 
	`wrôe_comm™d
(0x3F);

91 
	`wrôe_comm™d
(0xBC);

92 
	`wrôe_comm™d
(0x10);

93 
	`wrôe_comm™d
(0xBE);

94 
	`wrôe_comm™d
(0x1C);

95 
	`wrôe_comm™d
(0xAD);

96 
	`wrôe_comm™d
(0x02);

97 
	`wrôe_comm™d
(0xA0);

98 
	`wrôe_comm™d
(0x50);

101 
	`wrôe_comm™d
(0xA1);

102 
	`wrôe_comm™d
(0x0);

103 
	`wrôe_comm™d
(0xA2);

104 
	`wrôe_comm™d
(0x4C);

105 
	`wrôe_comm™d
(0xB1);

106 
	`wrôe_comm™d
(0x55);

107 
	`wrôe_comm™d
(0xB4);

108 
	`wrôe_comm™d
(0x02);

109 
	`wrôe_comm™d
(0xB0);

110 
	`wrôe_comm™d
(0x28);

111 
	`wrôe_comm™d
(0xBF);

112 
	`wrôe_comm™d
(0x0F);

113 
	`wrôe_comm™d
(0xA4);

114 
	`wrôe_comm™d
(0xB8);

115 
	`wrôe_comm™d
(0x01);

116 
	`wrôe_comm™d
(0x11);

117 
	`wrôe_comm™d
(0x22);

118 
	`wrôe_comm™d
(0x32);

119 
	`wrôe_comm™d
(0x43);

120 
	`wrôe_comm™d
(0x54);

121 
	`wrôe_comm™d
(0x65);

122 
	`wrôe_comm™d
(0x76);

125 
	`wrôe_comm™d
(0x15);

126 
	`wrôe_comm™d
(0);

127 
	`wrôe_comm™d
(63);

128 
	`wrôe_comm™d
(0x75);

129 
	`wrôe_comm™d
(0);

130 
	`wrôe_comm™d
(63);

132 
	`s¸ìn_˛ór
();

134 
	`wrôe_comm™d
(0xAF);

135 
	`dñay_ms
(10) ;

137 
	`E«bÀ_globÆ_öãºu±
();

138 
	}
}

143 
	$s¸ìn_døw_ªgi⁄
(
u8
 
x
, u8 
y
, u8 
w
, u8 
h
, u8* 
d©a
) {

144 
u8
* 
pS¸
;

145 
u32
 
nb
;

147 
w
 >>= 1;

148 
x
 >>= 1;

149 
nb
 = 
w
 * 
h
;

155 
pS¸
 = (
u8
*)
s¸ìnBuf
 + 
nb
 - 1;

156 
j
=0; j<
h
; j++) {

157 
i
=0; i<
w
; i+=2) {

158 *
pS¸
 = (0xf0 & (*
d©a
 << 4) );

159 
d©a
++;

160 *
pS¸
 |(*
d©a
 & 0xf);

161 
d©a
++;

162 
pS¸
--;

167 
x
 = 
SCREEN_ROW_BYTES
 - x - 
w
;

168 
y
 = 
SCREEN_COL_BYTES
 - y - 
h
;

171 
	`s¸ìn_£t_ª˘
(
x
, 
y
, 
w
, 
h
);

173 
	`•i_£À˘Chù
(
OLED_SPI
, 
OLED_SPI_NPCS
);

175 
	`gpio_£t_gpio_pö
(
OLED_REGISTER_PIN
);

177 
i
=0; i<(
nb
); i++) {

178 
	`•i_wrôe
(
OLED_SPI
, 
s¸ìnBuf
[
i
]);

180 
	`•i_un£À˘Chù
(
OLED_SPI
, 
OLED_SPI_NPCS
);

181 
	}
}

184 
	$s¸ìn_°¨tup
() {

185 
u32
 
i
;

188 
i
=0; i<
GRAM_BYTES
; i++) {

189 
s¸ìnBuf
[
i
] = 0x77;

194 
	`f⁄t_glyph
('A', 
s¸ìnBuf
 + 80, 64, 0xff, 0x44);

195 
	`f⁄t_glyph
('L', 
s¸ìnBuf
 + 80 + 8, 64, 0xff, 0x44);

196 
	`f⁄t_glyph
('E', 
s¸ìnBuf
 + 80 + 16, 64, 0xff, 0x44);

197 
	`f⁄t_glyph
('P', 
s¸ìnBuf
 + 80 + 24, 64, 0xff, 0x44);

198 
	`f⁄t_glyph
('H', 
s¸ìnBuf
 + 80 + 32, 64, 0xff, 0x44);

201 
	`•i_£À˘Chù
(
OLED_SPI
, 
OLED_SPI_NPCS
);

203 
	`gpio_£t_gpio_pö
(
OLED_REGISTER_PIN
);

205 
i
=0; i<
GRAM_BYTES
; i++) {

206 
	`•i_wrôe
(
OLED_SPI
, 
s¸ìnBuf
[
i
]);

208 
	`•i_un£À˘Chù
(
OLED_SPI
, 
OLED_SPI_NPCS
);

209 
	}
}

214 
	$s¸ìn_˛ór
() {

215 
	`•i_£À˘Chù
(
OLED_SPI
, 
OLED_SPI_NPCS
);

217 
	`gpio_£t_gpio_pö
(
OLED_REGISTER_PIN
);

218 
i
=0; i<
GRAM_BYTES
; i++) {

219 
s¸ìnBuf
[
i
] = 0;

221 
	`•i_wrôe
(
OLED_SPI
, 0);

223 
	`•i_un£À˘Chù
(
OLED_SPI
, 
OLED_SPI_NPCS
);

224 
	}
}

	@src/screen.h

6 #i‚de‡
_SCREEN_H_


7 
	#_SCREEN_H_


	)

9 #i‡
ARCH_AVR32


10 
	~"compûî.h
"

12 
	~"fix.h
"

13 
	~"ty≥s.h
"

15 #ifde‡
ARCH_AVR32


16 
	~"f⁄t.h
"

23 
	#SCREEN_ROW_BYTES
 64

	)

24 
	#SCREEN_ROW_BYTES_1
 63

	)

26 
	#SCREEN_COL_BYTES
 64

	)

27 
	#SCREEN_COL_BYTES_1
 63

	)

30 
	#GRAM_BYTES
 4096

31 
	#GRAM_BYTES_1
 4095

	)

36 
öô_ﬁed
();

38 
s¸ìn_døw_ªgi⁄
(
u8
 
x
, u8 
y
, u8 
w
, u8 
h
, u8* 
d©a
);

42 
s¸ìn_˛ór
();

45 
s¸ìn_°¨tup
();

	@src/sdram_test_fragment.c

	@src/simple_string.c

1 
	~"sim∂e_°rög.h
"

3 
	#SMPSTR_MAX_LEN
 256

	)

6 
	$°r_c›y
(* 
d°
, c⁄° * 
§c
, 
s8
 
Àn
) {

7 
u8
 
i
=0;

8 if(
Àn
 < 0) {

9 
i
 < 
SMPSTR_MAX_LEN
) {

10 if(
§c
[
i
] == 0) {

13 
d°
[
i
] = 
§c
[i];

14 
i
++;

17 
i
 < 
Àn
) {

18 
d°
[
i
] = 
§c
[i];

19 
i
++;

22 
	}
}

	@src/simple_string.h

1 #i‚de‡
_SIMPLE_STRING_H_


2 
	#_SIMPLE_STRING_H_


	)

4 
	~"ty≥s.h
"

9 
°r_c›y
(* 
d°
, c⁄° * 
§c
, 
s8
 
Àn
);

	@src/switches.c

6 
	~"compûî.h
"

7 
	~"gpio.h
"

8 
	~"¥öt_funcs.h
"

10 
	~"Æïh_bﬂrd.h
"

11 
	~"evíts.h
"

12 
	~"evít_ty≥s.h
"

13 
	~"globÆ.h
"

14 
	~"swôches.h
"

15 
	~"ty≥s.h
"

22 c⁄° 
U8
 
	gkSwôchPös
[
NUM_SW
] = {

23 
SW0_PIN
,

24 
SW1_PIN
,

25 
SW2_PIN
,

26 
SW3_PIN
,

27 
SW_MODE_PIN
,

28 
SW_POWER_PIN
,

29 
FS0_PIN
,

30 
FS1_PIN
,

33 c⁄° 
eEvítTy≥
 
	gkSwôchEvíts
[
NUM_SW
] = {

34 
kEvítSwôch0
,

35 
kEvítSwôch1
,

36 
kEvítSwôch2
,

37 
kEvítSwôch3
,

38 
kEvítSwôch4
,

39 
kEvítSwôch5
,

40 
kEvítSwôch6
,

41 
kEvítSwôch7
,

46 
	$¥o˚ss_sw
–c⁄° 
U8
 
swIdx
 ) {

47 
evít_t
 
e
;

48 
e
.
evítTy≥
 = 
kSwôchEvíts
[
swIdx
];

49 
e
.
evítD©a
 = 
	`gpio_gë_pö_vÆue
(
kSwôchPös
[
swIdx
]);

50 
	`po°_evít
(&
e
);

51 
	}
}

57 
u32
 
	gswCou¡
[
NUM_SW
];

59 
u8
 
	gswDeboun˚
[
NUM_SW
] = { 0, 0, 0, 0, };

62 if(
	gswCou¡
[
idx
]-- == 0) {

64 
swDeboun˚
[
idx
] = 
°©e
;

65 
	gch™ged
 = 1;

67 if(
	gswDeboun˚
[
idx
]) {

68 
	gswCou¡
[
idx
] = 
SW_RELEASE_TICKS
;

70 
	gswCou¡
[
idx
] = 
SW_PRESS_TICKS
;

74 if(
	gch™ged
) {

76 
	ge
.
	gevítTy≥
 = 
kSwôchEvíts
[
idx
][
°©e
];

77 
po°_evít
(&
e
);

	@src/switches.h

5 #i‚de‡
_SWITCHES_H_


6 
	#_SWITCHES_H_


	)

8 
	~"compûî.h
"

9 
	~"evít_ty≥s.h
"

18 
	#NUM_SW
 8

	)

21 
¥o˚ss_sw
–c⁄° 
U8
 
swIdx
 );

23 
öô_swôches
();

	@src/sys_timers.c

9 
	~"compûî.h
"

10 
	~"dñay.h
"

11 
	~"gpio.h
"

12 
	~"m©h.h
"

13 
	~"¥öt_funcs.h
"

14 
	~"uhc.h
"

16 
	~"adc.h
"

17 
	~"c⁄åﬁ.h
"

18 
	~"ícodîs.h
"

19 
	~"evíts.h
"

20 
	~"evít_ty≥s.h
"

21 
	~"·di.h
"

22 
	~"midi.h
"

23 
	~"m⁄ome.h
"

24 
	~"globÆ.h
"

25 
	~"swôches.h
"

26 
	~"timîs.h
"

27 
	~"ty≥s.h
"

28 
	~"uhi_·di.h
"

30 
	~"sys_timîs.h
"

39 
swTimî_t
 
	gícTimî
;

44 
swTimî_t
 
	gadcTimî
;

46 
swTimî_t
 
	gm⁄omePﬁlTimî
;

48 
swTimî_t
 
	gm⁄omeRe‰eshTimî
;

56 
swTimî_t
 
	g∑ømCh™geTimî
;

59 
u8
 
	gi
;

60 
evít_t
 
	ge
;

66 
	$íc_timî_ˇŒback
(
èg
) {

67 
s16
 
vÆ
;

68 
i
=0; i<
NUM_ENC
; i++) {

69 
vÆ
 = 
íc
[
i
].val;

70 i‡–(
vÆ
 > 
íc
[
i
].
thªsh
) || (val < (enc[i].thresh * -1)) ) {

72 
e
.
evítTy≥
 = 
íc
[
i
].
evít
;

73 
e
.
evítD©a
 = 
vÆ
;

74 
íc
[
i
].
vÆ
 = 0;

75 
	`po°_evít
(&
e
);

82 
	}
}

85 
	$adc_timî_ˇŒback
(
èg
) {

86 
	`adc_pﬁl
();

87 
	}
}

90 
	$∑øm_ch™ge_timî_ˇŒback
(
èg
) {

91 
	`˘l_≥rf‹m_Æl_ch™ges
();

92 
	}
}

97 
	$m⁄ome_pﬁl_timî_ˇŒback
(
èg
) {

98 i‡(
m⁄omeC⁄√˘
 > 0) {

100 
	`·di_ªad
();

102 
	}
}

105 
	$m⁄ome_ª‰esh_timî_ˇŒback
(
èg
) {

106 i‡(
m⁄omeC⁄√˘
) {

108 if(
m⁄omeFømeDúty
 > 0) {

109 
e
.
evítTy≥
 = 
kEvítM⁄omeRe‰esh
;

110 
	`po°_evít
(&
e
);

113 
	}
}

117 
	$öô_sys_timîs
() {

118 
	`£t_timî
(&
ícTimî
, 
eEncTimîTag
, 20, &
íc_timî_ˇŒback
, 1);

119 
	`£t_timî
(&
adcTimî
, 
eAdcTimîTag
, 20, &
adc_timî_ˇŒback
, 1);

120 
	`£t_timî
(&
m⁄omePﬁlTimî
, 
eM⁄omePﬁlTimîTag
, 5, &
m⁄ome_pﬁl_timî_ˇŒback
, 1);

121 
	`£t_timî
(&
m⁄omeRe‰eshTimî
, 
eM⁄omeRe‰eshTimîTag
, 20, &
m⁄ome_ª‰esh_timî_ˇŒback
, 1);

122 
	`£t_timî
(&
∑ømCh™geTimî
, 
eP¨amCh™geTimîTag
, 1, &
∑øm_ch™ge_timî_ˇŒback
, 1);

123 
	}
}

	@src/sys_timers.h

1 #i‚de‡
_ALEPH_AVR32_SYS_TIMERS_H_


2 
	#_ALEPH_AVR32_SYS_TIMERS_H_


	)

8 
	meEncTimîTag
,

9 
	meAdcTimîTag
,

10 
	meM⁄omePﬁlTimîTag
,

11 
	meM⁄omeRe‰eshTimîTag
,

12 
	meP¨amCh™geTimîTag
,

13 
	meNumSysTimîs


17 
öô_sys_timîs
();

	@src/timers.c

8 
	~"Æïh_bﬂrd.h
"

9 
	~"c⁄f_tc_úq.h
"

10 
	~"timîs.h
"

16 
swTimî_t
* 
	gtimîs
[ 
MAX_TIMERS
 ];

20 
swTimî_t
* 
föd_timî
–
timîCÆlback
 
ˇŒback
, 
èg
 );

21 
boﬁ
 
add_timî
–
swTimî_t
* 
√wTimî
 );

24 
swTimî_t
* 
	$föd_timî
–
timîCÆlback
 
ˇŒback
, 
èg
 ) {

25 
k
;

26 
swTimî_t
* 
t
;

30 
	`˝u_úq_dißbÀ_Àvñ
(
APP_TC_IRQ_PRIORITY
);

32  
k
 = 0; k < 
MAX_TIMERS
; k++ ) {

33 
t
 = 
timîs
[
k
];

34 i‡–
t
 =
NULL
 ) {

38 i‡–
t
->
èg
 ==Åag ) {

39 i‡–
ˇŒback
 !
NULL
 ) {

40 i‡–
t
->
ˇŒback
 == callback ) {

44 
	`˝u_úq_íabÀ_Àvñ
(
APP_TC_IRQ_PRIORITY
);

45  
t
;

55 
	`˝u_úq_íabÀ_Àvñ
(
APP_TC_IRQ_PRIORITY
);

56  
t
;

61 
	`˝u_úq_íabÀ_Àvñ
(
APP_TC_IRQ_PRIORITY
);

66  
NULL
;

67 
	}
}

70 
boﬁ
 
	$add_timî
–
swTimî_t
* 
√wTimî
) {

71 
k
;

74 
	`˝u_úq_dißbÀ_Àvñ
(
APP_TC_IRQ_PRIORITY
);

77  
k
 = 0; k < 
MAX_TIMERS
; k++ ) {

78 i‡–
timîs
[
k
] =
NULL
 ) {

79 
timîs
[
k
] = 
√wTimî
;

80 
	`˝u_úq_íabÀ_Àvñ
(
APP_TC_IRQ_PRIORITY
);

82  
åue
;

86 
	`˝u_úq_íabÀ_Àvñ
(
APP_TC_IRQ_PRIORITY
);

91  
Ál£
;

92 
	}
}

98 
	$öô_timîs
( ) {

99 
k
;

101  
k
 = 0; k < 
MAX_TIMERS
; k++ ) {

102 
timîs
[ 
k
 ] = 0;

104 
	}
}

107 
boﬁ
 
	$£t_timî
–
swTimî_t
* 
t
, 
èg
, 
ticks
, 
timîCÆlback
 
ˇŒback
,

108 
boﬁ
 
fPîiodic
 ) {

109 i‡–
ˇŒback
 =
NULL
 ) {

110  
Ál£
;

113 i‡–
	`föd_timî
–
ˇŒback
, 
èg
 ) !
NULL
 ) {

114  
Ál£
;

117 
t
->
ˇŒback
 = callback;

118 
t
->
èg
 =Åag;

119 
t
->
timeout
 = 
ticks
;

120 
t
->
Âîiodic
 = 
fPîiodic
;

121 
t
->
timeoutRñﬂd
 = 
ticks
;

123  
	`add_timî
–
t
 );

124 
	}
}

127 
boﬁ
 
	$kûl_timî
–
èg
 ) {

128 
k
;

130 
	`˝u_úq_dißbÀ_Àvñ
(
APP_TC_IRQ_PRIORITY
);

132  
k
 = 0; k < 
MAX_TIMERS
; k++ ) {

133 i‡–
timîs
[
k
]->
èg
 ==Åag ) {

134 
timîs
[
k
] = 
NULL
;

135 
	`˝u_úq_íabÀ_Àvñ
(
APP_TC_IRQ_PRIORITY
);

136  
åue
;

140 
	`˝u_úq_íabÀ_Àvñ
(
APP_TC_IRQ_PRIORITY
);

142  
Ál£
;

143 
	}
}

149 
	$¥o˚ss_timîs
( ) {

150 
k
;

151 
swTimî_t
* 
t
;

154  
k
 = 0; k < 
MAX_TIMERS
; k++ ) {

156 
t
 = 
timîs
[
k
];

157 i‡–
t
 == 0 ) { ; }

159 i‡–
t
->
timeout
 > 0 ) {

161 
t
->
timeout
--;

164 i‡–
t
->
timeout
 <= 0 ) {

165 i‡–
t
->
ˇŒback
 != 0 ) {

166 (*
t
->
ˇŒback
)–t->
èg
 );

170 i‡–
t
->
Âîiodic
 ) {

171 
t
->
timeout
 =Å->
timeoutRñﬂd
;

174 
timîs
[
k
] = 
NULL
;

179 
	}
}

	@src/timers.h

8 #i‚de‡
_TIMERS_H_


9 
	#_TIMERS_H_


	)

11 
	~<compûî.h
>

14 
	#MAX_TIMERS
 (12)

	)

21 (*
	ttimîCÆlback
)–
	tèg
 );

24 
	s_swTimî
 {

25 
Âîiodic
;

26 
èg
;

27 
timeout
;

28 
timeoutRñﬂd
;

29 
timîCÆlback
 
ˇŒback
;

30 } 
	tswTimî_t
;

34 
boﬁ
 
	`£t_timî
–
swTimî_t
 * 
timî
, 
èg
, 
ticks
,

35 
timîCÆlback
 
ˇŒback
, 
boﬁ
 
fPîiodic
 );

37 
boﬁ
 
	`kûl_timî
–
èg
 );

39 
	`öô_timîs
( );

41 
	`¥o˚ss_timîs
( );

	@src/usb.c

6 
	~"Æïh_bﬂrd.h
"

7 
	~"compûî.h
"

9 
	~"gpio.h
"

10 
	~"¥öt_funcs.h
"

11 
	~"usb.h
"

14 
	$usb_mode_ch™ge
(
boﬁ
 
b_ho°_mode
) {

16 
	}
}

19 
	$usb_vbus_ch™ge
(
boﬁ
 
b_vbus_¥e£¡
) {

22 
	}
}

25 
	$usb_vbus_îr‹
() {

28 
	}
}

31 
	$usb_c⁄√˘i⁄
(
uhc_devi˚_t
 *
dev
, 
boﬁ
 
b_¥e£¡
) {

36 
	}
}

39 
	$usb_wakeup
() {

41 
	}
}

44 
	$usb_sof
() {

46 
	}
}

49 
	$usb_íum
(
uhc_devi˚_t
 *
dev
, 
uhc_íum_°©us_t
 
°©us
) {

55 
	}
}

	@src/usb.h

6 #i‚de‡
_ALEPH_USB_H_


7 
	#_ALEPH_USB_H_


	)

9 
	~"compûî.h
"

10 
	~"uhc.h
"

13 
usb_mode_ch™ge
(
boﬁ
 
b_ho°_mode
);

16 
usb_vbus_ch™ge
(
boﬁ
 
b_vbus_¥e£¡
);

19 
usb_vbus_îr‹
();

22 
usb_c⁄√˘i⁄
(
uhc_devi˚_t
 *
dev
, 
boﬁ
 
b_¥e£¡
);

25 
usb_wakeup
();

28 
usb_sof
();

31 
usb_íum
(
uhc_devi˚_t
 *
dev
, 
uhc_íum_°©us_t
 
°©us
);

	@src/usb/ftdi/ftdi.c

9 
	~"dñay.h
"

10 
	~"¥öt_funcs.h
"

12 
	~"c⁄f_usb_ho°.h
"

13 
	~"evíts.h
"

14 
	~"evít_ty≥s.h
"

15 
	~"·di.h
"

16 
	~"globÆ.h
"

17 
	~"m⁄ome.h
"

18 
	~"uhi_·di.h
"

25 
u8
 
	g·diC⁄√˘
 = 0;

28 
u8
 
	grxBuf
[
FTDI_RX_BUF_SIZE
];

29 
u32
 
	grxByãs
 = 0;

30 
u8
 
	grxBusy
 = 0;

31 
u8
 
	gtxBusy
 = 0;

32 
uhd_å™s_°©us_t
 
	g°©us
 = 0;

33 
evít_t
 
	ge
;

37 
	$·di_rx_d⁄e
–
usb_add_t
 
add
,

38 
usb_ï_t
 
ï
,

39 
uhd_å™s_°©us_t
 
°©
,

40 
úam_size_t
 
nb
) {

41 
°©us
 = 
°©
;

42 
rxBusy
 = 0;

43 
rxByãs
 = 
nb
 - 
FTDI_STATUS_BYTES
;

52 if(
rxByãs
) {

57 (*
m⁄ome_ªad_£rül
)();

61 
	}
}

63 
	$·di_tx_d⁄e
(

64 
usb_add_t
 
add
,

65 
usb_ï_t
 
ï
,

66 
uhd_å™s_°©us_t
 
°©
,

67 
úam_size_t
 
nb
) {

68 
°©us
 = 
°©
;

69 
txBusy
 = 0;

72 i‡(
°©us
 !
UHD_TRANS_NOERROR
) {

73 
	`¥öt_dbg
("\r\n ftdiÅxÉrror");

77 
	}
}

80 
	$·di_wrôe
(
u8
* 
d©a
, 
u32
 
byãs
) {

81 
txBusy
 = 1;

82 if(!
	`uhi_·di_out_run
(
d©a
, 
byãs
, &
·di_tx_d⁄e
)) {

84 
	`¥öt_dbg
("\r\nÉrrorÑequesting ftdi outputÖipe");

86 
	}
}

88 
	$·di_ªad
() {

89 
rxByãs
 = 0;

90 
rxBusy
 = 
åue
;

91 i‡(!
	`uhi_·di_ö_run
((
u8
*)
rxBuf
,

92 
FTDI_RX_BUF_SIZE
, &
·di_rx_d⁄e
)) {

93 
	`¥öt_dbg
("\r\n ftdiÑxÅransferÉrror");

96 
	}
}

101 
	$·di_ch™ge
(
uhc_devi˚_t
* 
dev
, 
u8
 
∂ug
) {

102 
	`¥öt_dbg
("\r\n changed FTDI connection status");

103 if(
∂ug
) {

104 
e
.
evítTy≥
 = 
kEvítFtdiC⁄√˘
;

106 
e
.
evítTy≥
 = 
kEvítFtdiDisc⁄√˘
;

109 
	`po°_evít
(&
e
);

110 
	}
}

113 
	$·di_£tup
() {

114 * 
m™°r
;

115 * 
¥od°r
;

116 * 
£r°r
;

117 
	`¥öt_dbg
("\r\n FTDI setupÑoutine");

120 
	`·di_gë_°rögs
(&
m™°r
, &
¥od°r
, &
£r°r
);

126 
	`check_m⁄ome_devi˚_desc
(
m™°r
, 
¥od°r
, 
£r°r
);

130 
·diC⁄√˘
 = 1;

131 
	}
}

135 
u8
* 
	$·di_rx_buf
() {

136  
rxBuf
 + 2;

137 
	}
}

140 vﬁ©ûê
u8
 
	$·di_rx_byãs
() {

141  
rxByãs
;

142 
	}
}

145 vﬁ©ûê
u8
 
	$·di_rx_busy
() {

146  
rxBusy
;

147 
	}
}

149 vﬁ©ûê
u8
 
	$·di_tx_busy
() {

150  
txBusy
;

151 
	}
}

154 
u8
 
	$·di_c⁄√˘ed
() {

155  
·diC⁄√˘
;

156 
	}
}

	@src/usb/ftdi/ftdi.h

6 #i‚de‡
_ALEPH_FTD_H_


7 
	#_ALEPH_FTDI_H_


	)

9 
	~"ty≥s.h
"

10 
	~"uhc.h
"

12 
	#FTDI_RX_BUF_SIZE
 64

	)

17 
	#FTDI_STATUS_BYTES
 2

	)

29 
·di_ªad
();

32 
·di_wrôe
(
u8
* 
d©a
, 
u32
 
byãs
);

35 
·di_ch™ge
(
uhc_devi˚_t
* 
dev
, 
u8
 
∂ug
);

37 
·di_£tup
();

42 
u8
* 
·di_rx_buf
();

44 vﬁ©ûê
u8
 
·di_rx_byãs
();

46 vﬁ©ûê
u8
 
·di_rx_busy
();

47 vﬁ©ûê
u8
 
·di_tx_busy
();

49 
u8
 
·di_c⁄√˘ed
();

	@src/usb/ftdi/uhi_ftdi.c

9 
	~<°rög.h
>

10 
	~"dñay.h
"

11 
	~"¥öt_funcs.h
"

12 
	~"usb_¥Ÿocﬁ.h
"

13 
	~"uhd.h
"

14 
	~"uhc.h
"

16 
	~"c⁄f_usb_ho°.h
"

17 
	~"globÆ.h
"

18 
	~"·di.h
"

19 
	~"usb_¥Ÿocﬁ_·di.h
"

20 
	~"uhi_·di.h
"

22 #ifde‡
USB_HOST_HUB_SUPPORT


23 #îr‹ 
USB
 
HUB
 
suµ‹t
 
is
 
nŸ
 
im∂emíãd


27 
	#UHI_FTDI_TIMEOUT
 20000

	)

28 
	#FTDI_STRING_DESC_REQ_TYPE
 ( (
USB_REQ_DIR_IN
Ë| (
USB_REQ_TYPE_STANDARD
Ë| (
USB_REQ_RECIP_DEVICE
Ë)

	)

29 
	#FTDI_STRING_DESC_LANGID
 
USB_LANGID_EN_US


	)

31 
	#FTDI_STRING_DESC_OFFSET
 2

	)

34 
	#FTDI_DEVICE_OUT_REQTYPE
 0b01000000

	)

35 
	#FTDI_DEVICE_IN_REQTYPE
 0b11000000

	)

37 
	#FTDI_REQ_BAUDRATE
 0x03

	)

38 
	#FTDI_REQ_LINE_PROPERTIES
 0x04

	)

39 
	#FTDI_REQ_BITMODE
 0x0b

	)

40 
	#FTDI_REQ_READ_EEPROM
 0x90

	)

45 
uhc_devi˚_t
 *
	mdev
;

46 
usb_ï_t
 
	mï_ö
;

47 
usb_ï_t
 
	mï_out
;

48 } 
	tuhi_·di_dev_t
;

53 
uhi_·di_dev_t
 
	guhi_·di_dev
 = {

54 .
dev
 = 
NULL
,

59 
	gm™uÁ˘uªr_°rög
[
FTDI_STRING_MAX_LEN
];

62 
	g¥odu˘_°rög
[
FTDI_STRING_MAX_LEN
];

65 
	g£rül_°rög
[
FTDI_STRING_MAX_LEN
];

68 vﬁ©ûê
u8
 
	g˘lRódBusy
 = 0;

73 
u8
 
£nd_˘l_ªque°
(u8 
ªqty≥
, u8 
ªqnum
,

74 
u8
* 
d©a
, 
u16
 
size
,

75 
u16
 
ödex
, u16 
vÆ
,

76 
uhd_ˇŒback_£tup_íd_t
 
ˇŒbackEnd
);

78 
˘l_ªq_íd
(

79 
usb_add_t
 
add
,

80 
uhd_å™s_°©us_t
 
°©us
,

81 
uöt16_t
 
∑ylﬂd_å™s
);

84 
uhc_íum_°©us_t
 
	$uhi_·di_ö°Æl
(
uhc_devi˚_t
* 
dev
) {

85 
boﬁ
 
b_iÁ˚_suµ‹ãd
;

86 
uöt16_t
 
c⁄f_desc_lgt
, 
vid
, 
pid
;

87 
usb_iÁ˚_desc_t
 *
±r_iÁ˚
;

89 i‡(
uhi_·di_dev
.
dev
 !
NULL
) {

90  
UHC_ENUM_SOFTWARE_LIMIT
;

94 
vid
 = 
	`À16_to_˝u
(
dev
->
dev_desc
.
idVíd‹
);

95 
pid
 = 
	`À16_to_˝u
(
dev
->
dev_desc
.
idProdu˘
);

97 if–(
vid
 =
FTDI_VID
Ë&& (
pid
 =
FTDI_PID
) ) {

100  
UHC_ENUM_UNSUPPORTED
;

103 
c⁄f_desc_lgt
 = 
	`À16_to_˝u
(
dev
->
c⁄f_desc
->
wTŸÆLígth
);

104 
±r_iÁ˚
 = (
usb_iÁ˚_desc_t
*)
dev
->
c⁄f_desc
;

105 
b_iÁ˚_suµ‹ãd
 = 
Ál£
;

107 
c⁄f_desc_lgt
) {

108 
±r_iÁ˚
->
bDes¸ùt‹Ty≥
) {

110 
USB_DT_INTERFACE
:

111 i‡((
±r_iÁ˚
->
bI¡îÁ˚Cœss
 =
FTDI_CLASS
)

112 && (
±r_iÁ˚
->
bI¡îÁ˚PrŸocﬁ
 =
FTDI_PROTOCOL
) ) {

113 
	`¥öt_dbg
("\r\n class/protocol matches FTDI. ");

114 
b_iÁ˚_suµ‹ãd
 = 
åue
;

115 
uhi_·di_dev
.
ï_ö
 = 0;

116 
uhi_·di_dev
.
ï_out
 = 0;

118 
b_iÁ˚_suµ‹ãd
 = 
Ál£
;

122 
USB_DT_ENDPOINT
:

123 i‡(!
b_iÁ˚_suµ‹ãd
) {

126 i‡(!
	`uhd_ï_Æloc
(
dev
->
addªss
, (
usb_ï_desc_t
*)
±r_iÁ˚
)) {

127 
	`¥öt_dbg
("\r\nÉndpointállocation failed");

128  
UHC_ENUM_HARDWARE_LIMIT
;

131 ((
usb_ï_desc_t
*)
±r_iÁ˚
)->
bmAâribuãs
 & 
USB_EP_TYPE_MASK
) {

132 
USB_EP_TYPE_BULK
:

134 i‡(((
usb_ï_desc_t
*)
±r_iÁ˚
)->
bEndpoötAddªss
 & 
USB_EP_DIR_IN
) {

135 
uhi_·di_dev
.
ï_ö
 = ((
usb_ï_desc_t
*)
±r_iÁ˚
)->
bEndpoötAddªss
;

137 
uhi_·di_dev
.
ï_out
 = ((
usb_ï_desc_t
*)
±r_iÁ˚
)->
bEndpoötAddªss
;

141 
	`¥öt_dbg
("\r\n unhandledÉndpoint in ftdi deviceÉnumeration");

146 
	`¥öt_dbg
("\r\n ignoring descriptor in ftdi deviceÉnumeration");

149 
	`As£π
(
c⁄f_desc_lgt
>=
±r_iÁ˚
->
bLígth
);

150 
c⁄f_desc_lgt
 -
±r_iÁ˚
->
bLígth
;

151 
±r_iÁ˚
 = (
usb_iÁ˚_desc_t
*)((
uöt8_t
*Ìå_iÁ˚ +Öå_iÁ˚->
bLígth
);

154 i‡(
b_iÁ˚_suµ‹ãd
) {

155 
uhi_·di_dev
.
dev
 = dev;

156 
	`¥öt_dbg
("\r\n completed FTDI device install");

157  
UHC_ENUM_SUCCESS
;

159  
UHC_ENUM_UNSUPPORTED
;

160 
	}
}

162 
	$uhi_·di_íabÀ
(
uhc_devi˚_t
* 
dev
) {

164 i‡(
uhi_·di_dev
.
dev
 != dev) {

171 
	`£nd_˘l_ªque°
(
FTDI_DEVICE_OUT_REQTYPE
,

172 
FTDI_REQ_BITMODE
,

173 
NULL
, 0,

175 
NULL
);

180 
	`£nd_˘l_ªque°
(
FTDI_DEVICE_OUT_REQTYPE
,

181 
FTDI_REQ_LINE_PROPERTIES
,

182 
NULL
, 0,

184 
NULL
);

190 
	`£nd_˘l_ªque°
(
FTDI_DEVICE_OUT_REQTYPE
,

191 
FTDI_REQ_BAUDRATE
,

192 
NULL
, 0,

194 
NULL
);

196 
	`dñay_ms
(200);

198 
	`·di_ch™ge
(
dev
, 
åue
);

199 
	}
}

201 
	$uhi_·di_unö°Æl
(
uhc_devi˚_t
* 
dev
) {

202 i‡(
uhi_·di_dev
.
dev
 != dev) {

205 
uhi_·di_dev
.
dev
 = 
NULL
;

206 
	`As£π
(
uhi_·di_dev
.
ªp‹t
!=
NULL
);

207 
	`·di_ch™ge
(
dev
, 
Ál£
);

208 
	}
}

211 
boﬁ
 
	$uhi_·di_ö_run
(
uöt8_t
 * 
buf
, 
úam_size_t
 
buf_size
,

212 
uhd_ˇŒback_å™s_t
 
ˇŒback
) {

213  
	`uhd_ï_run
(
uhi_·di_dev
.
dev
->
addªss
,

214 
uhi_·di_dev
.
ï_ö
, 
Ál£
, 
buf
, 
buf_size
,

215 
UHI_FTDI_TIMEOUT
, 
ˇŒback
);

216 
	}
}

219 
boﬁ
 
	$uhi_·di_out_run
(
uöt8_t
 * 
buf
, 
úam_size_t
 
buf_size
,

220 
uhd_ˇŒback_å™s_t
 
ˇŒback
) {

221  
	`uhd_ï_run
(
uhi_·di_dev
.
dev
->
addªss
,

222 
uhi_·di_dev
.
ï_out
, 
åue
, 
buf
, 
buf_size
,

223 
UHI_FTDI_TIMEOUT
, 
ˇŒback
);

224 
	}
}

230 
u8
 
	$£nd_˘l_ªque°
(
u8
 
ªqty≥
, u8 
ªqnum
,

231 
u8
* 
d©a
, 
u16
 
size
,

232 
u16
 
ödex
, u16 
vÆ
,

233 
uhd_ˇŒback_£tup_íd_t
 
ˇŒbackEnd
) {

234 
usb_£tup_ªq_t
 
ªq
;

240 
ªq
.
bmReque°Ty≥
 = 
ªqty≥
;

241 
ªq
.
bReque°
 = 
ªqnum
;

242 
ªq
.
wVÆue
 = (
vÆ
);

243 
ªq
.
wIndex
 = (
ödex
);

244 
ªq
.
wLígth
 = (
size
);

245  
	`uhd_£tup_ªque°
(
uhi_·di_dev
.
dev
->
addªss
,

246 &
ªq
,

247 
d©a
,

248 
size
,

249 
NULL
,

250 
ˇŒbackEnd
);

251 
	}
}

254 
	$˘l_ªq_íd
(

255 
usb_add_t
 
add
,

256 
uhd_å™s_°©us_t
 
°©us
,

257 
uöt16_t
 
∑ylﬂd_å™s
) {

261 
˘lRódBusy
 = 0;

262 
	}
}

265 
	$·di_gë_°rögs
(** 
pM™uÁ˘uªr
, ** 
pProdu˘
, ** 
pSîül
) {

268 
˘lRódBusy
 = 1;

271 if(!(
	`£nd_˘l_ªque°
(

273 
FTDI_STRING_DESC_REQ_TYPE
,

275 
USB_REQ_GET_DESCRIPTOR
,

277 (
u8
*)
m™uÁ˘uªr_°rög
,

279 
FTDI_STRING_MAX_LEN
,

282 
FTDI_STRING_DESC_LANGID
,

285 (
USB_DT_STRING
 << 8Ë| 
uhi_·di_dev
.
dev
->
dev_desc
.
iM™uÁ˘uªr
,

287 &
˘l_ªq_íd
 )

290 
	`¥öt_dbg
("\r\n controlÑequest for string descriptor failed");

294 
˘lRódBusy
) { ;; }

297 
˘lRódBusy
 = 1;

300 if(!(
	`£nd_˘l_ªque°
(

302 
FTDI_STRING_DESC_REQ_TYPE
,

304 
USB_REQ_GET_DESCRIPTOR
,

306 (
u8
*)
¥odu˘_°rög
,

308 
FTDI_STRING_MAX_LEN
,

310 
FTDI_STRING_DESC_LANGID
,

312 (
USB_DT_STRING
 << 8Ë| 
uhi_·di_dev
.
dev
->
dev_desc
.
iProdu˘
,

314 &
˘l_ªq_íd
 )

317 
	`¥öt_dbg
("\r\n controlÑequest for string descriptor failed");

321 
˘lRódBusy
) { ;; }

324 
˘lRódBusy
 = 1;

326 if(!(
	`£nd_˘l_ªque°
(

328 
FTDI_STRING_DESC_REQ_TYPE
,

330 
USB_REQ_GET_DESCRIPTOR
,

332 (
u8
*)
£rül_°rög
,

334 
FTDI_STRING_MAX_LEN
,

336 
FTDI_STRING_DESC_LANGID
,

338 (
USB_DT_STRING
 << 8Ë| 
uhi_·di_dev
.
dev
->
dev_desc
.
iSîülNumbî
,

340 &
˘l_ªq_íd
 )

343 
	`¥öt_dbg
("\r\n controlÑequest for string descriptor failed");

347 
˘lRódBusy
) { ;; }

349 *
pM™uÁ˘uªr
 = 
m™uÁ˘uªr_°rög
 + 
FTDI_STRING_DESC_OFFSET
;

350 *
pProdu˘
 = 
¥odu˘_°rög
 + 
FTDI_STRING_DESC_OFFSET
;

351 *
pSîül
 = 
£rül_°rög
 + 
FTDI_STRING_DESC_OFFSET
;

353 
	}
}

	@src/usb/ftdi/uhi_ftdi.h

9 #i‚de‡
_UHI_FTDI_H_


10 
	#_UHI_FTDI_H_


	)

12 
	~"c⁄f_usb_ho°.h
"

13 
	~"usb_¥Ÿocﬁ.h
"

14 
	~"uhi.h
"

18 
	#UHI_FTDI
 { \

19 .
ö°Æl
 = 
uhi_·di_ö°Æl
, \

20 .
íabÀ
 = 
uhi_·di_íabÀ
, \

21 .
unö°Æl
 = 
uhi_·di_unö°Æl
, \

22 .
sof_nŸify
 = 
NULL
, \

23 }

	)

25 
	#FTDI_STRING_MAX_LEN
 64

	)

28 
uhc_íum_°©us_t
 
uhi_·di_ö°Æl
(
uhc_devi˚_t
* 
dev
);

30 
uhi_·di_unö°Æl
(
uhc_devi˚_t
* 
dev
);

32 
uhi_·di_íabÀ
(
uhc_devi˚_t
* 
dev
);

34 
boﬁ
 
uhi_·di_ö_run
(
uöt8_t
 * 
buf
, 
úam_size_t
 
buf_size
,

35 
uhd_ˇŒback_å™s_t
 
ˇŒback
);

37 
boﬁ
 
uhi_·di_out_run
(
uöt8_t
 * 
buf
, 
úam_size_t
 
buf_size
,

38 
uhd_ˇŒback_å™s_t
 
ˇŒback
);

41 
·di_gë_°rögs
(** 
pM™uÁ˘uªr
, ** 
pProdu˘
, ** 
pSîül
);

	@src/usb/ftdi/usb_protocol_ftdi.h

1 #i‚de‡
_USB_FTDI_PROTOCOL_H_


2 
	#_USB_FTDI_PROTOCOL_H_


	)

5 
	#FTDI_ADDR
 1

	)

6 
	#FTDI_VID
 0x0403

7 
	#FTDI_PID
 0x6001

8 
	#FTDI_CONFIGURATION
 1
_


	)

9 
	#FTDI_INTERFACE
 0

10 
	#FTDI_NUM_EP
 3

	)

11 
	#FTDI_CLASS
 0xFF

	)

12 
	#FTDI_SUBCLASS
 0xFF

	)

13 
	#FTDI_PROTOCOL
 0xFF

	)

	@src/usb/gamepad/hid_gamepad.c

9 
	~"compûî.h
"

13 
	~"uhc.h
"

	@src/usb/gamepad/hid_gamepad.h

1 #i‚de‡
_ALEPH_HID_GAMEPAD_H_


2 
	#_ALEPH_HID_GAMEPAD_H_


	)

5 
	~"compûî.h
"

6 
	~"uhc.h
"

	@src/usb/gamepad/uhi_hid_gamepad.c

44 
	~"c⁄f_usb_ho°.h
"

45 
	~"¥öt_funcs.h
"

46 
	~"usb_¥Ÿocﬁ.h
"

47 
	~"uhd.h
"

48 
	~"uhc.h
"

49 
	~"uhi_hid_gamïad.h
"

50 
	~<°rög.h
>

52 #ifde‡
USB_HOST_HUB_SUPPORT


53 #îr‹ 
USB
 
HUB
 
suµ‹t
 
is
 
nŸ
 
im∂emíãd
 
⁄
 
UHI
 
gamïad


57 
	#UHI_HID_GAMEPAD_BTN
 0

	)

58 
	#UHI_HID_GAMEPAD_MOV_X
 1

	)

59 
	#UHI_HID_GAMEPAD_MOV_Y
 2

	)

60 
	#UHI_HID_GAMEPAD_MOV_SCROLL
 3

	)

64 
uhc_devi˚_t
 *
	mdev
;

65 
usb_ï_t
 
	mï_ö
;

66 
uöt8_t
 
	mªp‹t_size
;

67 
uöt8_t
 *
	mªp‹t
;

69 }
	tuhi_hid_gamïad_dev_t
;

71 
uhi_hid_gamïad_dev_t
 
	guhi_hid_gamïad_dev
 = {

72 .
dev
 = 
NULL
,

73 .
	gªp‹t
 = 
NULL
,

77 
uhi_hid_gamïad_°¨t_å™s_ªp‹t
(
usb_add_t
 
add
);

78 
uhi_hid_gamïad_ªp‹t_ª˚±i⁄
(

79 
usb_add_t
 
add
,

80 
usb_ï_t
 
ï
,

81 
uhd_å™s_°©us_t
 
°©us
,

82 
úam_size_t
 
nb_å™s„ªd
);

86 
uhc_íum_°©us_t
 
	$uhi_hid_gamïad_ö°Æl
(
uhc_devi˚_t
* 
dev
) {

87 
boﬁ
 
b_iÁ˚_suµ‹ãd
;

88 
uöt16_t
 
c⁄f_desc_lgt
;

89 
usb_iÁ˚_desc_t
 *
±r_iÁ˚
;

91 i‡(
uhi_hid_gamïad_dev
.
dev
 !
NULL
) {

92  
UHC_ENUM_SOFTWARE_LIMIT
;

94 
c⁄f_desc_lgt
 = 
	`À16_to_˝u
(
dev
->
c⁄f_desc
->
wTŸÆLígth
);

95 
±r_iÁ˚
 = (
usb_iÁ˚_desc_t
*)
dev
->
c⁄f_desc
;

96 
b_iÁ˚_suµ‹ãd
 = 
Ál£
;

100 
c⁄f_desc_lgt
) {

101 
±r_iÁ˚
->
bDes¸ùt‹Ty≥
) {

103 
USB_DT_INTERFACE
:

108 
	`¥öt_dbg
("\r\n\r\n");

109 
	`¥öt_dbg
("\r\n iface_desc -> bLength : ");

110 
	`¥öt_dbg_hex
(
±r_iÁ˚
->
bLígth
);

111 
	`¥öt_dbg
("\r\n iface_desc -> bDescriptorType : ");

112 
	`¥öt_dbg_hex
(
±r_iÁ˚
->
bDes¸ùt‹Ty≥
);

113 
	`¥öt_dbg
("\r\n iface_desc -> bInterfaceNumber : ");

114 
	`¥öt_dbg_hex
(
±r_iÁ˚
->
bI¡îÁ˚Numbî
);

115 
	`¥öt_dbg
("\r\n iface_desc -> bAlternateSetting : ");

116 
	`¥öt_dbg_hex
(
±r_iÁ˚
->
bA…î«ãSëtög
);

117 
	`¥öt_dbg
("\r\n iface_desc -> bNumEndpoints : ");

118 
	`¥öt_dbg_hex
(
±r_iÁ˚
->
bNumEndpoöts
);

119 
	`¥öt_dbg
("\r\n iface_desc -> bInterfaceClass : ");

120 
	`¥öt_dbg_hex
(
±r_iÁ˚
->
bI¡îÁ˚Cœss
);

121 
	`¥öt_dbg
("\r\n iface_desc -> bInterfaceSubClass : ");

122 
	`¥öt_dbg_hex
(
±r_iÁ˚
->
bI¡îÁ˚SubCœss
);

123 
	`¥öt_dbg
("\r\n iface_desc -> bInterfaceProtocol : ");

124 
	`¥öt_dbg_hex
(
±r_iÁ˚
->
bI¡îÁ˚PrŸocﬁ
);

125 
	`¥öt_dbg
("\r\n iface_desc -> iInterface : ");

126 
	`¥öt_dbg_hex
(
±r_iÁ˚
->
iI¡îÁ˚
);

127 
	`¥öt_dbg
("\r\n\r\n");

130 i‡((
±r_iÁ˚
->
bI¡îÁ˚Cœss
 =
HID_CLASS
)

131 && (
±r_iÁ˚
->
bI¡îÁ˚PrŸocﬁ
 =
HID_PROTOCOL_GENERIC
) ) {

137 
b_iÁ˚_suµ‹ãd
 = 
åue
;

140 
b_iÁ˚_suµ‹ãd
 = 
Ál£
;

144 
USB_DT_ENDPOINT
:

146 i‡(!
b_iÁ˚_suµ‹ãd
) {

149 i‡(!
	`uhd_ï_Æloc
(
dev
->
addªss
, (
usb_ï_desc_t
*)
±r_iÁ˚
)) {

150  
UHC_ENUM_HARDWARE_LIMIT
;

152 
	`As£π
(((
usb_ï_desc_t
*)
±r_iÁ˚
)->
bEndpoötAddªss
 & 
USB_EP_DIR_IN
);

153 
uhi_hid_gamïad_dev
.
ï_ö
 = ((
usb_ï_desc_t
*)
±r_iÁ˚
)->
bEndpoötAddªss
;

154 
uhi_hid_gamïad_dev
.
ªp‹t_size
 =

155 
	`À16_to_˝u
(((
usb_ï_desc_t
*)
±r_iÁ˚
)->
wMaxPackëSize
);

156 
uhi_hid_gamïad_dev
.
ªp‹t
 = 
	`mÆloc
(uhi_hid_gamïad_dev.
ªp‹t_size
);

157 i‡(
uhi_hid_gamïad_dev
.
ªp‹t
 =
NULL
) {

158 
	`As£π
(
Ál£
);

159  
UHC_ENUM_MEMORY_LIMIT
;

161 
uhi_hid_gamïad_dev
.
dev
 = dev;

163  
UHC_ENUM_SUCCESS
;

169 
	`As£π
(
c⁄f_desc_lgt
>=
±r_iÁ˚
->
bLígth
);

170 
c⁄f_desc_lgt
 -
±r_iÁ˚
->
bLígth
;

171 
±r_iÁ˚
 = (
usb_iÁ˚_desc_t
*)((
uöt8_t
*Ìå_iÁ˚ +Öå_iÁ˚->
bLígth
);

173  
UHC_ENUM_UNSUPPORTED
;

174 
	}
}

182 
	$uhi_hid_gamïad_íabÀ
(
uhc_devi˚_t
* 
dev
) {

183 i‡(
uhi_hid_gamïad_dev
.
dev
 != dev) {

189 
	`uhi_hid_gamïad_°¨t_å™s_ªp‹t
(
dev
->
addªss
);

190 
	`UHI_HID_GAMEPAD_CHANGE
(
dev
, 
åue
);

191 
	}
}

193 
	$uhi_hid_gamïad_unö°Æl
(
uhc_devi˚_t
* 
dev
) {

194 i‡(
uhi_hid_gamïad_dev
.
dev
 != dev) {

197 
uhi_hid_gamïad_dev
.
dev
 = 
NULL
;

198 
	`As£π
(
uhi_hid_gamïad_dev
.
ªp‹t
!=
NULL
);

199 
	`‰ì
(
uhi_hid_gamïad_dev
.
ªp‹t
);

200 
	`UHI_HID_GAMEPAD_CHANGE
(
dev
, 
Ál£
);

201 
	}
}

208 
	$uhi_hid_gamïad_°¨t_å™s_ªp‹t
(
usb_add_t
 
add
) {

210 
	`uhd_ï_run
(
add
, 
uhi_hid_gamïad_dev
.
ï_ö
, 
åue
, uhi_hid_gamïad_dev.
ªp‹t
,

211 
uhi_hid_gamïad_dev
.
ªp‹t_size
, 0, 
uhi_hid_gamïad_ªp‹t_ª˚±i⁄
);

212 
	}
}

221 
	$uhi_hid_gamïad_ªp‹t_ª˚±i⁄
(

222 
usb_add_t
 
add
,

223 
usb_ï_t
 
ï
,

224 
uhd_å™s_°©us_t
 
°©us
,

225 
úam_size_t
 
nb_å™s„ªd
)

230 
i
;

232 
	`UNUSED
(
ï
);

234 i‡((
°©us
 !
UHD_TRANS_NOERROR
Ë|| (
nb_å™s„ªd
 < 4)) {

238 
	`¥öt_dbg
("\r\n gamepad_report: ");

239 
i
=0; i<
uhi_hid_gamïad_dev
.
ªp‹t_size
; i++) {

240 
	`¥öt_dbg
(" ");

241 
	`¥öt_dbg_hex
((Ë
uhi_hid_gamïad_dev
.
ªp‹t
[
i
]);

268 
	`uhi_hid_gamïad_°¨t_å™s_ªp‹t
(
add
);

269 
	}
}

	@src/usb/gamepad/uhi_hid_gamepad.h

1 #i‚de‡
_UHI_HID_GAMEPAD_H_


2 
	#_UHI_HID_GAMEPAD_H_


	)

4 
	~"c⁄f_usb_ho°.h
"

5 
	~"usb_¥Ÿocﬁ.h
"

6 
	~"usb_¥Ÿocﬁ_hid.h
"

7 
	~"uhi.h
"

11 
	#UHI_HID_GAMEPAD
 { \

12 .
ö°Æl
 = 
uhi_hid_gamïad_ö°Æl
, \

13 .
íabÀ
 = 
uhi_hid_gamïad_íabÀ
, \

14 .
unö°Æl
 = 
uhi_hid_gamïad_unö°Æl
, \

15 .
sof_nŸify
 = 
NULL
, \

16 }

	)

17 
uhc_íum_°©us_t
 
uhi_hid_gamïad_ö°Æl
(
uhc_devi˚_t
* 
dev
);

18 
uhi_hid_gamïad_íabÀ
(
uhc_devi˚_t
* 
dev
);

19 
uhi_hid_gamïad_unö°Æl
(
uhc_devi˚_t
* 
dev
);

	@src/usb/midi/midi.c

9 
	~"¥öt_funcs.h
"

11 
	~"c⁄f_usb_ho°.h
"

12 
	~"evíts.h
"

13 
	~"evít_ty≥s.h
"

14 
	~"midi.h
"

15 
	~"uhi_midi.h
"

22 
	#MIDI_RX_BUF_SIZE
 64

	)

26 
u8
 
	gmidiC⁄√˘
 = 0;

30 
u8
 
	grxBuf
[
MIDI_RX_BUF_SIZE
];

31 
u32
 
	grxByãs
 = 0;

32 
u8
 
	grxBusy
 = 0;

33 
u8
 
	gtxBusy
 = 0;

37 
	$midi_rx_d⁄e
–
usb_add_t
 
add
,

38 
usb_ï_t
 
ï
,

39 
uhd_å™s_°©us_t
 
°©
,

40 
úam_size_t
 
nb
) {

41 
i
;

42 if(
nb
 > 0) {

44 
	`¥öt_dbg
("\r\n midiÑx; status: 0x");

45 
	`¥öt_dbg_hex
((
u32
)
°©
);

46 
	`¥öt_dbg
(" ;Çb: ");

47 
	`¥öt_dbg_ul⁄g
(
nb
);

48 
	`¥öt_dbg
(" ; data: ");

49 
i
=0; i<
nb
; i++) {

50 
	`¥öt_dbg
("0x");

51 
	`¥öt_dbg_hex
(
rxBuf
[
i
]);

52 
	`¥öt_dbg
(" ");

55 
	}
}

57 
	$midi_tx_d⁄e
–
usb_add_t
 
add
,

58 
usb_ï_t
 
ï
,

59 
uhd_å™s_°©us_t
 
°©
,

60 
úam_size_t
 
nb
) {

63 
	}
}

68 
	$midi_ªad
() {

69 
rxByãs
 = 0;

70 
rxBusy
 = 
åue
;

71 i‡(!
	`uhi_midi_ö_run
((
u8
*)
rxBuf
,

72 
MIDI_RX_BUF_SIZE
, &
midi_rx_d⁄e
)) {

76 
	}
}

79 
	$midi_wrôe
(
u8
* 
d©a
, 
u32
 
byãs
) {

80 i‡(!
	`uhi_midi_out_run
(
d©a
, 
byãs
, &
midi_tx_d⁄e
)) {

81 
txBusy
 = 
åue
;

85 
	}
}

88 
	$midi_ch™ge
(
uhc_devi˚_t
* 
dev
, 
u8
 
∂ug
) {

89 
midiC⁄√˘
 = 
∂ug
;

90 
	}
}

	@src/usb/midi/midi.h

1 #i‚de‡
_USB_MIDI_H_


2 
	#_USB_MIDI_H_


	)

4 
	~"ty≥s.h
"

5 
	~"uhc.h
"

7 
u8
 
midiC⁄√˘
;

10 
midi_ªad
();

13 
midi_wrôe
(
u8
* 
d©a
, 
u32
 
byãs
);

16 
midi_ch™ge
(
uhc_devi˚_t
* 
dev
, 
u8
 
∂ug
);

	@src/usb/midi/uhi_midi.c

10 
	~<°rög.h
>

12 
	~"¥öt_funcs.h
"

13 
	~"usb_¥Ÿocﬁ.h
"

14 
	~"uhd.h
"

15 
	~"uhc.h
"

17 
	~"c⁄f_usb_ho°.h
"

19 
	~"midi.h
"

20 
	~"usb_¥Ÿocﬁ_midi.h
"

21 
	~"uhi_midi.h
"

23 
	#UHI_MIDI_PRINT_DBG
 0

	)

25 
	#UHI_MIDI_TIMEOUT
 20000

	)

30 
uhc_devi˚_t
 *
	mdev
;

31 
usb_ï_t
 
	mï_ö
;

32 
usb_ï_t
 
	mï_out
;

33 } 
	tuhi_midi_dev_t
;

38 
uhi_midi_dev_t
 
	guhi_midi_dev
 = {

39 .
dev
 = 
NULL
,

40 .
	gï_ö
 = 0xf,

41 .
	gï_out
 = 0xf,

58 
uhc_íum_°©us_t
 
	$uhi_midi_ö°Æl
(
uhc_devi˚_t
* 
dev
) {

59 
boﬁ
 
iÁ˚_suµ‹ãd
;

61 
uöt16_t
 
c⁄f_desc_lgt
;

63 
usb_iÁ˚_desc_t
 *
±r_iÁ˚
;

66 i‡(
uhi_midi_dev
.
dev
 !
NULL
) {

67  
UHC_ENUM_SOFTWARE_LIMIT
;

70 
c⁄f_desc_lgt
 = 
	`À16_to_˝u
(
dev
->
c⁄f_desc
->
wTŸÆLígth
);

71 
±r_iÁ˚
 = (
usb_iÁ˚_desc_t
*)
dev
->
c⁄f_desc
;

72 
iÁ˚_suµ‹ãd
 = 
Ál£
;

74 
c⁄f_desc_lgt
) {

75 
±r_iÁ˚
->
bDes¸ùt‹Ty≥
) {

77 
USB_DT_INTERFACE
:

79 #i‡
UHI_MIDI_PRINT_DBG


80 
	`¥öt_dbg
("\r\n bLength : 0x");

81 
	`¥öt_dbg_hex
–
±r_iÁ˚
->
bLígth
);

82 
	`¥öt_dbg
("\r\n bInterfaceNumber : 0x");

83 
	`¥öt_dbg_hex
–
±r_iÁ˚
->
bI¡îÁ˚Numbî
 );

84 
	`¥öt_dbg
("\r\n bAlternateSetting : 0x");

85 
	`¥öt_dbg_hex
–
±r_iÁ˚
->
bA…î«ãSëtög
 );

86 
	`¥öt_dbg
("\r\n bNumEndpoints : 0x");

87 
	`¥öt_dbg_hex
–
±r_iÁ˚
->
bNumEndpoöts
 );

88 
	`¥öt_dbg
("\r\n bInterfaceClass : 0x");

89 
	`¥öt_dbg_hex
–
±r_iÁ˚
->
bI¡îÁ˚Cœss
 );

90 
	`¥öt_dbg
("\r\n bInterfaceSubClass : 0x");

91 
	`¥öt_dbg_hex
–
±r_iÁ˚
->
bI¡îÁ˚SubCœss
 );

92 
	`¥öt_dbg
("\r\n bInterfaceProtocol : 0x");

93 
	`¥öt_dbg_hex
–
±r_iÁ˚
->
bI¡îÁ˚PrŸocﬁ
 );

94 
	`¥öt_dbg
("\r\n iInterface : 0x");

95 
	`¥öt_dbg_hex
–
±r_iÁ˚
->
iI¡îÁ˚
 );

97 
	`¥öt_dbg
("\r\n\r\n\r\n");

101 i‡––
±r_iÁ˚
->
bI¡îÁ˚Cœss
 =
USB_AUDIO_IFACE_CLASS
 )

102 && (
±r_iÁ˚
->
bI¡îÁ˚SubCœss
 =
USB_MIDI_IFACE_SUBCLASS
) ) {

104 #i‡
UHI_MIDI_PRINT_DBG


105 
	`¥öt_dbg
("\r\n class/subclass matchesáudio/MIDI. ");

107 
iÁ˚_suµ‹ãd
 = 
åue
;

108 
uhi_midi_dev
.
ï_ö
 = 0;

109 
uhi_midi_dev
.
ï_out
 = 0;

112 #i‡
UHI_MIDI_PRINT_DBG


113 
	`¥öt_dbg
("\r\n uhi_midi_install ignoring interface; class: 0x");

114 
	`¥öt_dbg_hex
(
±r_iÁ˚
->
bI¡îÁ˚Cœss
);

115 
	`¥öt_dbg
(" ; subclass: 0x");

116 
	`¥öt_dbg_hex
(
±r_iÁ˚
->
bI¡îÁ˚SubCœss
);

119 
iÁ˚_suµ‹ãd
 = 
Ál£
;

123 
USB_DT_ENDPOINT
:

124 i‡(!
iÁ˚_suµ‹ãd
) {

127 i‡(!
	`uhd_ï_Æloc
(
dev
->
addªss
, (
usb_ï_desc_t
*)
±r_iÁ˚
)) {

128 
	`¥öt_dbg
("\r\nÉndpointállocation failed");

129  
UHC_ENUM_HARDWARE_LIMIT
;

132 ((
usb_ï_desc_t
*)
±r_iÁ˚
)->
bmAâribuãs
 & 
USB_EP_TYPE_MASK
) {

133 
USB_EP_TYPE_BULK
:

134 
	`¥öt_dbg
("\r\nállocating bulkÉndpoint ( ");

135 i‡(((
usb_ï_desc_t
*)
±r_iÁ˚
)->
bEndpoötAddªss
 & 
USB_EP_DIR_IN
) {

140 
uhi_midi_dev
.
ï_ö
 = ((
usb_ï_desc_t
*)
±r_iÁ˚
)->
bEndpoötAddªss
;

142 
	`¥öt_dbg
(" output )");

143 
	`¥öt_dbg
("\r\n (Örevious output : 0x");

144 
	`¥öt_dbg_hex
((
u32
)
uhi_midi_dev
.
ï_out
);

145 if(
uhi_midi_dev
.
ï_out
 !0Ë{ 
	`¥öt_dbg
("\r\nÑeallocating midi outputÉndpoint"); }

146 
uhi_midi_dev
.
ï_out
 = ((
usb_ï_desc_t
*)
±r_iÁ˚
)->
bEndpoötAddªss
;

155 
	`¥öt_dbg
("\r\n uhi_midi_install ignoring descriptor;Åype: 0x");

156 
	`¥öt_dbg_hex
(
±r_iÁ˚
->
bDes¸ùt‹Ty≥
 );

161 
	`As£π
(
c⁄f_desc_lgt
>=
±r_iÁ˚
->
bLígth
);

162 
c⁄f_desc_lgt
 -
±r_iÁ˚
->
bLígth
;

163 
±r_iÁ˚
 = (
usb_iÁ˚_desc_t
*)((
uöt8_t
*Ìå_iÁ˚ +Öå_iÁ˚->
bLígth
);

166 i‡(
iÁ˚_suµ‹ãd
) {

167 
uhi_midi_dev
.
dev
 = dev;

168 
	`¥öt_dbg
("\r\n completed MIDI device install");

169  
UHC_ENUM_SUCCESS
;

171  
UHC_ENUM_UNSUPPORTED
;

172 
	}
}

174 
	$uhi_midi_íabÀ
(
uhc_devi˚_t
* 
dev
) {

179 i‡(
uhi_midi_dev
.
dev
 != dev) {

191 
	`midi_ch™ge
(
dev
, 
åue
);

192 
	`¥öt_dbg
("\r\n finished uhi_midi_enable");

193 
	}
}

195 
	$uhi_midi_unö°Æl
(
uhc_devi˚_t
* 
dev
) {

196 i‡(
uhi_midi_dev
.
dev
 != dev) {

199 
uhi_midi_dev
.
dev
 = 
NULL
;

200 
	`As£π
(
uhi_midi_dev
.
ªp‹t
!=
NULL
);

201 
	`midi_ch™ge
(
dev
, 
Ál£
);

202 
	}
}

204 
boﬁ
 
	$uhi_midi_ö_run
(
uöt8_t
 * 
buf
, 
úam_size_t
 
buf_size
,

205 
uhd_ˇŒback_å™s_t
 
ˇŒback
) {

206  
	`uhd_ï_run
(
uhi_midi_dev
.
dev
->
addªss
,

207 
uhi_midi_dev
.
ï_ö
, 
Ál£
, 
buf
, 
buf_size
,

208 
UHI_MIDI_TIMEOUT
, 
ˇŒback
);

209 
	}
}

211 
boﬁ
 
	$uhi_midi_out_run
(
uöt8_t
 * 
buf
, 
úam_size_t
 
buf_size
,

212 
uhd_ˇŒback_å™s_t
 
ˇŒback
) {

213  
	`uhd_ï_run
(
uhi_midi_dev
.
dev
->
addªss
,

214 
uhi_midi_dev
.
ï_out
, 
åue
, 
buf
, 
buf_size
,

215 
UHI_MIDI_TIMEOUT
, 
ˇŒback
);

216 
	}
}

	@src/usb/midi/uhi_midi.h

9 #i‚de‡
_USB_UHI_MIDI_H_


10 
	#_USB_UHI_MIDI_H_


	)

12 
	~"c⁄f_usb_ho°.h
"

13 
	~"usb_¥Ÿocﬁ.h
"

14 
	~"uhi.h
"

18 
	#UHI_MIDI
 { \

19 .
ö°Æl
 = 
uhi_midi_ö°Æl
, \

20 .
íabÀ
 = 
uhi_midi_íabÀ
, \

21 .
unö°Æl
 = 
uhi_midi_unö°Æl
, \

22 .
sof_nŸify
 = 
NULL
, \

23 }

	)

27 
uhc_íum_°©us_t
 
uhi_midi_ö°Æl
(
uhc_devi˚_t
* 
dev
);

29 
uhi_midi_unö°Æl
(
uhc_devi˚_t
* 
dev
);

31 
uhi_midi_íabÀ
(
uhc_devi˚_t
* 
dev
);

33 
boﬁ
 
uhi_midi_ö_run
(
uöt8_t
 * 
buf
, 
úam_size_t
 
buf_size
,

34 
uhd_ˇŒback_å™s_t
 
ˇŒback
);

36 
boﬁ
 
uhi_midi_out_run
(
uöt8_t
 * 
buf
, 
úam_size_t
 
buf_size
,

37 
uhd_ˇŒback_å™s_t
 
ˇŒback
);

	@src/usb/midi/usb_protocol_midi.h

1 #i‚de‡
_USB_MIDI_PROTOCOL_H_


2 
	#_USB_MIDI_PROTOCOL_H_


	)

9 
	#USB_AUDIO_IFACE_CLASS
 0x01

	)

10 
	#USB_MIDI_IFACE_SUBCLASS
 0x03

	)

	@src/usb/mouse/hid_mouse.c

8 
	~"compûî.h
"

9 
	~"¥öt_funcs.h
"

10 
	~"uhc.h
"

12 
	~"hid_mou£.h
"

15 
	$hid_mou£_bä_À·
(
boﬁ
 
b_°©e
) {

16 
	`¥öt_dbg
("\r\n usbÜeft mouse button: ");

17 
	`¥öt_dbg_ul⁄g
(
b_°©e
);

20 
	}
}

22 
	$hid_mou£_bä_right
(
boﬁ
 
b_°©e
) {

23 
	`¥öt_dbg
("\r\n usbÑight mouse button: ");

24 
	`¥öt_dbg_ul⁄g
(
b_°©e
);

25 
	}
}

27 
	$hid_mou£_bä_middÀ
(
boﬁ
 
b_°©e
) {

28 
	`¥öt_dbg
("\r\n usb mid mouse button: ");

29 
	`¥öt_dbg_ul⁄g
(
b_°©e
);

30 
	}
}

32 
	$hid_mou£_move
(
öt8_t
 
x
, i¡8_à
y
, i¡8_à
s¸ﬁl
) {

33 
	`¥öt_dbg
("\r\n usb mouse move; x: ");

34 
	`¥öt_dbg_hex
(
x
);

35 
	`¥öt_dbg
(", y: ");

36 
	`¥öt_dbg_hex
(
y
);

37 
	`¥öt_dbg
(", scroll: ");

38 
	`¥öt_dbg_hex
(
s¸ﬁl
);

39 
	}
}

	@src/usb/mouse/hid_mouse.h

1 #i‚de‡
_ALEPH_HID_MOUSE_H_


2 
	#_ALEPH_HID_MOUSE_H_


	)

5 
hid_mou£_bä_À·
(
boﬁ
 
b_°©e
);

6 
hid_mou£_bä_right
(
boﬁ
 
b_°©e
);

7 
hid_mou£_bä_middÀ
(
boﬁ
 
b_°©e
);

8 
hid_mou£_move
(
öt8_t
 
x
, i¡8_à
y
, i¡8_à
s¸ﬁl
);

	@src/usb/mouse/uhi_hid_mouse.c

44 
	~"c⁄f_usb_ho°.h
"

45 
	~"hid_mou£.h
"

46 
	~"usb_¥Ÿocﬁ.h
"

47 
	~"uhd.h
"

48 
	~"uhc.h
"

49 
	~"uhi_hid_mou£.h
"

50 
	~<°rög.h
>

52 #ifde‡
USB_HOST_HUB_SUPPORT


53 #îr‹ 
USB
 
HUB
 
suµ‹t
 
is
 
nŸ
 
im∂emíãd
 
⁄
 
UHI
 
mou£


68 
	#UHI_HID_MOUSE_BTN
 0

	)

69 
	#UHI_HID_MOUSE_MOV_X
 1

	)

70 
	#UHI_HID_MOUSE_MOV_Y
 2

	)

71 
	#UHI_HID_MOUSE_MOV_SCROLL
 3

	)

79 
uhc_devi˚_t
 *
	mdev
;

80 
usb_ï_t
 
	mï_ö
;

81 
uöt8_t
 
	mªp‹t_size
;

82 
uöt8_t
 *
	mªp‹t
;

83 
uöt8_t
 
	mªp‹t_bä_¥ev
;

84 }
	tuhi_hid_mou£_dev_t
;

86 
uhi_hid_mou£_dev_t
 
	guhi_hid_mou£_dev
 = {

87 .
dev
 = 
NULL
,

88 .
	gªp‹t
 = 
NULL
,

98 
uhi_hid_mou£_°¨t_å™s_ªp‹t
(
usb_add_t
 
add
);

99 
uhi_hid_mou£_ªp‹t_ª˚±i⁄
(

100 
usb_add_t
 
add
,

101 
usb_ï_t
 
ï
,

102 
uhd_å™s_°©us_t
 
°©us
,

103 
úam_size_t
 
nb_å™s„ªd
);

112 
uhc_íum_°©us_t
 
	$uhi_hid_mou£_ö°Æl
(
uhc_devi˚_t
* 
dev
)

114 
boﬁ
 
b_iÁ˚_suµ‹ãd
;

115 
uöt16_t
 
c⁄f_desc_lgt
;

116 
usb_iÁ˚_desc_t
 *
±r_iÁ˚
;

118 i‡(
uhi_hid_mou£_dev
.
dev
 !
NULL
) {

119  
UHC_ENUM_SOFTWARE_LIMIT
;

121 
c⁄f_desc_lgt
 = 
	`À16_to_˝u
(
dev
->
c⁄f_desc
->
wTŸÆLígth
);

122 
±r_iÁ˚
 = (
usb_iÁ˚_desc_t
*)
dev
->
c⁄f_desc
;

123 
b_iÁ˚_suµ‹ãd
 = 
Ál£
;

124 
c⁄f_desc_lgt
) {

125 
±r_iÁ˚
->
bDes¸ùt‹Ty≥
) {

127 
USB_DT_INTERFACE
:

128 i‡((
±r_iÁ˚
->
bI¡îÁ˚Cœss
 =
HID_CLASS
)

129 && (
±r_iÁ˚
->
bI¡îÁ˚PrŸocﬁ
 =
HID_PROTOCOL_MOUSE
) ) {

132 
b_iÁ˚_suµ‹ãd
 = 
åue
;

135 
b_iÁ˚_suµ‹ãd
 = 
Ál£
;

139 
USB_DT_ENDPOINT
:

141 i‡(!
b_iÁ˚_suµ‹ãd
) {

144 i‡(!
	`uhd_ï_Æloc
(
dev
->
addªss
, (
usb_ï_desc_t
*)
±r_iÁ˚
)) {

145  
UHC_ENUM_HARDWARE_LIMIT
;

147 
	`As£π
(((
usb_ï_desc_t
*)
±r_iÁ˚
)->
bEndpoötAddªss
 & 
USB_EP_DIR_IN
);

148 
uhi_hid_mou£_dev
.
ï_ö
 = ((
usb_ï_desc_t
*)
±r_iÁ˚
)->
bEndpoötAddªss
;

149 
uhi_hid_mou£_dev
.
ªp‹t_size
 =

150 
	`À16_to_˝u
(((
usb_ï_desc_t
*)
±r_iÁ˚
)->
wMaxPackëSize
);

151 
uhi_hid_mou£_dev
.
ªp‹t
 = 
	`mÆloc
(uhi_hid_mou£_dev.
ªp‹t_size
);

152 i‡(
uhi_hid_mou£_dev
.
ªp‹t
 =
NULL
) {

153 
	`As£π
(
Ál£
);

154  
UHC_ENUM_MEMORY_LIMIT
;

156 
uhi_hid_mou£_dev
.
dev
 = dev;

158  
UHC_ENUM_SUCCESS
;

164 
	`As£π
(
c⁄f_desc_lgt
>=
±r_iÁ˚
->
bLígth
);

165 
c⁄f_desc_lgt
 -
±r_iÁ˚
->
bLígth
;

166 
±r_iÁ˚
 = (
usb_iÁ˚_desc_t
*)((
uöt8_t
*Ìå_iÁ˚ +Öå_iÁ˚->
bLígth
);

168  
UHC_ENUM_UNSUPPORTED
;

169 
	}
}

171 
	$uhi_hid_mou£_íabÀ
(
uhc_devi˚_t
* 
dev
)

173 i‡(
uhi_hid_mou£_dev
.
dev
 != dev) {

178 
uhi_hid_mou£_dev
.
ªp‹t_bä_¥ev
 = 0;

179 
	`uhi_hid_mou£_°¨t_å™s_ªp‹t
(
dev
->
addªss
);

180 
	`UHI_HID_MOUSE_CHANGE
(
dev
, 
åue
);

181 
	}
}

183 
	$uhi_hid_mou£_unö°Æl
(
uhc_devi˚_t
* 
dev
)

185 i‡(
uhi_hid_mou£_dev
.
dev
 != dev) {

188 
uhi_hid_mou£_dev
.
dev
 = 
NULL
;

189 
	`As£π
(
uhi_hid_mou£_dev
.
ªp‹t
!=
NULL
);

190 
	`‰ì
(
uhi_hid_mou£_dev
.
ªp‹t
);

191 
	`UHI_HID_MOUSE_CHANGE
(
dev
, 
Ál£
);

192 
	}
}

205 
	$uhi_hid_mou£_°¨t_å™s_ªp‹t
(
usb_add_t
 
add
)

208 
	`uhd_ï_run
(
add
, 
uhi_hid_mou£_dev
.
ï_ö
, 
åue
, uhi_hid_mou£_dev.
ªp‹t
,

209 
uhi_hid_mou£_dev
.
ªp‹t_size
, 0, 
uhi_hid_mou£_ªp‹t_ª˚±i⁄
);

210 
	}
}

219 
	$uhi_hid_mou£_ªp‹t_ª˚±i⁄
(

220 
usb_add_t
 
add
,

221 
usb_ï_t
 
ï
,

222 
uhd_å™s_°©us_t
 
°©us
,

223 
úam_size_t
 
nb_å™s„ªd
)

225 
uöt8_t
 
°©e_¥ev
;

226 
uöt8_t
 
°©e_√w
;

227 
	`UNUSED
(
ï
);

229 i‡((
°©us
 !
UHD_TRANS_NOERROR
Ë|| (
nb_å™s„ªd
 < 4)) {

234 
°©e_¥ev
 = 
uhi_hid_mou£_dev
.
ªp‹t_bä_¥ev
;

235 
°©e_√w
 = 
uhi_hid_mou£_dev
.
ªp‹t
[
UHI_HID_MOUSE_BTN
];

236 i‡((
°©e_¥ev
 & 0x01Ë!(
°©e_√w
 & 0x01)) {

237 
	`UHI_HID_MOUSE_EVENT_BTN_LEFT
((
°©e_√w
 & 0x01Ë? 
åue
 : 
Ál£
);

239 i‡((
°©e_¥ev
 & 0x02Ë!(
°©e_√w
 & 0x02)) {

240 
	`UHI_HID_MOUSE_EVENT_BTN_RIGHT
((
°©e_√w
 & 0x02Ë? 
åue
 : 
Ál£
);

242 i‡((
°©e_¥ev
 & 0x04Ë!(
°©e_√w
 & 0x04)) {

243 
	`UHI_HID_MOUSE_EVENT_BTN_MIDDLE
((
°©e_√w
 & 0x04Ë? 
åue
 : 
Ál£
);

245 
uhi_hid_mou£_dev
.
ªp‹t_bä_¥ev
 = 
°©e_√w
;

248 i‡((
uhi_hid_mou£_dev
.
ªp‹t
[
UHI_HID_MOUSE_MOV_X
] != 0)

249 || (
uhi_hid_mou£_dev
.
ªp‹t
[
UHI_HID_MOUSE_MOV_Y
] != 0)

250 || (
uhi_hid_mou£_dev
.
ªp‹t
[
UHI_HID_MOUSE_MOV_SCROLL
] != 0)) {

251 
	`UHI_HID_MOUSE_EVENT_MOUVE
(

252 (
öt8_t
)
uhi_hid_mou£_dev
.
ªp‹t
[
UHI_HID_MOUSE_MOV_X
],

253 (
öt8_t
)
uhi_hid_mou£_dev
.
ªp‹t
[
UHI_HID_MOUSE_MOV_Y
],

254 (
öt8_t
)
uhi_hid_mou£_dev
.
ªp‹t
[
UHI_HID_MOUSE_MOV_SCROLL
]);

257 
	`uhi_hid_mou£_°¨t_å™s_ªp‹t
(
add
);

258 
	}
}

	@src/usb/mouse/uhi_hid_mouse.h

44 #i‚de‡
_UHI_HID_MOUSE_H_


45 
	#_UHI_HID_MOUSE_H_


	)

47 
	~"c⁄f_usb_ho°.h
"

48 
	~"usb_¥Ÿocﬁ.h
"

49 
	~"usb_¥Ÿocﬁ_hid.h
"

50 
	~"uhi.h
"

52 #ifde‡
__˝lu•lus


67 
	#UHI_HID_MOUSE
 { \

68 .
ö°Æl
 = 
uhi_hid_mou£_ö°Æl
, \

69 .
íabÀ
 = 
uhi_hid_mou£_íabÀ
, \

70 .
unö°Æl
 = 
uhi_hid_mou£_unö°Æl
, \

71 .
sof_nŸify
 = 
NULL
, \

72 }

	)

78 
uhc_íum_°©us_t
 
uhi_hid_mou£_ö°Æl
(
uhc_devi˚_t
* 
dev
);

79 
uhi_hid_mou£_íabÀ
(
uhc_devi˚_t
* 
dev
);

80 
uhi_hid_mou£_unö°Æl
(
uhc_devi˚_t
* 
dev
);

210 #ifde‡
__˝lu•lus


	@src/util.h

1 #i‚de‡
_ALEPH_UTIL_H_


2 
	#_ALEPH_UTIL_H_


	)

	@startup/trampoline.h

46 #i‚de‡
_TRAMPOLINE_UC3_H_


47 
	#_TRAMPOLINE_UC3_H_


	)

49 
	#PROGRAM_START_ADDRESS
 (
AVR32_FLASH_ADDRESS
 + 
PROGRAM_START_OFFSET
)

	)

50 
	#PROGRAM_START_OFFSET
 0x00002000

	)

	@/usr/include/assert.h

24 #ifdef 
_ASSERT_H


26 #unde‡
_ASSERT_H


27 #unde‡
as£π


28 #unde‡
__ASSERT_VOID_CAST


30 #ifdef 
__USE_GNU


31 #unde‡
as£π_≥º‹


36 
	#_ASSERT_H
 1

	)

37 
	~<„©uªs.h
>

39 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

40 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

42 
	#__ASSERT_VOID_CAST
 ()

	)

50 #ifdef 
NDEBUG


52 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

60 #ifdef 
__USE_GNU


61 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

66 #i‚de‡
_ASSERT_H_DECLS


67 
	#_ASSERT_H_DECLS


	)

68 
__BEGIN_DECLS


71 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

72 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

73 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

76 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

77 
__löe
,

78 
__c⁄°
 *
__fun˘i⁄
)

79 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

84 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

85 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

88 
__END_DECLS


91 
	#as£π
(
ex¥
) \

92 ((
ex¥
) \

93 ? 
	`__ASSERT_VOID_CAST
 (0) \

94 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

96 #ifdef 
__USE_GNU


97 
	#as£π_≥º‹
(
î∫um
) \

98 (!(
î∫um
) \

99 ? 
	`__ASSERT_VOID_CAST
 (0) \

100 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

108 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

109 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

111 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

112 
	#__ASSERT_FUNCTION
 
__func__


	)

114 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/ftdi.h

17 #i‚de‡
__lib·di_h__


18 
	#__lib·di_h__


	)

20 
	~<usb.h
>

22 
	#FTDI_DEFAULT_EEPROM_SIZE
 128

	)

25 
	e·di_chù_ty≥
 { 
	mTYPE_AM
=0, 
	mTYPE_BM
=1, 
	mTYPE_2232C
=2, 
	mTYPE_R
=3, 
	mTYPE_2232H
=4, 
	mTYPE_4232H
=5 };

27 
	e·di_∑rôy_ty≥
 { 
	mNONE
=0, 
	mODD
=1, 
	mEVEN
=2, 
	mMARK
=3, 
	mSPACE
=4 };

29 
	e·di_°›bôs_ty≥
 { 
	mSTOP_BIT_1
=0, 
	mSTOP_BIT_15
=1, 
	mSTOP_BIT_2
=2 };

31 
	e·di_bôs_ty≥
 { 
	mBITS_7
=7, 
	mBITS_8
=8 };

33 
	e·di_bªak_ty≥
 { 
	mBREAK_OFF
=0, 
	mBREAK_ON
=1 };

36 
	e·di_mps£_mode


38 
	mBITMODE_RESET
 = 0x00,

39 
	mBITMODE_BITBANG
= 0x01,

40 
	mBITMODE_MPSSE
 = 0x02,

41 
	mBITMODE_SYNCBB
 = 0x04,

42 
	mBITMODE_MCU
 = 0x08,

44 
	mBITMODE_OPTO
 = 0x10,

45 
	mBITMODE_CBUS
 = 0x20,

46 
	mBITMODE_SYNCFF
 = 0x40,

50 
	e·di_öãrÁ˚


52 
	mINTERFACE_ANY
 = 0,

53 
	mINTERFACE_A
 = 1,

54 
	mINTERFACE_B
 = 2,

55 
	mINTERFACE_C
 = 3,

56 
	mINTERFACE_D
 = 4

60 
	e·di_moduÀ_dëach_mode


62 
	mAUTO_DETACH_SIO_MODULE
 = 0,

63 
	mDONT_DETACH_SIO_MODULE
 = 1

67 
	#MPSSE_WRITE_NEG
 0x01

	)

68 
	#MPSSE_BITMODE
 0x02

	)

69 
	#MPSSE_READ_NEG
 0x04

	)

70 
	#MPSSE_LSB
 0x08

	)

71 
	#MPSSE_DO_WRITE
 0x10

	)

72 
	#MPSSE_DO_READ
 0x20

	)

73 
	#MPSSE_WRITE_TMS
 0x40

	)

76 
	#SET_BITS_LOW
 0x80

	)

79 
	#SET_BITS_HIGH
 0x82

	)

82 
	#GET_BITS_LOW
 0x81

	)

83 
	#GET_BITS_HIGH
 0x83

	)

84 
	#LOOPBACK_START
 0x84

	)

85 
	#LOOPBACK_END
 0x85

	)

86 
	#TCK_DIVISOR
 0x86

	)

89 
	#DIV_VALUE
(
øã
Ë‘©ê> 6000000)?0:((6000000/øã -1Ë> 0xffff)? 0xffff: (6000000/øã -1)

	)

92 
	#SEND_IMMEDIATE
 0x87

	)

93 
	#WAIT_ON_HIGH
 0x88

	)

94 
	#WAIT_ON_LOW
 0x89

	)

97 
	#READ_SHORT
 0x90

	)

99 
	#READ_EXTENDED
 0x91

	)

102 
	#WRITE_SHORT
 0x92

	)

104 
	#WRITE_EXTENDED
 0x93

	)

109 
	#SIO_RESET
 0

	)

110 
	#SIO_MODEM_CTRL
 1

	)

111 
	#SIO_SET_FLOW_CTRL
 2

	)

112 
	#SIO_SET_BAUD_RATE
 3

	)

113 
	#SIO_SET_DATA
 4

	)

115 
	#FTDI_DEVICE_OUT_REQTYPE
 (
USB_TYPE_VENDOR
 | 
USB_RECIP_DEVICE
 | 
USB_ENDPOINT_OUT
)

	)

116 
	#FTDI_DEVICE_IN_REQTYPE
 (
USB_TYPE_VENDOR
 | 
USB_RECIP_DEVICE
 | 
USB_ENDPOINT_IN
)

	)

119 
	#SIO_RESET_REQUEST
 
SIO_RESET


	)

120 
	#SIO_SET_BAUDRATE_REQUEST
 
SIO_SET_BAUD_RATE


	)

121 
	#SIO_SET_DATA_REQUEST
 
SIO_SET_DATA


	)

122 
	#SIO_SET_FLOW_CTRL_REQUEST
 
SIO_SET_FLOW_CTRL


	)

123 
	#SIO_SET_MODEM_CTRL_REQUEST
 
SIO_MODEM_CTRL


	)

124 
	#SIO_POLL_MODEM_STATUS_REQUEST
 0x05

	)

125 
	#SIO_SET_EVENT_CHAR_REQUEST
 0x06

	)

126 
	#SIO_SET_ERROR_CHAR_REQUEST
 0x07

	)

127 
	#SIO_SET_LATENCY_TIMER_REQUEST
 0x09

	)

128 
	#SIO_GET_LATENCY_TIMER_REQUEST
 0x0A

	)

129 
	#SIO_SET_BITMODE_REQUEST
 0x0B

	)

130 
	#SIO_READ_PINS_REQUEST
 0x0C

	)

131 
	#SIO_READ_EEPROM_REQUEST
 0x90

	)

132 
	#SIO_WRITE_EEPROM_REQUEST
 0x91

	)

133 
	#SIO_ERASE_EEPROM_REQUEST
 0x92

	)

136 
	#SIO_RESET_SIO
 0

	)

137 
	#SIO_RESET_PURGE_RX
 1

	)

138 
	#SIO_RESET_PURGE_TX
 2

	)

140 
	#SIO_DISABLE_FLOW_CTRL
 0x0

	)

141 
	#SIO_RTS_CTS_HS
 (0x1 << 8)

	)

142 
	#SIO_DTR_DSR_HS
 (0x2 << 8)

	)

143 
	#SIO_XON_XOFF_HS
 (0x4 << 8)

	)

145 
	#SIO_SET_DTR_MASK
 0x1

	)

146 
	#SIO_SET_DTR_HIGH
 ( 1 | ( 
SIO_SET_DTR_MASK
 << 8))

	)

147 
	#SIO_SET_DTR_LOW
 ( 0 | ( 
SIO_SET_DTR_MASK
 << 8))

	)

148 
	#SIO_SET_RTS_MASK
 0x2

	)

149 
	#SIO_SET_RTS_HIGH
 ( 2 | ( 
SIO_SET_RTS_MASK
 << 8 ))

	)

150 
	#SIO_SET_RTS_LOW
 ( 0 | ( 
SIO_SET_RTS_MASK
 << 8 ))

	)

152 
	#SIO_RTS_CTS_HS
 (0x1 << 8)

	)

156 
	#FTDI_URB_USERCONTEXT_COOKIE
 ((*)0x1)

	)

158 #ifde‡
__GNUC__


159 
	#DEPRECATED
(
func
Ëfun¯
	`__©åibuã__
 ((
dïªˇãd
))

	)

160 #ñi‡
deföed
(
_MSC_VER
)

161 
	#DEPRECATED
(
func
Ë
	`__de˛•ec
(
dïªˇãd
Ë
	)
func

163 #¥agm®
mesßge
("WARNING: YouÇeedÅo implement DEPRECATED forÅhis compiler")

164 
	#DEPRECATED
(
func
Ë
	)
func

173 
	s·di_c⁄ãxt


177 
usb_dev_h™dÀ
 *
	musb_dev
;

179 
	musb_ªad_timeout
;

181 
	musb_wrôe_timeout
;

185 
·di_chù_ty≥
 
	mty≥
;

187 
	mbaudøã
;

189 
	mbôb™g_íabÀd
;

191 *
	mªadbuf„r
;

193 
	mªadbuf„r_off£t
;

195 
	mªadbuf„r_ªmaöög
;

197 
	mªadbuf„r_chunksize
;

199 
	mwrôebuf„r_chunksize
;

201 
	mmax_∑ckë_size
;

205 
	möãrÁ˚
;

207 
	mödex
;

210 
	mö_ï
;

211 
	mout_ï
;

214 
	mbôb™g_mode
;

217 
	mì¥om_size
;

220 *
	mîr‹_°r
;

223 *
	masync_usb_buf„r
;

225 
	masync_usb_buf„r_size
;

228 
·di_moduÀ_dëach_mode
 
	mmoduÀ_dëach_mode
;

234 
	s·di_devi˚_li°


237 
·di_devi˚_li°
 *
	m√xt
;

239 
usb_devi˚
 *
	mdev
;

244 
	#CBUS_TXDEN
 0

	)

246 
	#CBUS_PWREN
 1

	)

248 
	#CBUS_RXLED
 2

	)

250 
	#CBUS_TXLED
 3

	)

252 
	#CBUS_TXRXLED
 4

	)

254 
	#CBUS_SLEEP
 5

	)

256 
	#CBUS_CLK48
 6

	)

258 
	#CBUS_CLK24
 7

	)

260 
	#CBUS_CLK12
 8

	)

262 
	#CBUS_CLK6
 9

	)

264 
	#CBUS_IOMODE
 10

	)

266 
	#CBUS_BB_WR
 11

	)

268 
	#CBUS_BB_RD
 12

	)

272 
	#INVERT_TXD
 0x01

	)

274 
	#INVERT_RXD
 0x02

	)

276 
	#INVERT_RTS
 0x04

	)

278 
	#INVERT_CTS
 0x08

	)

280 
	#INVERT_DTR
 0x10

	)

282 
	#INVERT_DSR
 0x20

	)

284 
	#INVERT_DCD
 0x40

	)

286 
	#INVERT_RI
 0x80

	)

289 
	#HIGH_CURRENT_DRIVE
 0x04

	)

294 
	s·di_ì¥om


297 
	mvíd‹_id
;

299 
	m¥odu˘_id
;

302 
	m£lf_powîed
;

304 
	mªmŸe_wakeup
;

306 
	mchù_ty≥
;

309 
	mö_is_isochr⁄ous
;

311 
	mout_is_isochr⁄ous
;

313 
	msu•íd_puŒ_downs
;

316 
	mu£_£rül
;

318 
	mch™ge_usb_vîsi⁄
;

320 
	musb_vîsi⁄
;

322 
	mmax_powî
;

325 *
	mm™uÁ˘uªr
;

327 *
	m¥odu˘
;

329 *
	m£rül
;

333 
	mcbus_fun˘i⁄
[5];

335 
	mhigh_cuºít
;

337 
	mövît
;

341 
	msize
;

344 #ifde‡
__˝lu•lus


349 
·di_öô
(
·di_c⁄ãxt
 *
·di
);

350 
·di_c⁄ãxt
 *
·di_√w
();

351 
·di_£t_öãrÁ˚
(
·di_c⁄ãxt
 *
·di
, 
·di_öãrÁ˚
 
öãrÁ˚
);

353 
·di_deöô
(
·di_c⁄ãxt
 *
·di
);

354 
·di_‰ì
(
·di_c⁄ãxt
 *
·di
);

355 
·di_£t_usbdev
 (
·di_c⁄ãxt
 *
·di
, 
usb_dev_h™dÀ
 *
usbdev
);

357 
·di_usb_föd_Æl
(
·di_c⁄ãxt
 *
·di
, 
·di_devi˚_li°
 **
devli°
,

358 
víd‹
, 
¥odu˘
);

359 
·di_li°_‰ì
(
·di_devi˚_li°
 **
devli°
);

360 
·di_li°_‰ì2
(
·di_devi˚_li°
 *
devli°
);

361 
·di_usb_gë_°rögs
(
·di_c⁄ãxt
 *
·di
, 
usb_devi˚
 *
dev
,

362 * 
m™uÁ˘uªr
, 
mnf_Àn
,

363 * 
des¸ùti⁄
, 
desc_Àn
,

364 * 
£rül
, 
£rül_Àn
);

366 
·di_usb_›í
(
·di_c⁄ãxt
 *
·di
, 
víd‹
, 
¥odu˘
);

367 
·di_usb_›í_desc
(
·di_c⁄ãxt
 *
·di
, 
víd‹
, 
¥odu˘
,

368 c⁄° * 
des¸ùti⁄
, c⁄° * 
£rül
);

369 
·di_usb_›í_desc_ödex
(
·di_c⁄ãxt
 *
·di
, 
víd‹
, 
¥odu˘
,

370 c⁄° * 
des¸ùti⁄
, c⁄° * 
£rül
, 
ödex
);

371 
·di_usb_›í_dev
(
·di_c⁄ãxt
 *
·di
, 
usb_devi˚
 *
dev
);

372 
·di_usb_›í_°rög
(
·di_c⁄ãxt
 *
·di
, c⁄° * 
des¸ùti⁄
);

374 
·di_usb_˛o£
(
·di_c⁄ãxt
 *
·di
);

375 
·di_usb_ª£t
(
·di_c⁄ãxt
 *
·di
);

376 
·di_usb_purge_rx_buf„r
(
·di_c⁄ãxt
 *
·di
);

377 
·di_usb_purge_tx_buf„r
(
·di_c⁄ãxt
 *
·di
);

378 
·di_usb_purge_buf„rs
(
·di_c⁄ãxt
 *
·di
);

380 
·di_£t_baudøã
(
·di_c⁄ãxt
 *
·di
, 
baudøã
);

381 
·di_£t_löe_¥›îty
(
·di_c⁄ãxt
 *
·di
, 
·di_bôs_ty≥
 
bôs
,

382 
·di_°›bôs_ty≥
 
sbô
, 
·di_∑rôy_ty≥
 
∑rôy
);

383 
·di_£t_löe_¥›îty2
(
·di_c⁄ãxt
 *
·di
, 
·di_bôs_ty≥
 
bôs
,

384 
·di_°›bôs_ty≥
 
sbô
, 
·di_∑rôy_ty≥
 
∑rôy
,

385 
·di_bªak_ty≥
 
bªak_ty≥
);

387 
·di_ªad_d©a
(
·di_c⁄ãxt
 *
·di
, *
buf
, 
size
);

388 
·di_ªad_d©a_£t_chunksize
(
·di_c⁄ãxt
 *
·di
, 
chunksize
);

389 
·di_ªad_d©a_gë_chunksize
(
·di_c⁄ãxt
 *
·di
, *
chunksize
);

391 
·di_wrôe_d©a
(
·di_c⁄ãxt
 *
·di
, *
buf
, 
size
);

392 
·di_wrôe_d©a_£t_chunksize
(
·di_c⁄ãxt
 *
·di
, 
chunksize
);

393 
·di_wrôe_d©a_gë_chunksize
(
·di_c⁄ãxt
 *
·di
, *
chunksize
);

395 
·di_wrôe_d©a_async
(
·di_c⁄ãxt
 *
·di
, *
buf
, 
size
);

396 
·di_async_com∂ëe
(
·di_c⁄ãxt
 *
·di
, 
waô_f‹_m‹e
);

398 
DEPRECATED
(
·di_íabÀ_bôb™g
(
·di_c⁄ãxt
 *
·di
, 
bômask
));

399 
·di_dißbÀ_bôb™g
(
·di_c⁄ãxt
 *
·di
);

400 
·di_£t_bômode
(
·di_c⁄ãxt
 *
·di
, 
bômask
, 
mode
);

401 
·di_ªad_pös
(
·di_c⁄ãxt
 *
·di
, *
pös
);

403 
·di_£t_œãncy_timî
(
·di_c⁄ãxt
 *
·di
, 
œãncy
);

404 
·di_gë_œãncy_timî
(
·di_c⁄ãxt
 *
·di
, *
œãncy
);

406 
·di_pﬁl_modem_°©us
(
·di_c⁄ãxt
 *
·di
, *
°©us
);

409 
·di_£tÊow˘æ
(
·di_c⁄ãxt
 *
·di
, 
Êow˘æ
);

410 
·di_£tdå_πs
(
·di_c⁄ãxt
 *
·di
, 
då
, 
πs
);

411 
·di_£tdå
(
·di_c⁄ãxt
 *
·di
, 
°©e
);

412 
·di_£åts
(
·di_c⁄ãxt
 *
·di
, 
°©e
);

414 
·di_£t_evít_ch¨
(
·di_c⁄ãxt
 *
·di
, 
evítch
, 
íabÀ
);

415 
·di_£t_îr‹_ch¨
(
·di_c⁄ãxt
 *
·di
, 
îr‹ch
, 
íabÀ
);

418 
·di_ì¥om_£tsize
(
·di_c⁄ãxt
 *
·di
, 
·di_ì¥om
 *
ì¥om
, 
size
);

421 
·di_ì¥om_öôdeÁu…s
(
·di_ì¥om
 *
ì¥om
);

422 
·di_ì¥om_‰ì
(
·di_ì¥om
 *
ì¥om
);

423 
·di_ì¥om_buûd
(
·di_ì¥om
 *
ì¥om
, *
ouçut
);

424 
·di_ì¥om_decode
(
·di_ì¥om
 *
ì¥om
, *
ouçut
, 
size
);

428 
·di_ªad_ì¥om
(
·di_c⁄ãxt
 *
·di
, *
ì¥om
);

429 
·di_ªad_chùid
(
·di_c⁄ãxt
 *
·di
, *
chùid
);

430 
·di_ªad_ì¥om_gësize
(
·di_c⁄ãxt
 *
·di
, *
ì¥om
, 
maxsize
);

431 
·di_wrôe_ì¥om
(
·di_c⁄ãxt
 *
·di
, *
ì¥om
);

432 
·di_îa£_ì¥om
(
·di_c⁄ãxt
 *
·di
);

434 
·di_ªad_ì¥om_loˇti⁄
 (
·di_c⁄ãxt
 *
·di
, 
ì¥om_addr
, *
ì¥om_vÆ
);

435 
·di_wrôe_ì¥om_loˇti⁄
(
·di_c⁄ãxt
 *
·di
, 
ì¥om_addr
, 
ì¥om_vÆ
);

437 *
·di_gë_îr‹_°rög
(
·di_c⁄ãxt
 *
·di
);

439 #ifde‡
__˝lu•lus


	@/usr/include/math.h

25 #i‚def 
_MATH_H


26 
	#_MATH_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/huge_vÆ.h
>

35 #ifde‡
__USE_ISOC99


36 
	~<bôs/huge_vÆf.h
>

37 
	~<bôs/huge_vÆl.h
>

40 
	~<bôs/öf.h
>

43 
	~<bôs/«n.h
>

47 
	~<bôs/m©hdef.h
>

54 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

56 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

57 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

58 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

59 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

61 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

62 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

63 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

64 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

65 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

67 
	#_MdoubÀ_
 

	)

68 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

69 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

70 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

71 
	~<bôs/m©hˇŒs.h
>

72 #unde‡
_MdoubÀ_


73 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


74 #unde‡
_MdoubÀ_END_NAMESPACE


75 #unde‡
__MATH_PRECNAME


77 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


83 #i‚de‡
_MÊﬂt_


84 
	#_MÊﬂt_
 

	)

86 
	#_MdoubÀ_
 
_MÊﬂt_


	)

87 #ifde‡
__STDC__


88 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

90 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
f
 
	)
r

92 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

93 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

94 
	~<bôs/m©hˇŒs.h
>

95 #unde‡
_MdoubÀ_


96 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


97 #unde‡
_MdoubÀ_END_NAMESPACE


98 #unde‡
__MATH_PRECNAME


100 #i‡(
__STDC__
 - 0 || 
__GNUC__
 - 0) \

101 && (!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

102 || 
deföed
 
__LDBL_COMPAT
)

103 #ifde‡
__LDBL_COMPAT


105 #ifde‡
__USE_ISOC99


106 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

107 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

108 #ifde‡
__REDIRECT_NTH


109 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

110 
__∆dbl_√xâow¨df
)

111 
	`__©åibuã__
 ((
__c⁄°__
));

112 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

113 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

114 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

115 (
__x
, 
__y
),

116 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

121 #i‡
deföed
 
__LDBL_COMPAT
 || deföed 
__NO_LONG_DOUBLE_MATH


123 #unde‡
__MATHDECL_1


124 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

125 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

126 
¨gs
, 
Æüs
)

	)

127 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

128 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

134 #i‚de‡
_Ml⁄g_doubÀ_


135 
	#_Ml⁄g_doubÀ_
 

	)

137 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

138 #ifde‡
__STDC__


139 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

141 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
l
 
	)
r

143 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

144 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

145 
	#__MATH_DECLARE_LDOUBLE
 1

	)

146 
	~<bôs/m©hˇŒs.h
>

147 #unde‡
_MdoubÀ_


148 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


149 #unde‡
_MdoubÀ_END_NAMESPACE


150 #unde‡
__MATH_PRECNAME


155 #unde‡
__MATHDECL_1


156 #unde‡
__MATHDECL


157 #unde‡
__MATHCALL


160 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


162 
signgam
;

167 #ifde‡
__USE_ISOC99


205 
FP_NAN
,

206 
	#FP_NAN
 
FP_NAN


	)

207 
FP_INFINITE
,

208 
	#FP_INFINITE
 
FP_INFINITE


	)

209 
FP_ZERO
,

210 
	#FP_ZERO
 
FP_ZERO


	)

211 
FP_SUBNORMAL
,

212 
	#FP_SUBNORMAL
 
FP_SUBNORMAL


	)

213 
FP_NORMAL


214 
	#FP_NORMAL
 
FP_NORMAL


	)

218 #ifde‡
__NO_LONG_DOUBLE_MATH


219 
	#Â˛assify
(
x
) \

220 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

222 
	#Â˛assify
(
x
) \

223 ( (
x
) ==  () \

224 ? 
	`__Â˛assifyf
 (
x
) \

225 :  (
x
) ==  () \

226 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

230 #ifde‡
__NO_LONG_DOUBLE_MATH


231 
	#signbô
(
x
) \

232 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

234 
	#signbô
(
x
) \

235 ( (
x
) ==  () \

236 ? 
	`__signbôf
 (
x
) \

237 :  (
x
) ==  () \

238 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

242 #ifde‡
__NO_LONG_DOUBLE_MATH


243 
	#isföôe
(
x
) \

244 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

246 
	#isföôe
(
x
) \

247 ( (
x
) ==  () \

248 ? 
	`__föôef
 (
x
) \

249 :  (
x
) ==  () \

250 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

254 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

258 #ifde‡
__NO_LONG_DOUBLE_MATH


259 
	#i¢™
(
x
) \

260 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

262 
	#i¢™
(
x
) \

263 ( (
x
) ==  () \

264 ? 
	`__i¢™f
 (
x
) \

265 :  (
x
) ==  () \

266 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

270 #ifde‡
__NO_LONG_DOUBLE_MATH


271 
	#isöf
(
x
) \

272 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

274 
	#isöf
(
x
) \

275 ( (
x
) ==  () \

276 ? 
	`__isöff
 (
x
) \

277 :  (
x
) ==  () \

278 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

282 
	#MATH_ERRNO
 1

	)

283 
	#MATH_ERREXCEPT
 2

	)

288 #i‚de‡
__FAST_MATH__


289 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

294 #ifdef 
__USE_MISC


298 
_IEEE_
 = -1,

299 
_SVID_
,

300 
_XOPEN_
,

301 
_POSIX_
,

302 
_ISOC_


303 } 
	t_LIB_VERSION_TYPE
;

308 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

312 #ifde‡
__USE_SVID


318 #ifde‡
__˝lu•lus


319 
__ex˚±i⁄


321 
ex˚±i⁄


324 
ty≥
;

325 *
«me
;

326 
¨g1
;

327 
¨g2
;

328 
ªtvÆ
;

329 
	}
};

331 #ifde‡
__˝lu•lus


332 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

334 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

337 
	#X_TLOSS
 1.41484755040568800000e+16

	)

340 
	#DOMAIN
 1

	)

341 
	#SING
 2

	)

342 
	#OVERFLOW
 3

	)

343 
	#UNDERFLOW
 4

	)

344 
	#TLOSS
 5

	)

345 
	#PLOSS
 6

	)

348 
	#HUGE
 3.40282347e+38F

	)

352 #ifde‡
__USE_XOPEN


354 
	#MAXFLOAT
 3.40282347e+38F

	)

361 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


362 
	#M_E
 2.7182818284590452354

	)

363 
	#M_LOG2E
 1.4426950408889634074

	)

364 
	#M_LOG10E
 0.43429448190325182765

	)

365 
	#M_LN2
 0.69314718055994530942

	)

366 
	#M_LN10
 2.30258509299404568402

	)

367 
	#M_PI
 3.14159265358979323846

	)

368 
	#M_PI_2
 1.57079632679489661923

	)

369 
	#M_PI_4
 0.78539816339744830962

	)

370 
	#M_1_PI
 0.31830988618379067154

	)

371 
	#M_2_PI
 0.63661977236758134308

	)

372 
	#M_2_SQRTPI
 1.12837916709551257390

	)

373 
	#M_SQRT2
 1.41421356237309504880

	)

374 
	#M_SQRT1_2
 0.70710678118654752440

	)

380 #ifde‡
__USE_GNU


381 
	#M_El
 2.7182818284590452353602874713526625L

	)

382 
	#M_LOG2El
 1.4426950408889634073599246810018921L

	)

383 
	#M_LOG10El
 0.4342944819032518276511289189166051L

	)

384 
	#M_LN2l
 0.6931471805599453094172321214581766L

	)

385 
	#M_LN10l
 2.3025850929940456840179914546843642L

	)

386 
	#M_PIl
 3.1415926535897932384626433832795029L

	)

387 
	#M_PI_2l
 1.5707963267948966192313216916397514L

	)

388 
	#M_PI_4l
 0.7853981633974483096156608458198757L

	)

389 
	#M_1_PIl
 0.3183098861837906715377675267450287L

	)

390 
	#M_2_PIl
 0.6366197723675813430755350534900574L

	)

391 
	#M_2_SQRTPIl
 1.1283791670955125738961589031215452L

	)

392 
	#M_SQRT2l
 1.4142135623730950488016887242096981L

	)

393 
	#M_SQRT1_2l
 0.7071067811865475244008443621048490L

	)

400 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


401 
	#__NO_MATH_INLINES
 1

	)

404 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

411 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

412 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

413 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

414 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

415 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

416 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

420 #ifde‡
__USE_EXTERN_INLINES


421 
	~<bôs/m©hölöe.h
>

426 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

427 
	~<bôs/m©h-föôe.h
>

430 #ifde‡
__USE_ISOC99


434 #i‚de‡
isgª©î


435 
	#isgª©î
(
x
, 
y
) \

436 (
__exãnsi⁄__
 \

437 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

438 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

442 #i‚de‡
isgª©îequÆ


443 
	#isgª©îequÆ
(
x
, 
y
) \

444 (
__exãnsi⁄__
 \

445 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

446 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

450 #i‚de‡
i¶ess


451 
	#i¶ess
(
x
, 
y
) \

452 (
__exãnsi⁄__
 \

453 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

454 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

458 #i‚de‡
i¶es£quÆ


459 
	#i¶es£quÆ
(
x
, 
y
) \

460 (
__exãnsi⁄__
 \

461 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

462 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

466 #i‚de‡
i¶essgª©î


467 
	#i¶essgª©î
(
x
, 
y
) \

468 (
__exãnsi⁄__
 \

469 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

470 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

474 #i‚de‡
isun‹dîed


475 
	#isun‹dîed
(
u
, 
v
) \

476 (
__exãnsi⁄__
 \

477 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

478 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

483 
	g__END_DECLS


	@/usr/include/memory.h

23 #i‚def 
_MEMORY_H


24 
	#_MEMORY_H
 1

	)

26 
	~<„©uªs.h
>

29 #i‚def 
_STRING_H


30 
	~<°rög.h
>

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

144 #ifde‡
__USE_GNU


145 
	#SEEK_DATA
 3

	)

146 
	#SEEK_HOLE
 4

	)

150 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


152 
	#P_tmpdú
 "/tmp"

	)

165 
	~<bôs/°dio_lim.h
>

169 
_IO_FILE
 *
°dö
;

170 
_IO_FILE
 *
°dout
;

171 
_IO_FILE
 *
°dîr
;

173 
	#°dö
 
°dö


	)

174 
	#°dout
 
°dout


	)

175 
	#°dîr
 
°dîr


	)

177 
__BEGIN_NAMESPACE_STD


179 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

181 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

182 
__END_NAMESPACE_STD


184 #ifde‡
__USE_ATFILE


186 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

187 
__c⁄°
 *
__√w
Ë
__THROW
;

190 
__BEGIN_NAMESPACE_STD


195 #i‚de‡
__USE_FILE_OFFSET64


196 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

198 #ifde‡
__REDIRECT


199 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

201 
	#tmpfûe
 
tmpfûe64


	)

205 #ifde‡
__USE_LARGEFILE64


206 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

210 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

211 
__END_NAMESPACE_STD


213 #ifde‡
__USE_MISC


216 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

220 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


228 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

229 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

233 
__BEGIN_NAMESPACE_STD


238 
	`f˛o£
 (
FILE
 *
__°ªam
);

243 
	`fÊush
 (
FILE
 *
__°ªam
);

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_MISC


253 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

256 #ifde‡
__USE_GNU


263 
	`f˛o£Æl
 ();

267 
__BEGIN_NAMESPACE_STD


268 #i‚de‡
__USE_FILE_OFFSET64


273 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

274 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

279 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

280 
__c⁄°
 *
__ª°ri˘
 
__modes
,

281 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

283 #ifde‡
__REDIRECT


284 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

285 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

286 
__wur
;

287 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

288 
__c⁄°
 *
__ª°ri˘
 
__modes
,

289 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

290 
__wur
;

292 
	#f›í
 
f›í64


	)

293 
	#‰e›í
 
‰e›í64


	)

296 
__END_NAMESPACE_STD


297 #ifde‡
__USE_LARGEFILE64


298 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

299 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

300 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

301 
__c⁄°
 *
__ª°ri˘
 
__modes
,

302 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

305 #ifdef 
__USE_POSIX


307 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

310 #ifdef 
__USE_GNU


313 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

314 
__c⁄°
 *
__ª°ri˘
 
__modes
,

315 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

318 #ifde‡
__USE_XOPEN2K8


320 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

321 
__THROW
 
__wur
;

326 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

330 
__BEGIN_NAMESPACE_STD


333 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

337 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

338 
__modes
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifdef 
__USE_BSD


344 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

345 
size_t
 
__size
Ë
__THROW
;

348 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

352 
__BEGIN_NAMESPACE_STD


357 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

358 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

363 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

365 
	$•rötf
 (*
__ª°ri˘
 
__s
,

366 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

372 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

373 
_G_va_li°
 
__¨g
);

378 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

380 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

381 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

382 
__END_NAMESPACE_STD


384 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


385 
__BEGIN_NAMESPACE_C99


387 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

388 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

389 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

391 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

392 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

393 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

394 
__END_NAMESPACE_C99


397 #ifde‡
__USE_GNU


400 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

401 
_G_va_li°
 
__¨g
)

402 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

403 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

404 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

405 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

406 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

407 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

408 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

411 #ifde‡
__USE_XOPEN2K8


418 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

419 
_G_va_li°
 
__¨g
)

420 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

421 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

422 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

426 
__BEGIN_NAMESPACE_STD


431 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

432 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

439 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

440 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

442 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

443 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

444 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

445 #ifde‡
__REDIRECT


449 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

450 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

451 
__isoc99_fsˇnf
Ë
__wur
;

452 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

453 
__isoc99_sˇnf
Ë
__wur
;

454 
	`__REDIRECT_NTH
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

455 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

456 
__isoc99_ssˇnf
);

458 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

459 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

460 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

461 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

462 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

463 
	#fsˇnf
 
__isoc99_fsˇnf


	)

464 
	#sˇnf
 
__isoc99_sˇnf


	)

465 
	#ssˇnf
 
__isoc99_ssˇnf


	)

469 
__END_NAMESPACE_STD


471 #ifdef 
__USE_ISOC99


472 
__BEGIN_NAMESPACE_C99


477 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

478 
_G_va_li°
 
__¨g
)

479 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

485 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

486 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

489 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

490 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

491 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

493 #i‡!
deföed
 
__USE_GNU
 \

494 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

495 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

496 #ifde‡
__REDIRECT


500 
	`__REDIRECT
 (
vfsˇnf
,

501 (
FILE
 *
__ª°ri˘
 
__s
,

502 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

503 
__isoc99_vfsˇnf
)

504 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

505 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

506 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

507 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

508 
	`__REDIRECT_NTH
 (
vssˇnf
,

509 (
__c⁄°
 *
__ª°ri˘
 
__s
,

510 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

511 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

512 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

514 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

515 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

516 
_G_va_li°
 
__¨g
Ë
__wur
;

517 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

518 
_G_va_li°
 
__¨g
Ë
__wur
;

519 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

520 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

521 
_G_va_li°
 
__¨g
Ë
__THROW
;

522 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

523 
	#vsˇnf
 
__isoc99_vsˇnf


	)

524 
	#vssˇnf
 
__isoc99_vssˇnf


	)

528 
__END_NAMESPACE_C99


532 
__BEGIN_NAMESPACE_STD


537 
	`fgëc
 (
FILE
 *
__°ªam
);

538 
	`gëc
 (
FILE
 *
__°ªam
);

544 
	`gëch¨
 ();

545 
__END_NAMESPACE_STD


549 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

551 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


556 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

557 
	`gëch¨_u∆ocked
 ();

560 #ifde‡
__USE_MISC


567 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

571 
__BEGIN_NAMESPACE_STD


579 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

586 
	`putch¨
 (
__c
);

587 
__END_NAMESPACE_STD


591 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

593 #ifde‡
__USE_MISC


600 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


608 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

609 
	`putch¨_u∆ocked
 (
__c
);

613 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

614 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

616 
	`gëw
 (
FILE
 *
__°ªam
);

619 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

623 
__BEGIN_NAMESPACE_STD


628 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

629 
__wur
;

636 *
	$gës
 (*
__s
Ë
__wur
;

637 
__END_NAMESPACE_STD


639 #ifde‡
__USE_GNU


646 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

647 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 #ifdef 
__USE_XOPEN2K8


662 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

663 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

664 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

665 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

676 
size_t
 *
__ª°ri˘
 
__n
,

677 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

681 
__BEGIN_NAMESPACE_STD


686 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

692 
	`puts
 (
__c⁄°
 *
__s
);

699 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

706 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

707 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

714 
__END_NAMESPACE_STD


716 #ifde‡
__USE_GNU


723 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

724 
FILE
 *
__ª°ri˘
 
__°ªam
);

727 #ifde‡
__USE_MISC


734 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

735 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

736 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

737 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

741 
__BEGIN_NAMESPACE_STD


746 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

751 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

756 
	`ªwöd
 (
FILE
 *
__°ªam
);

757 
__END_NAMESPACE_STD


764 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


765 #i‚de‡
__USE_FILE_OFFSET64


770 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

775 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

777 #ifde‡
__REDIRECT


778 
	`__REDIRECT
 (
f£eko
,

779 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

780 
f£eko64
);

781 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

783 
	#f£eko
 
f£eko64


	)

784 
	#·ñlo
 
·ñlo64


	)

789 
__BEGIN_NAMESPACE_STD


790 #i‚de‡
__USE_FILE_OFFSET64


795 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

800 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

802 #ifde‡
__REDIRECT


803 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

804 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

805 
	`__REDIRECT
 (
f£ços
,

806 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

808 
	#fgëpos
 
fgëpos64


	)

809 
	#f£ços
 
f£ços64


	)

812 
__END_NAMESPACE_STD


814 #ifde‡
__USE_LARGEFILE64


815 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

816 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

817 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

818 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

821 
__BEGIN_NAMESPACE_STD


823 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

825 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

827 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

828 
__END_NAMESPACE_STD


830 #ifde‡
__USE_MISC


832 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

833 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

838 
__BEGIN_NAMESPACE_STD


843 
	`≥º‹
 (
__c⁄°
 *
__s
);

844 
__END_NAMESPACE_STD


850 
	~<bôs/sys_îæi°.h
>

853 #ifdef 
__USE_POSIX


855 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

858 #ifde‡
__USE_MISC


860 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

864 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

865 
deföed
 
__USE_MISC
)

870 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

876 
	`p˛o£
 (
FILE
 *
__°ªam
);

880 #ifdef 
__USE_POSIX


882 *
	$˘îmid
 (*
__s
Ë
__THROW
;

886 #ifde‡
__USE_XOPEN


888 *
	`cu£rid
 (*
__s
);

892 #ifdef 
__USE_GNU


893 
ob°ack
;

896 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

897 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

898 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

899 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

901 
_G_va_li°
 
__¨gs
)

902 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

906 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


910 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

914 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

917 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

920 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


924 
	#__√ed_gë›t


	)

925 
	~<gë›t.h
>

930 #ifde‡
__USE_EXTERN_INLINES


931 
	~<bôs/°dio.h
>

933 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


934 
	~<bôs/°dio2.h
>

936 #ifde‡
__LDBL_COMPAT


937 
	~<bôs/°dio-ldbl.h
>

940 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/usb.h

11 #i‚de‡
__USB_H__


12 
	#__USB_H__


	)

14 
	~<uni°d.h
>

15 
	~<°dlib.h
>

16 
	~<°döt.h
>

17 
	~<limôs.h
>

19 
	~<sys/∑øm.h
>

20 
	~<dúít.h
>

32 
	#USB_CLASS_PER_INTERFACE
 0

	)

33 
	#USB_CLASS_AUDIO
 1

	)

34 
	#USB_CLASS_COMM
 2

	)

35 
	#USB_CLASS_HID
 3

	)

36 
	#USB_CLASS_PRINTER
 7

	)

37 
	#USB_CLASS_PTP
 6

	)

38 
	#USB_CLASS_MASS_STORAGE
 8

	)

39 
	#USB_CLASS_HUB
 9

	)

40 
	#USB_CLASS_DATA
 10

	)

41 
	#USB_CLASS_VENDOR_SPEC
 0xff

	)

46 
	#USB_DT_DEVICE
 0x01

	)

47 
	#USB_DT_CONFIG
 0x02

	)

48 
	#USB_DT_STRING
 0x03

	)

49 
	#USB_DT_INTERFACE
 0x04

	)

50 
	#USB_DT_ENDPOINT
 0x05

	)

52 
	#USB_DT_HID
 0x21

	)

53 
	#USB_DT_REPORT
 0x22

	)

54 
	#USB_DT_PHYSICAL
 0x23

	)

55 
	#USB_DT_HUB
 0x29

	)

60 
	#USB_DT_DEVICE_SIZE
 18

	)

61 
	#USB_DT_CONFIG_SIZE
 9

	)

62 
	#USB_DT_INTERFACE_SIZE
 9

	)

63 
	#USB_DT_ENDPOINT_SIZE
 7

	)

64 
	#USB_DT_ENDPOINT_AUDIO_SIZE
 9

	)

65 
	#USB_DT_HUB_NONVAR_SIZE
 7

	)

68 
	susb_des¸ùt‹_hódî
 {

69 
uöt8_t
 
	mbLígth
;

70 
uöt8_t
 
	mbDes¸ùt‹Ty≥
;

71 } 
__©åibuã__
 ((
∑cked
));

74 
	susb_°rög_des¸ùt‹
 {

75 
uöt8_t
 
	mbLígth
;

76 
uöt8_t
 
	mbDes¸ùt‹Ty≥
;

77 
uöt16_t
 
	mwD©a
[1];

78 } 
__©åibuã__
 ((
∑cked
));

81 
	susb_hid_des¸ùt‹
 {

82 
uöt8_t
 
	mbLígth
;

83 
uöt8_t
 
	mbDes¸ùt‹Ty≥
;

84 
uöt16_t
 
	mbcdHID
;

85 
uöt8_t
 
	mbCou¡ryCode
;

86 
uöt8_t
 
	mbNumDes¸ùt‹s
;

90 } 
__©åibuã__
 ((
∑cked
));

93 
	#USB_MAXENDPOINTS
 32

	)

94 
	susb_ídpoöt_des¸ùt‹
 {

95 
uöt8_t
 
	mbLígth
;

96 
uöt8_t
 
	mbDes¸ùt‹Ty≥
;

97 
uöt8_t
 
	mbEndpoötAddªss
;

98 
uöt8_t
 
	mbmAâribuãs
;

99 
uöt16_t
 
	mwMaxPackëSize
;

100 
uöt8_t
 
	mbI¡îvÆ
;

101 
uöt8_t
 
	mbRe‰esh
;

102 
uöt8_t
 
	mbSynchAddªss
;

104 *
	mexåa
;

105 
	mexåÆí
;

108 
	#USB_ENDPOINT_ADDRESS_MASK
 0x0‡

	)

109 
	#USB_ENDPOINT_DIR_MASK
 0x80

	)

111 
	#USB_ENDPOINT_TYPE_MASK
 0x03

	)

112 
	#USB_ENDPOINT_TYPE_CONTROL
 0

	)

113 
	#USB_ENDPOINT_TYPE_ISOCHRONOUS
 1

	)

114 
	#USB_ENDPOINT_TYPE_BULK
 2

	)

115 
	#USB_ENDPOINT_TYPE_INTERRUPT
 3

	)

118 
	#USB_MAXINTERFACES
 32

	)

119 
	susb_öãrÁ˚_des¸ùt‹
 {

120 
uöt8_t
 
	mbLígth
;

121 
uöt8_t
 
	mbDes¸ùt‹Ty≥
;

122 
uöt8_t
 
	mbI¡îÁ˚Numbî
;

123 
uöt8_t
 
	mbA…î«ãSëtög
;

124 
uöt8_t
 
	mbNumEndpoöts
;

125 
uöt8_t
 
	mbI¡îÁ˚Cœss
;

126 
uöt8_t
 
	mbI¡îÁ˚SubCœss
;

127 
uöt8_t
 
	mbI¡îÁ˚PrŸocﬁ
;

128 
uöt8_t
 
	miI¡îÁ˚
;

130 
usb_ídpoöt_des¸ùt‹
 *
	mídpoöt
;

132 *
	mexåa
;

133 
	mexåÆí
;

136 
	#USB_MAXALTSETTING
 128

	)

137 
	susb_öãrÁ˚
 {

138 
usb_öãrÁ˚_des¸ùt‹
 *
	mÆt£âög
;

140 
	mnum_Æt£âög
;

144 
	#USB_MAXCONFIG
 8

	)

145 
	susb_c⁄fig_des¸ùt‹
 {

146 
uöt8_t
 
	mbLígth
;

147 
uöt8_t
 
	mbDes¸ùt‹Ty≥
;

148 
uöt16_t
 
	mwTŸÆLígth
;

149 
uöt8_t
 
	mbNumI¡îÁ˚s
;

150 
uöt8_t
 
	mbC⁄figuøti⁄VÆue
;

151 
uöt8_t
 
	miC⁄figuøti⁄
;

152 
uöt8_t
 
	mbmAâribuãs
;

153 
uöt8_t
 
	mMaxPowî
;

155 
usb_öãrÁ˚
 *
	möãrÁ˚
;

157 *
	mexåa
;

158 
	mexåÆí
;

162 
	susb_devi˚_des¸ùt‹
 {

163 
uöt8_t
 
	mbLígth
;

164 
uöt8_t
 
	mbDes¸ùt‹Ty≥
;

165 
uöt16_t
 
	mbcdUSB
;

166 
uöt8_t
 
	mbDevi˚Cœss
;

167 
uöt8_t
 
	mbDevi˚SubCœss
;

168 
uöt8_t
 
	mbDevi˚PrŸocﬁ
;

169 
uöt8_t
 
	mbMaxPackëSize0
;

170 
uöt16_t
 
	midVíd‹
;

171 
uöt16_t
 
	midProdu˘
;

172 
uöt16_t
 
	mbcdDevi˚
;

173 
uöt8_t
 
	miM™uÁ˘uªr
;

174 
uöt8_t
 
	miProdu˘
;

175 
uöt8_t
 
	miSîülNumbî
;

176 
uöt8_t
 
	mbNumC⁄figuøti⁄s
;

177 } 
__©åibuã__
 ((
∑cked
));

179 
	susb_˘æ_£tup
 {

180 
uöt8_t
 
	mbReque°Ty≥
;

181 
uöt8_t
 
	mbReque°
;

182 
uöt16_t
 
	mwVÆue
;

183 
uöt16_t
 
	mwIndex
;

184 
uöt16_t
 
	mwLígth
;

185 } 
__©åibuã__
 ((
∑cked
));

190 
	#USB_REQ_GET_STATUS
 0x00

	)

191 
	#USB_REQ_CLEAR_FEATURE
 0x01

	)

193 
	#USB_REQ_SET_FEATURE
 0x03

	)

195 
	#USB_REQ_SET_ADDRESS
 0x05

	)

196 
	#USB_REQ_GET_DESCRIPTOR
 0x06

	)

197 
	#USB_REQ_SET_DESCRIPTOR
 0x07

	)

198 
	#USB_REQ_GET_CONFIGURATION
 0x08

	)

199 
	#USB_REQ_SET_CONFIGURATION
 0x09

	)

200 
	#USB_REQ_GET_INTERFACE
 0x0A

	)

201 
	#USB_REQ_SET_INTERFACE
 0x0B

	)

202 
	#USB_REQ_SYNCH_FRAME
 0x0C

	)

204 
	#USB_TYPE_STANDARD
 (0x00 << 5)

	)

205 
	#USB_TYPE_CLASS
 (0x01 << 5)

	)

206 
	#USB_TYPE_VENDOR
 (0x02 << 5)

	)

207 
	#USB_TYPE_RESERVED
 (0x03 << 5)

	)

209 
	#USB_RECIP_DEVICE
 0x00

	)

210 
	#USB_RECIP_INTERFACE
 0x01

	)

211 
	#USB_RECIP_ENDPOINT
 0x02

	)

212 
	#USB_RECIP_OTHER
 0x03

	)

218 
	#USB_ENDPOINT_IN
 0x80

	)

219 
	#USB_ENDPOINT_OUT
 0x00

	)

222 
	#USB_ERROR_BEGIN
 500000

	)

229 
	#USB_LE16_TO_CPU
(
x
Ëdÿ{ x = ((x & 0xffË<< 8Ë| ((x & 0xff00Ë>> 8); } 0)

	)

231 
	#USB_LE16_TO_CPU
(
x
)

	)

235 
	gusb_devi˚
;

236 
	gusb_bus
;

243 
	susb_devi˚
 {

244 
usb_devi˚
 *
	m√xt
, *
	m¥ev
;

246 
	mfûíame
[
PATH_MAX
 + 1];

248 
usb_bus
 *
	mbus
;

250 
usb_devi˚_des¸ùt‹
 
	mdes¸ùt‹
;

251 
usb_c⁄fig_des¸ùt‹
 *
	mc⁄fig
;

253 *
	mdev
;

255 
uöt8_t
 
	mdevnum
;

257 
	mnum_chûdªn
;

258 
usb_devi˚
 **
	mchûdªn
;

261 
	susb_bus
 {

262 
usb_bus
 *
	m√xt
, *
	m¥ev
;

264 
	mdú«me
[
PATH_MAX
 + 1];

266 
usb_devi˚
 *
	mdevi˚s
;

267 
uöt32_t
 
	mloˇti⁄
;

269 
usb_devi˚
 *
	mroŸ_dev
;

272 
	gusb_dev_h™dÀ
;

273 
usb_dev_h™dÀ
 
	tusb_dev_h™dÀ
;

276 
usb_bus
 *
usb_bus£s
;

278 #ifde‡
__˝lu•lus


285 
usb_dev_h™dÀ
 *
usb_›í
(
usb_devi˚
 *
dev
);

286 
usb_˛o£
(
usb_dev_h™dÀ
 *
dev
);

287 
usb_gë_°rög
(
usb_dev_h™dÀ
 *
dev
, 
ödex
, 
œngid
, *
buf
,

288 
size_t
 
buÊí
);

289 
usb_gë_°rög_sim∂e
(
usb_dev_h™dÀ
 *
dev
, 
ödex
, *
buf
,

290 
size_t
 
buÊí
);

293 
usb_gë_des¸ùt‹_by_ídpoöt
(
usb_dev_h™dÀ
 *
udev
, 
ï
,

294 
ty≥
, 
ödex
, *
buf
, 
size
);

295 
usb_gë_des¸ùt‹
(
usb_dev_h™dÀ
 *
udev
, 
ty≥
,

296 
ödex
, *
buf
, 
size
);

299 
usb_bulk_wrôe
(
usb_dev_h™dÀ
 *
dev
, 
ï
, c⁄° *
byãs
, 
size
,

300 
timeout
);

301 
usb_bulk_ªad
(
usb_dev_h™dÀ
 *
dev
, 
ï
, *
byãs
, 
size
,

302 
timeout
);

303 
usb_öãºu±_wrôe
(
usb_dev_h™dÀ
 *
dev
, 
ï
, c⁄° *
byãs
, 
size
,

304 
timeout
);

305 
usb_öãºu±_ªad
(
usb_dev_h™dÀ
 *
dev
, 
ï
, *
byãs
, 
size
,

306 
timeout
);

307 
usb_c⁄åﬁ_msg
(
usb_dev_h™dÀ
 *
dev
, 
ªque°ty≥
, 
ªque°
,

308 
vÆue
, 
ödex
, *
byãs
, 
size
, 
timeout
);

309 
usb_£t_c⁄figuøti⁄
(
usb_dev_h™dÀ
 *
dev
, 
c⁄figuøti⁄
);

310 
usb_˛aim_öãrÁ˚
(
usb_dev_h™dÀ
 *
dev
, 
öãrÁ˚
);

311 
usb_ªÀa£_öãrÁ˚
(
usb_dev_h™dÀ
 *
dev
, 
öãrÁ˚
);

312 
usb_£t_ÆtöãrÁ˚
(
usb_dev_h™dÀ
 *
dev
, 
Æã∫©e
);

313 
usb_ª£ãp
(
usb_dev_h™dÀ
 *
dev
, 
ï
);

314 
usb_˛ór_hÆt
(
usb_dev_h™dÀ
 *
dev
, 
ï
);

315 
usb_ª£t
(
usb_dev_h™dÀ
 *
dev
);

318 
	#LIBUSB_HAS_GET_DRIVER_NP
 1

	)

319 
usb_gë_drivî_≈
(
usb_dev_h™dÀ
 *
dev
, 
öãrÁ˚
, *
«me
,

320 
«mñí
);

321 
	#LIBUSB_HAS_DETACH_KERNEL_DRIVER_NP
 1

	)

322 
usb_dëach_kî√l_drivî_≈
(
usb_dev_h™dÀ
 *
dev
, 
öãrÁ˚
);

325 *
usb_°ªº‹
();

327 
usb_öô
();

328 
usb_£t_debug
(
Àvñ
);

329 
usb_föd_bus£s
();

330 
usb_föd_devi˚s
();

331 
usb_devi˚
 *usb_devi˚(
usb_dev_h™dÀ
 *
dev
);

332 
usb_bus
 *
usb_gë_bus£s
();

334 #ifde‡
__˝lu•lus


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/huge_val.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VAL
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

37 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

41 
	~<ídün.h
>

43 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

45 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


46 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

48 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


49 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

52 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

53 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VALF
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

37 { 
__l
: 0x7f800000UL }).
__d
)

	)

41 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

50 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

51 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

21 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

28 
	#HUGE_VALL
 ((Ë
HUGE_VAL
)

	)

	@/usr/include/bits/inf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#INFINITY
 (
	`__buûtö_öff
())

	)

29 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/math-finite.h

20 #i‚de‡
_MATH_H


25 
__REDIRECT_NTH
 (
acos
, (), 
__acos_föôe
);

26 
__REDIRECT_NTH
 (
acosf
, (), 
__acosf_föôe
);

27 #ifde‡
__MATH_DECLARE_LDOUBLE


28 
__REDIRECT_NTH
 (
aco¶
, (), 
__aco¶_föôe
);

31 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


33 
__REDIRECT_NTH
 (
acosh
, (), 
__acosh_föôe
);

34 
__REDIRECT_NTH
 (
acoshf
, (), 
__acoshf_föôe
);

35 #ifde‡
__MATH_DECLARE_LDOUBLE


36 
__REDIRECT_NTH
 (
acoshl
, (), 
__acoshl_föôe
);

41 
__REDIRECT_NTH
 (
asö
, (), 
__asö_föôe
);

42 
__REDIRECT_NTH
 (
asöf
, (), 
__asöf_föôe
);

43 #ifde‡
__MATH_DECLARE_LDOUBLE


44 
__REDIRECT_NTH
 (
asöl
, (), 
__asöl_föôe
);

48 
__REDIRECT_NTH
 (
©™2
, (, ), 
__©™2_föôe
);

49 
__REDIRECT_NTH
 (
©™2f
, (, ), 
__©™2f_föôe
);

50 #ifde‡
__MATH_DECLARE_LDOUBLE


51 
__REDIRECT_NTH
 (
©™2l
, (, ),

52 
__©™2l_föôe
);

55 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


57 
__REDIRECT_NTH
 (
©™h
, (), 
__©™h_föôe
);

58 
__REDIRECT_NTH
 (
©™hf
, (), 
__©™hf_föôe
);

59 #ifde‡
__MATH_DECLARE_LDOUBLE


60 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™hl_föôe
);

65 
__REDIRECT_NTH
 (
cosh
, (), 
__cosh_föôe
);

66 
__REDIRECT_NTH
 (
coshf
, (), 
__coshf_föôe
);

67 #ifde‡
__MATH_DECLARE_LDOUBLE


68 
__REDIRECT_NTH
 (
coshl
, (), 
__coshl_föôe
);

72 
__REDIRECT_NTH
 (
exp
, (), 
__exp_föôe
);

73 
__REDIRECT_NTH
 (
expf
, (), 
__expf_föôe
);

74 #ifde‡
__MATH_DECLARE_LDOUBLE


75 
__REDIRECT_NTH
 (
ex∂
, (), 
__ex∂_föôe
);

78 #ifde‡
__USE_GNU


80 
__REDIRECT_NTH
 (
exp10
, (), 
__exp10_föôe
);

81 
__REDIRECT_NTH
 (
exp10f
, (), 
__exp10f_föôe
);

82 #ifde‡
__MATH_DECLARE_LDOUBLE


83 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10l_föôe
);

87 
__REDIRECT_NTH
 (
pow10
, (), 
__exp10_föôe
);

88 
__REDIRECT_NTH
 (
pow10f
, (), 
__exp10f_föôe
);

89 #ifde‡
__MATH_DECLARE_LDOUBLE


90 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10l_föôe
);

94 #ifde‡
__USE_ISOC99


96 
__REDIRECT_NTH
 (
exp2
, (), 
__exp2_föôe
);

97 
__REDIRECT_NTH
 (
exp2f
, (), 
__exp2f_föôe
);

98 #ifde‡
__MATH_DECLARE_LDOUBLE


99 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2l_föôe
);

104 
__REDIRECT_NTH
 (
fmod
, (, ), 
__fmod_föôe
);

105 
__REDIRECT_NTH
 (
fmodf
, (, ), 
__fmodf_föôe
);

106 #ifde‡
__MATH_DECLARE_LDOUBLE


107 
__REDIRECT_NTH
 (
fmodl
, (, ),

108 
__fmodl_föôe
);

111 #ifde‡
__USE_ISOC99


113 
__REDIRECT_NTH
 (
hypŸ
, (, ), 
__hypŸ_föôe
);

114 
__REDIRECT_NTH
 (
hypŸf
, (, ), 
__hypŸf_föôe
);

115 #ifde‡
__MATH_DECLARE_LDOUBLE


116 
__REDIRECT_NTH
 (
hypŸl
, (, ),

117 
__hypŸl_föôe
);

121 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


123 
__REDIRECT_NTH
 (
j0
, (), 
__j0_föôe
);

124 
__REDIRECT_NTH
 (
j0f
, (), 
__j0f_föôe
);

125 #ifde‡
__MATH_DECLARE_LDOUBLE


126 
__REDIRECT_NTH
 (
j0l
, (), 
__j0l_föôe
);

130 
__REDIRECT_NTH
 (
y0
, (), 
__y0_föôe
);

131 
__REDIRECT_NTH
 (
y0f
, (), 
__y0f_föôe
);

132 #ifde‡
__MATH_DECLARE_LDOUBLE


133 
__REDIRECT_NTH
 (
y0l
, (), 
__y0l_föôe
);

137 
__REDIRECT_NTH
 (
j1
, (), 
__j1_föôe
);

138 
__REDIRECT_NTH
 (
j1f
, (), 
__j1f_föôe
);

139 #ifde‡
__MATH_DECLARE_LDOUBLE


140 
__REDIRECT_NTH
 (
j1l
, (), 
__j1l_föôe
);

144 
__REDIRECT_NTH
 (
y1
, (), 
__y1_föôe
);

145 
__REDIRECT_NTH
 (
y1f
, (), 
__y1f_föôe
);

146 #ifde‡
__MATH_DECLARE_LDOUBLE


147 
__REDIRECT_NTH
 (
y1l
, (), 
__y1l_föôe
);

151 
__REDIRECT_NTH
 (
jn
, (, ), 
__jn_föôe
);

152 
__REDIRECT_NTH
 (
jnf
, (, ), 
__jnf_föôe
);

153 #ifde‡
__MATH_DECLARE_LDOUBLE


154 
__REDIRECT_NTH
 (
j∆
, (, ), 
__j∆_föôe
);

158 
__REDIRECT_NTH
 (
yn
, (, ), 
__yn_föôe
);

159 
__REDIRECT_NTH
 (
ynf
, (, ), 
__ynf_föôe
);

160 #ifde‡
__MATH_DECLARE_LDOUBLE


161 
__REDIRECT_NTH
 (
y∆
, (, ), 
__y∆_föôe
);

165 #ifde‡
__USE_MISC


167 
__REDIRECT_NTH
 (
lgamma_r
, (, *), 
__lgamma_r_föôe
);

168 
__REDIRECT_NTH
 (
lgammaf_r
, (, *), 
__lgammaf_r_föôe
);

169 #ifde‡
__MATH_DECLARE_LDOUBLE


170 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

171 
__lgammÆ_r_föôe
);

175 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


177 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgamma
 (
__d
))

179 #ifde‡
__USE_ISOC99


180 
__loˇl_signgam
 = 0;

181  
	`lgamma_r
 (
__d
, &
__loˇl_signgam
);

183  
	`lgamma_r
 (
__d
, &
signgam
);

185 
	}
}

186 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammaf
 (
__d
))

188 #ifde‡
__USE_ISOC99


189 
__loˇl_signgam
 = 0;

190  
	`lgammaf_r
 (
__d
, &
__loˇl_signgam
);

192  
	`lgammaf_r
 (
__d
, &
signgam
);

194 
	}
}

195 #ifde‡
__MATH_DECLARE_LDOUBLE


196 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammÆ
 (
__d
))

198 #ifde‡
__USE_ISOC99


199 
__loˇl_signgam
 = 0;

200  
	`lgammÆ_r
 (
__d
, &
__loˇl_signgam
);

202  
	`lgammÆ_r
 (
__d
, &
signgam
);

204 
	}
}

208 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


210 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gamma
 (
__d
))

212 #ifde‡
__USE_ISOC99


213 
__loˇl_signgam
 = 0;

214  
	`lgamma_r
 (
__d
, &
__loˇl_signgam
);

216  
	`lgamma_r
 (
__d
, &
signgam
);

218 
	}
}

219 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammaf
 (
__d
))

221 #ifde‡
__USE_ISOC99


222 
__loˇl_signgam
 = 0;

223  
	`lgammaf_r
 (
__d
, &
__loˇl_signgam
);

225  
	`lgammaf_r
 (
__d
, &
signgam
);

227 
	}
}

228 #ifde‡
__MATH_DECLARE_LDOUBLE


229 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammÆ
 (
__d
))

231 #ifde‡
__USE_ISOC99


232 
__loˇl_signgam
 = 0;

233  
	`lgammÆ_r
 (
__d
, &
__loˇl_signgam
);

235  
	`lgammÆ_r
 (
__d
, &
signgam
);

237 
	}
}

242 
__REDIRECT_NTH
 (
log
, (), 
__log_föôe
);

243 
__REDIRECT_NTH
 (
logf
, (), 
__logf_föôe
);

244 #ifde‡
__MATH_DECLARE_LDOUBLE


245 
__REDIRECT_NTH
 (
logl
, (), 
__logl_föôe
);

249 
__REDIRECT_NTH
 (
log10
, (), 
__log10_föôe
);

250 
__REDIRECT_NTH
 (
log10f
, (), 
__log10f_föôe
);

251 #ifde‡
__MATH_DECLARE_LDOUBLE


252 
__REDIRECT_NTH
 (
log10l
, (), 
__log10l_föôe
);

255 #ifde‡
__USE_ISOC99


257 
__REDIRECT_NTH
 (
log2
, (), 
__log2_föôe
);

258 
__REDIRECT_NTH
 (
log2f
, (), 
__log2f_föôe
);

259 #ifde‡
__MATH_DECLARE_LDOUBLE


260 
__REDIRECT_NTH
 (
log2l
, (), 
__log2l_föôe
);

265 
__REDIRECT_NTH
 (
pow
, (, ), 
__pow_föôe
);

266 
__REDIRECT_NTH
 (
powf
, (, ), 
__powf_föôe
);

267 #ifde‡
__MATH_DECLARE_LDOUBLE


268 
__REDIRECT_NTH
 (
powl
, (, ),

269 
__powl_föôe
);

273 
__REDIRECT_NTH
 (
ªmaödî
, (, ), 
__ªmaödî_föôe
);

274 
__REDIRECT_NTH
 (
ªmaödîf
, (, ), 
__ªmaödîf_föôe
);

275 #ifde‡
__MATH_DECLARE_LDOUBLE


276 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

277 
__ªmaödîl_föôe
);

280 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


282 
__REDIRECT_NTH
 (
sˇlb
, (, ), 
__sˇlb_föôe
);

283 
__REDIRECT_NTH
 (
sˇlbf
, (, ), 
__sˇlbf_föôe
);

284 #ifde‡
__MATH_DECLARE_LDOUBLE


285 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

286 
__sˇlbl_föôe
);

291 
__REDIRECT_NTH
 (
söh
, (), 
__söh_föôe
);

292 
__REDIRECT_NTH
 (
söhf
, (), 
__söhf_föôe
);

293 #ifde‡
__MATH_DECLARE_LDOUBLE


294 
__REDIRECT_NTH
 (
söhl
, (), 
__söhl_föôe
);

298 
__REDIRECT_NTH
 (
sqπ
, (), 
__sqπ_föôe
);

299 
__REDIRECT_NTH
 (
sqπf
, (), 
__sqπf_föôe
);

300 #ifde‡
__MATH_DECLARE_LDOUBLE


301 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπl_föôe
);

304 #ifde‡
__USE_ISOC99


306 
__gamma_r_föôe
 (, *);

307 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgamma
 (
__d
))

309 
__loˇl_signgam
 = 0;

310 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

311  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

312 
	}
}

313 
__gammaf_r_föôe
 (, *);

314 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammaf
 (
__d
))

316 
__loˇl_signgam
 = 0;

317 
__ªs
 = 
	`__gammaf_r_föôe
 (
__d
, &
__loˇl_signgam
);

318  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

319 
	}
}

320 #ifde‡
__MATH_DECLARE_LDOUBLE


321 
__gammÆ_r_föôe
 (, *);

322 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammÆ
 (
__d
))

324 
__loˇl_signgam
 = 0;

325 
__ªs
 = 
	`__gammÆ_r_föôe
 (
__d
, &
__loˇl_signgam
);

326  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

327 
	}
}

	@/usr/include/bits/mathcalls.h

46 #i‚de‡
_MATH_H


53 
_MdoubÀ_BEGIN_NAMESPACE


55 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

57 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

59 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

61 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

64 
__MATHCALL
 (
cos
,, (
_MdoubÀ_
 
__x
));

66 
__MATHCALL
 (
sö
,, (
_MdoubÀ_
 
__x
));

68 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

73 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

75 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

77 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

78 
	g_MdoubÀ_END_NAMESPACE


80 #ifde‡
__USE_GNU


82 
__MATHDECL
 (,
söcos
,,

83 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

86 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


87 
__BEGIN_NAMESPACE_C99


89 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

91 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

93 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

94 
	g__END_NAMESPACE_C99


99 
_MdoubÀ_BEGIN_NAMESPACE


101 
__MATHCALL
 (
exp
,, (
_MdoubÀ_
 
__x
));

104 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

107 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

110 
__MATHCALL
 (
log
,, (
_MdoubÀ_
 
__x
));

113 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

116 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
))

117 
__©åibuã__
 ((
__n⁄nuŒ__
 (2)));

118 
	g_MdoubÀ_END_NAMESPACE


120 #ifde‡
__USE_GNU


122 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

124 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

127 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


128 
__BEGIN_NAMESPACE_C99


130 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

133 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

136 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

137 
	g__END_NAMESPACE_C99


140 #ifde‡
__USE_ISOC99


141 
__BEGIN_NAMESPACE_C99


143 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

146 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

147 
	g__END_NAMESPACE_C99


153 
_MdoubÀ_BEGIN_NAMESPACE


155 
__MATHCALL
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

158 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

159 
	g_MdoubÀ_END_NAMESPACE


161 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


162 
__BEGIN_NAMESPACE_C99


164 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

165 
	g__END_NAMESPACE_C99


168 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


169 
__BEGIN_NAMESPACE_C99


171 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

172 
	g__END_NAMESPACE_C99


178 
_MdoubÀ_BEGIN_NAMESPACE


180 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

183 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

186 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

189 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

194 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

197 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

198 
	g_MdoubÀ_END_NAMESPACE


200 #ifde‡
__USE_MISC


203 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

206 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

209 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

213 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

216 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


217 
__BEGIN_NAMESPACE_C99


219 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

220 
	g__END_NAMESPACE_C99


223 #ifde‡
__USE_ISOC99


224 
__BEGIN_NAMESPACE_C99


226 
__MATHCALLX
 (
«n
,, (
__c⁄°
 *
__ègb
), (
__c⁄°__
));

227 
	g__END_NAMESPACE_C99


232 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

234 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


236 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

239 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

240 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

241 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

242 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

243 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

244 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

248 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


249 
__BEGIN_NAMESPACE_C99


251 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

252 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

253 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

254 
	g__END_NAMESPACE_C99


257 #ifde‡
__USE_ISOC99


258 
__BEGIN_NAMESPACE_C99


260 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

261 
	g__END_NAMESPACE_C99


264 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


266 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

269 #ifde‡
__USE_MISC


273 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

277 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


278 
__BEGIN_NAMESPACE_C99


281 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

284 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

285 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


286 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

290 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

292 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


294 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

298 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

301 #ifde‡
__USE_ISOC99


303 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

307 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

311 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

315 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

320 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

327 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

328 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

332 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

333 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

337 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

340 
__MATHCALL
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

343 
__MATHCALL
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

347 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

348 
__©åibuã__
 ((
__c⁄°__
));

351 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

352 
__©åibuã__
 ((
__c⁄°__
));

356 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

359 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


360 
	g__END_NAMESPACE_C99


363 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


365 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

19 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


23 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


24 
	#_MATH_H_MATHDEF
 1

	)

26 
	~<bôs/w‹dsize.h
>

28 #i‡
__WORDSIZE
 =64 || (
deföed
 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

31 
	tÊﬂt_t
;

32 
	tdoubÀ_t
;

38 
	tÊﬂt_t
;

40 
	tdoubÀ_t
;

45 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

46 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

50 #i‡
__FP_FAST_FMA


51 
	#FP_FAST_FMA
 1

	)

54 #i‡
__FP_FAST_FMAF


55 
	#FP_FAST_FMAF
 1

	)

58 #i‡
__FP_FAST_FMAL


59 
	#FP_FAST_FMAL
 1

	)

	@/usr/include/bits/mathinline.h

20 #i‚de‡
_MATH_H


24 
	~<bôs/w‹dsize.h
>

26 #i‚de‡
__exã∫_Æways_ölöe


27 
	#__MATH_INLINE
 
__ölöe


	)

29 
	#__MATH_INLINE
 
__exã∫_Æways_ölöe


	)

35 #i‡
__GNUC_PREREQ
 (2, 8Ë&& 
deföed
 
__USE_ISOC99


36 
__BEGIN_NAMESPACE_C99


39 
__MATH_INLINE
 

40 
__NTH
 (
	$__signbôf
 (
__x
))

42 #i‡
__WORDSIZE
 == 32

43 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

44  
__u
.
__i
 < 0;

46 
__m
;

47 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

48  
__m
 & 0x8;

50 
	}
}

51 
__MATH_INLINE
 

52 
__NTH
 (
	$__signbô
 (
__x
))

54 #i‡
__WORDSIZE
 == 32

55 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

56  
__u
.
__i
[1] < 0;

58 
__m
;

59 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

60  
__m
 & 0x80;

62 
	}
}

63 
__MATH_INLINE
 

64 
__NTH
 (
	$__signbôl
 (
__x
))

66 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

67  (
__u
.
__i
[2] & 0x8000) != 0;

68 
	}
}

70 
	g__END_NAMESPACE_C99


74 #i‡(
__GNUC_PREREQ
 (2, 8Ë&& !
deföed
 
__NO_MATH_INLINES
 \

75 && 
deföed
 
	g__OPTIMIZE__
)

77 #ifde‡
__USE_ISOC99


78 
	g__BEGIN_NAMESPACE_C99


81 #i‡
__WORDSIZE
 =64 || 
deföed
 
__SSE_MATH__


82 
__MATH_INLINE
 

83 
__NTH
 (
	$Ãötf
 (
__x
))

85 
__ªs
;

86 
	`__asm
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

87  
__ªs
;

88 
	}
}

90 #i‡
__WORDSIZE
 =64 || 
deföed
 
__SSE2_MATH__


91 
__MATH_INLINE
 

92 
__NTH
 (
	$Ãöt
 (
__x
))

94 
__ªs
;

95 
	`__asm
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

96  
__ªs
;

97 
	}
}

99 #i‡
__WORDSIZE
 == 64

100 
__MATH_INLINE
 

101 
__NTH
 (
	$Œrötf
 (
__x
))

103 
__ªs
;

104 
	`__asm
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

105  
__ªs
;

106 
	}
}

107 
__MATH_INLINE
 

108 
__NTH
 (
	$Œröt
 (
__x
))

110 
__ªs
;

111 
	`__asm
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

112  
__ªs
;

113 
	}
}

116 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0 \

117 && (
	g__WORDSIZE
 =64 || 
deföed
 
__SSE2_MATH__
)

119 
__MATH_INLINE
 

120 
__NTH
 (
	$fmaxf
 (
__x
, 
__y
))

122 
	`__asm
 ("maxs†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

123  
__x
;

124 
	}
}

125 
__MATH_INLINE
 

126 
__NTH
 (
	$fmax
 (
__x
, 
__y
))

128 
	`__asm
 ("maxsd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

129  
__x
;

130 
	}
}

133 
__MATH_INLINE
 

134 
__NTH
 (
	$fmöf
 (
__x
, 
__y
))

136 
	`__asm
 ("mös†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

137  
__x
;

138 
	}
}

139 
__MATH_INLINE
 

140 
__NTH
 (
	$fmö
 (
__x
, 
__y
))

142 
	`__asm
 ("mösd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

143  
__x
;

144 
	}
}

147 
	g__END_NAMESPACE_C99


150 #i‡
deföed
 
__SSE4_1__
 && (
__WORDSIZE
 =64 || deföed 
__SSE2_MATH__
)

151 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


152 
__BEGIN_NAMESPACE_C99


155 
__MATH_INLINE
 

156 
__NTH
 (
	$röt
 (
__x
))

158 
__ªs
;

159 
	`__asm
 ("roundsd $4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

160  
__ªs
;

161 
	}
}

162 
__MATH_INLINE
 

163 
__NTH
 (
	$rötf
 (
__x
))

165 
__ªs
;

166 
	`__asm
 ("rounds†$4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

167  
__ªs
;

168 
	}
}

170 #ifde‡
__USE_ISOC99


172 
__MATH_INLINE
 

173 
__NTH
 (
	$√¨byöt
 (
__x
))

175 
__ªs
;

176 
	`__asm
 ("roundsd $0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

177  
__ªs
;

178 
	}
}

179 
__MATH_INLINE
 

180 
__NTH
 (
	$√¨byötf
 (
__x
))

182 
__ªs
;

183 
	`__asm
 ("rounds†$0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

184  
__ªs
;

185 
	}
}

188 
	g__END_NAMESPACE_C99


191 
__BEGIN_NAMESPACE_STD


193 
__MATH_INLINE
 

194 
__NTH
 (
	$˚û
 (
__x
))

196 
__ªs
;

197 
	`__asm
 ("roundsd $2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

198  
__ªs
;

199 
	}
}

200 
__END_NAMESPACE_STD


202 
__BEGIN_NAMESPACE_C99


203 
__MATH_INLINE
 

204 
__NTH
 (
	$˚ûf
 (
__x
))

206 
__ªs
;

207 
	`__asm
 ("rounds†$2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

208  
__ªs
;

209 
	}
}

210 
__END_NAMESPACE_C99


212 
__BEGIN_NAMESPACE_STD


214 
__MATH_INLINE
 

215 
__NTH
 (
	$Êo‹
 (
__x
))

217 
__ªs
;

218 
	`__asm
 ("roundsd $1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

219  
__ªs
;

220 
	}
}

221 
__END_NAMESPACE_STD


223 
__BEGIN_NAMESPACE_C99


224 
__MATH_INLINE
 

225 
__NTH
 (
	$Êo‹f
 (
__x
))

227 
__ªs
;

228 
	`__asm
 ("rounds†$1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

229  
__ªs
;

230 
	}
}

231 
	g__END_NAMESPACE_C99


	@/usr/include/bits/nan.h

20 #i‚de‡
_MATH_H


27 #i‡
__GNUC_PREREQ
(3,3)

29 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

31 #ñi‡
deföed
 
__GNUC__


33 
	#NAN
 \

34 (
__exãnsi⁄__
 \

35 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

36 { 
__l
: 0x7fc00000UL }).
__d
)

	)

40 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#__«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

45 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


46 
	#__«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

49 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__«n_uni⁄


50 
	g__©åibuã_u£d__
 = { 
__«n_byãs
 };

51 
	#NAN
 (
__«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), 
__s2_Àn
 = __buûtö_°æí (
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`__buûtö_°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__Àn
))

58  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

59 
	}
}

61 #ifde‡
__USE_GNU


62 
__exã∫_Æways_ölöe
 *

63 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

64 
size_t
 
__Àn
))

66  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

67 
	}
}

76 
__exã∫_Æways_ölöe
 *

77 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

80 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

82 
	`__w¨n_mem£t_zîo_Àn
 ();

83  
__de°
;

85  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

86 
	}
}

88 #ifde‡
__USE_BSD


89 
__exã∫_Æways_ölöe
 

90 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__Àn
))

92 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

93 
	}
}

95 
__exã∫_Æways_ölöe
 

96 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

98 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

99 
	}
}

102 
__exã∫_Æways_ölöe
 *

103 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

105  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

106 
	}
}

108 #ifde‡
__USE_GNU


109 
__exã∫_Æways_ölöe
 *

110 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

112  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

113 
	}
}

117 
__exã∫_Æways_ölöe
 *

118 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

119 
size_t
 
__Àn
))

121  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

122 
	}
}

125 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

126 
size_t
 
__de°Àn
Ë
__THROW
;

127 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

128 
__c⁄°
 *
__§c
,

129 
size_t
 
__n
), 
°≤˝y
);

131 
__exã∫_Æways_ölöe
 *

132 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

134 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

135 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

136  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

137  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

138 
	}
}

141 
__exã∫_Æways_ölöe
 *

142 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

144  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

145 
	}
}

148 
__exã∫_Æways_ölöe
 *

149 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

150 
size_t
 
__Àn
))

152  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

153 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/dirent.h

24 #i‚def 
_DIRENT_H


25 
	#_DIRENT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifde‡
__USE_XOPEN


34 #i‚de‡
__öo_t_deföed


35 #i‚de‡
__USE_FILE_OFFSET64


36 
__öo_t
 
	töo_t
;

38 
__öo64_t
 
	töo_t
;

40 
	#__öo_t_deföed


	)

42 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


43 
__öo64_t
 
	töo64_t
;

44 
	#__öo64_t_deföed


	)

63 
	~<bôs/dúít.h
>

65 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


66 
	#d_öo
 
d_fûío


	)

83 #ifde‡
_DIRENT_HAVE_D_NAMLEN


84 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

85 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

87 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

88 #ifde‡
_DIRENT_HAVE_D_RECLEN


89 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

91 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

92 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

97 #ifde‡
__USE_BSD


101 
	mDT_UNKNOWN
 = 0,

102 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

103 
	mDT_FIFO
 = 1,

104 
	#DT_FIFO
 
DT_FIFO


	)

105 
	mDT_CHR
 = 2,

106 
	#DT_CHR
 
DT_CHR


	)

107 
	mDT_DIR
 = 4,

108 
	#DT_DIR
 
DT_DIR


	)

109 
	mDT_BLK
 = 6,

110 
	#DT_BLK
 
DT_BLK


	)

111 
	mDT_REG
 = 8,

112 
	#DT_REG
 
DT_REG


	)

113 
	mDT_LNK
 = 10,

114 
	#DT_LNK
 
DT_LNK


	)

115 
	mDT_SOCK
 = 12,

116 
	#DT_SOCK
 
DT_SOCK


	)

117 
	mDT_WHT
 = 14

118 
	#DT_WHT
 
DT_WHT


	)

122 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

123 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

129 
__dú°ªam
 
	tDIR
;

136 
DIR
 *
	$›ídú
 (
__c⁄°
 *
__«me
Ë
	`__n⁄nuŒ
 ((1));

138 #ifde‡
__USE_XOPEN2K8


143 
DIR
 *
	`fd›ídú
 (
__fd
);

151 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

163 #i‚de‡
__USE_FILE_OFFSET64


164 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

166 #ifde‡
__REDIRECT


167 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

168 
	`__n⁄nuŒ
 ((1));

170 
	#ªaddú
 
ªaddú64


	)

174 #ifde‡
__USE_LARGEFILE64


175 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


184 #i‚de‡
__USE_FILE_OFFSET64


185 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

186 
dúít
 *
__ª°ri˘
 
__íåy
,

187 
dúít
 **
__ª°ri˘
 
__ªsu…
)

188 
	`__n⁄nuŒ
 ((1, 2, 3));

190 #ifde‡
__REDIRECT


191 
	`__REDIRECT
 (
ªaddú_r
,

192 (
DIR
 *
__ª°ri˘
 
__dúp
,

193 
dúít
 *
__ª°ri˘
 
__íåy
,

194 
dúít
 **
__ª°ri˘
 
__ªsu…
),

195 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

197 
	#ªaddú_r
 
ªaddú64_r


	)

201 #ifde‡
__USE_LARGEFILE64


202 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

203 
dúít64
 *
__ª°ri˘
 
__íåy
,

204 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

205 
	`__n⁄nuŒ
 ((1, 2, 3));

210 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

212 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


213 
	~<bôs/ty≥s.h
>

216 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


225 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

227 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


228 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

231 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


232 #i‚de‡
MAXNAMLEN


234 
	~<bôs/posix1_lim.h
>

237 #ifde‡
NAME_MAX


238 
	#MAXNAMLEN
 
NAME_MAX


	)

240 
	#MAXNAMLEN
 255

	)

245 
	#__√ed_size_t


	)

246 
	~<°ddef.h
>

255 #i‚de‡
__USE_FILE_OFFSET64


256 
	`sˇndú
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

257 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

258 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

259 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

260 
__c⁄°
 
dúít
 **))

261 
	`__n⁄nuŒ
 ((1, 2));

263 #ifde‡
__REDIRECT


264 
	`__REDIRECT
 (
sˇndú
,

265 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

266 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

267 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

268 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

269 
__c⁄°
 
dúít
 **)),

270 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

272 
	#sˇndú
 
sˇndú64


	)

276 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


279 
	`sˇndú64
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

280 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

281 (*
__£À˘‹
Ë(
__c⁄°
 
dúít64
 *),

282 (*
__cmp
Ë(
__c⁄°
 
dúít64
 **,

283 
__c⁄°
 
dúít64
 **))

284 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__USE_GNU


293 #i‚de‡
__USE_FILE_OFFSET64


294 
	`sˇndú©
 (
__dfd
, 
__c⁄°
 *
__ª°ri˘
 
__dú
,

295 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

296 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

297 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

298 
__c⁄°
 
dúít
 **))

299 
	`__n⁄nuŒ
 ((2, 3));

301 #ifde‡
__REDIRECT


302 
	`__REDIRECT
 (
sˇndú©
,

303 (
__dfd
, 
__c⁄°
 *
__ª°ri˘
 
__dú
,

304 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

305 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

306 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

307 
__c⁄°
 
dúít
 **)),

308 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

310 
	#sˇndú©
 
sˇndú©64


	)

316 
	`sˇndú©64
 (
__dfd
, 
__c⁄°
 *
__ª°ri˘
 
__dú
,

317 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

318 (*
__£À˘‹
Ë(
__c⁄°
 
dúít64
 *),

319 (*
__cmp
Ë(
__c⁄°
 
dúít64
 **,

320 
__c⁄°
 
dúít64
 **))

321 
	`__n⁄nuŒ
 ((2, 3));

325 #i‚de‡
__USE_FILE_OFFSET64


326 
	$Æphas‹t
 (
__c⁄°
 
dúít
 **
__e1
,

327 
__c⁄°
 
dúít
 **
__e2
)

328 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

330 #ifde‡
__REDIRECT


331 
	`__REDIRECT_NTH
 (
Æphas‹t
,

332 (
__c⁄°
 
dúít
 **
__e1
,

333 
__c⁄°
 
dúít
 **
__e2
),

334 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

336 
	#Æphas‹t
 
Æphas‹t64


	)

340 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


341 
	$Æphas‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

342 
__c⁄°
 
dúít64
 **
__e2
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


353 #i‚de‡
__USE_FILE_OFFSET64


354 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

355 
size_t
 
__nbyãs
,

356 
__off_t
 *
__ª°ri˘
 
__ba£p
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

359 #ifde‡
__REDIRECT


360 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

361 (
__fd
, *
__ª°ri˘
 
__buf
,

362 
size_t
 
__nbyãs
,

363 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

364 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

366 
	#gëdúíåõs
 
gëdúíåõs64


	)

370 #ifde‡
__USE_LARGEFILE64


371 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

372 
size_t
 
__nbyãs
,

373 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

374 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

378 #ifde‡
__USE_GNU


380 #i‚de‡
__USE_FILE_OFFSET64


381 
	$vîsi⁄s‹t
 (
__c⁄°
 
dúít
 **
__e1
,

382 
__c⁄°
 
dúít
 **
__e2
)

383 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

385 #ifde‡
__REDIRECT


386 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

387 (
__c⁄°
 
dúít
 **
__e1
,

388 
__c⁄°
 
dúít
 **
__e2
),

389 
vîsi⁄s‹t64
)

390 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

392 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

396 #ifde‡
__USE_LARGEFILE64


397 
	$vîsi⁄s‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

398 
__c⁄°
 
dúít64
 **
__e2
)

399 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

403 
__END_DECLS


	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_POSIX


101 #unde‡
__USE_POSIX2


102 #unde‡
__USE_POSIX199309


103 #unde‡
__USE_POSIX199506


104 #unde‡
__USE_XOPEN


105 #unde‡
__USE_XOPEN_EXTENDED


106 #unde‡
__USE_UNIX98


107 #unde‡
__USE_XOPEN2K


108 #unde‡
__USE_XOPEN2KXSI


109 #unde‡
__USE_XOPEN2K8


110 #unde‡
__USE_XOPEN2K8XSI


111 #unde‡
__USE_LARGEFILE


112 #unde‡
__USE_LARGEFILE64


113 #unde‡
__USE_FILE_OFFSET64


114 #unde‡
__USE_BSD


115 #unde‡
__USE_SVID


116 #unde‡
__USE_MISC


117 #unde‡
__USE_ATFILE


118 #unde‡
__USE_GNU


119 #unde‡
__USE_REENTRANT


120 #unde‡
__USE_FORTIFY_LEVEL


121 #unde‡
__FAVOR_BSD


122 #unde‡
__KERNEL_STRICT_NAMES


126 #i‚de‡
_LOOSE_KERNEL_NAMES


127 
	#__KERNEL_STRICT_NAMES


	)

131 
	#__USE_ANSI
 1

	)

140 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


141 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

142 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

144 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

149 #i‡
deföed
 
_BSD_SOURCE
 && \

150 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

151 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

152 
	#__FAVOR_BSD
 1

	)

156 #ifde‡
_GNU_SOURCE


157 #unde‡
_ISOC95_SOURCE


158 
	#_ISOC95_SOURCE
 1

	)

159 #unde‡
_ISOC99_SOURCE


160 
	#_ISOC99_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_BSD_SOURCE


172 
	#_BSD_SOURCE
 1

	)

173 #unde‡
_SVID_SOURCE


174 
	#_SVID_SOURCE
 1

	)

175 #unde‡
_ATFILE_SOURCE


176 
	#_ATFILE_SOURCE
 1

	)

181 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

182 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

183 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

184 
	#_BSD_SOURCE
 1

	)

185 
	#_SVID_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

194 
	#__USE_ISOC99
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

200 
	#__USE_ISOC95
 1

	)

205 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

206 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

207 
	#_POSIX_SOURCE
 1

	)

208 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

209 
	#_POSIX_C_SOURCE
 2

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

211 
	#_POSIX_C_SOURCE
 199506L

	)

212 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

213 
	#_POSIX_C_SOURCE
 200112L

	)

215 
	#_POSIX_C_SOURCE
 200809L

	)

217 
	#__USE_POSIX_IMPLICITLY
 1

	)

220 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


221 
	#__USE_POSIX
 1

	)

224 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


225 
	#__USE_POSIX2
 1

	)

228 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

229 
	#__USE_POSIX199309
 1

	)

232 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

233 
	#__USE_POSIX199506
 1

	)

236 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC95


239 
	#__USE_ISOC95
 1

	)

240 #unde‡
__USE_ISOC99


241 
	#__USE_ISOC99
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

245 
	#__USE_XOPEN2K8
 1

	)

246 #unde‡
_ATFILE_SOURCE


247 
	#_ATFILE_SOURCE
 1

	)

250 #ifdef 
_XOPEN_SOURCE


251 
	#__USE_XOPEN
 1

	)

252 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

253 
	#__USE_XOPEN_EXTENDED
 1

	)

254 
	#__USE_UNIX98
 1

	)

255 #unde‡
_LARGEFILE_SOURCE


256 
	#_LARGEFILE_SOURCE
 1

	)

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

258 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

259 
	#__USE_XOPEN2K8
 1

	)

260 
	#__USE_XOPEN2K8XSI
 1

	)

262 
	#__USE_XOPEN2K
 1

	)

263 
	#__USE_XOPEN2KXSI
 1

	)

264 #unde‡
__USE_ISOC95


265 
	#__USE_ISOC95
 1

	)

266 #unde‡
__USE_ISOC99


267 
	#__USE_ISOC99
 1

	)

270 #ifde‡
_XOPEN_SOURCE_EXTENDED


271 
	#__USE_XOPEN_EXTENDED
 1

	)

276 #ifde‡
_LARGEFILE_SOURCE


277 
	#__USE_LARGEFILE
 1

	)

280 #ifde‡
_LARGEFILE64_SOURCE


281 
	#__USE_LARGEFILE64
 1

	)

284 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

285 
	#__USE_FILE_OFFSET64
 1

	)

288 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


289 
	#__USE_MISC
 1

	)

292 #ifdef 
_BSD_SOURCE


293 
	#__USE_BSD
 1

	)

296 #ifdef 
_SVID_SOURCE


297 
	#__USE_SVID
 1

	)

300 #ifdef 
_ATFILE_SOURCE


301 
	#__USE_ATFILE
 1

	)

304 #ifdef 
_GNU_SOURCE


305 
	#__USE_GNU
 1

	)

308 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


309 
	#__USE_REENTRANT
 1

	)

312 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

313 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

314 #i‡
_FORTIFY_SOURCE
 > 1

315 
	#__USE_FORTIFY_LEVEL
 2

	)

317 
	#__USE_FORTIFY_LEVEL
 1

	)

320 
	#__USE_FORTIFY_LEVEL
 0

	)

324 
	~<bôs/¥edefs.h
>

327 
	#__STDC_ISO_10646__
 200009L

	)

335 #unde‡
__GNU_LIBRARY__


336 
	#__GNU_LIBRARY__
 6

	)

340 
	#__GLIBC__
 2

	)

341 
	#__GLIBC_MINOR__
 15

	)

343 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

344 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

347 #i‡
deföed
 
__GNUC__
 \

348 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

349 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

350 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

351 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

355 #i‚de‡
__ASSEMBLER__


356 #i‚de‡
_SYS_CDEFS_H


357 
	~<sys/cdefs.h
>

362 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


363 
	#__USE_LARGEFILE
 1

	)

364 
	#__USE_LARGEFILE64
 1

	)

370 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

371 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

372 && 
deföed
 
	g__exã∫_ölöe


373 
	#__USE_EXTERN_INLINES
 1

	)

378 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

379 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

380 && 
deföed
 
	g__exã∫_ölöe


381 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

389 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

148 
	#_IO_FLAGS2_NOCLOSE
 32

	)

149 
	#_IO_FLAGS2_CLOEXEC
 64

	)

153 
	#_IO_SKIPWS
 01

	)

154 
	#_IO_LEFT
 02

	)

155 
	#_IO_RIGHT
 04

	)

156 
	#_IO_INTERNAL
 010

	)

157 
	#_IO_DEC
 020

	)

158 
	#_IO_OCT
 040

	)

159 
	#_IO_HEX
 0100

	)

160 
	#_IO_SHOWBASE
 0200

	)

161 
	#_IO_SHOWPOINT
 0400

	)

162 
	#_IO_UPPERCASE
 01000

	)

163 
	#_IO_SHOWPOS
 02000

	)

164 
	#_IO_SCIENTIFIC
 04000

	)

165 
	#_IO_FIXED
 010000

	)

166 
	#_IO_UNITBUF
 020000

	)

167 
	#_IO_STDIO
 040000

	)

168 
	#_IO_DONT_CLOSE
 0100000

	)

169 
	#_IO_BOOLALPHA
 0200000

	)

172 
_IO_jump_t
; 
	g_IO_FILE
;

175 #ifde‡
_IO_MTSAFE_IO


176 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

177 
	~<bôs/°dio-lock.h
>

182 
	t_IO_lock_t
;

188 
	s_IO_m¨kî
 {

189 
_IO_m¨kî
 *
	m_√xt
;

190 
_IO_FILE
 *
	m_sbuf
;

194 
	m_pos
;

196 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

197 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

198 
	mpublic
:

199 
°ªamm¨kî
(
°ªambuf
 *
sb
);

200 ~
°ªamm¨kî
();

201 
ßvög
(Ë{  
	m_•os
 == -2; }

202 
dñè
(
°ªamm¨kî
&);

203 
dñè
();

208 
	e__codecvt_ªsu…


210 
	m__codecvt_ok
,

211 
	m__codecvt_∑πül
,

212 
	m__codecvt_îr‹
,

213 
	m__codecvt_noc⁄v


216 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


219 
	s_IO_codecvt


221 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

222 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

223 
	m__mb°©e_t
 *,

224 c⁄° 
	mwch¨_t
 *,

225 c⁄° 
	mwch¨_t
 *,

226 c⁄° 
	mwch¨_t
 **, *,

228 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

229 
	m__mb°©e_t
 *, *,

231 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

232 
	m__mb°©e_t
 *,

234 c⁄° **, 
	mwch¨_t
 *,

235 
	mwch¨_t
 *, wchar_t **);

236 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

237 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

238 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

239 c⁄° *, c⁄° *, 
	m_IO_size_t
);

240 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

242 
_IO_ic⁄v_t
 
	m__cd_ö
;

243 
_IO_ic⁄v_t
 
	m__cd_out
;

247 
	s_IO_wide_d©a


249 
wch¨_t
 *
	m_IO_ªad_±r
;

250 
wch¨_t
 *
	m_IO_ªad_íd
;

251 
wch¨_t
 *
	m_IO_ªad_ba£
;

252 
wch¨_t
 *
	m_IO_wrôe_ba£
;

253 
wch¨_t
 *
	m_IO_wrôe_±r
;

254 
wch¨_t
 *
	m_IO_wrôe_íd
;

255 
wch¨_t
 *
	m_IO_buf_ba£
;

256 
wch¨_t
 *
	m_IO_buf_íd
;

258 
wch¨_t
 *
	m_IO_ßve_ba£
;

259 
wch¨_t
 *
	m_IO_backup_ba£
;

261 
wch¨_t
 *
	m_IO_ßve_íd
;

263 
__mb°©e_t
 
	m_IO_°©e
;

264 
__mb°©e_t
 
	m_IO_œ°_°©e
;

265 
_IO_codecvt
 
	m_codecvt
;

267 
wch¨_t
 
	m_sh‹tbuf
[1];

269 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

273 
	s_IO_FILE
 {

274 
	m_Êags
;

275 
	#_IO_fûe_Êags
 
_Êags


	)

279 * 
	m_IO_ªad_±r
;

280 * 
	m_IO_ªad_íd
;

281 * 
	m_IO_ªad_ba£
;

282 * 
	m_IO_wrôe_ba£
;

283 * 
	m_IO_wrôe_±r
;

284 * 
	m_IO_wrôe_íd
;

285 * 
	m_IO_buf_ba£
;

286 * 
	m_IO_buf_íd
;

288 *
	m_IO_ßve_ba£
;

289 *
	m_IO_backup_ba£
;

290 *
	m_IO_ßve_íd
;

292 
_IO_m¨kî
 *
	m_m¨kîs
;

294 
_IO_FILE
 *
	m_chaö
;

296 
	m_fûío
;

298 
	m_blksize
;

300 
	m_Êags2
;

302 
_IO_off_t
 
	m_ﬁd_off£t
;

304 
	#__HAVE_COLUMN


	)

306 
	m_cur_cﬁumn
;

307 sig√d 
	m_vèbÀ_off£t
;

308 
	m_sh‹tbuf
[1];

312 
_IO_lock_t
 *
	m_lock
;

313 #ifde‡
_IO_USE_OLD_IO_FILE


316 
	s_IO_FILE_com∂ëe


318 
_IO_FILE
 
	m_fûe
;

320 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

321 
_IO_off64_t
 
	m_off£t
;

322 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


324 
_IO_codecvt
 *
	m_codecvt
;

325 
_IO_wide_d©a
 *
	m_wide_d©a
;

326 
_IO_FILE
 *
	m_‰ìªs_li°
;

327 *
	m_‰ìªs_buf
;

328 
size_t
 
	m_‰ìªs_size
;

330 *
	m__∑d1
;

331 *
	m__∑d2
;

332 *
	m__∑d3
;

333 *
	m__∑d4
;

334 
size_t
 
	m__∑d5
;

336 
	m_mode
;

338 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

342 #i‚de‡
__˝lu•lus


343 
_IO_FILE
 
	t_IO_FILE
;

346 
	g_IO_FILE_∂us
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

349 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

350 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

351 #i‚de‡
_LIBC


352 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

353 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

354 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

356 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

357 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

358 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

366 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

374 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

375 
	tsize_t
 
	t__n
);

383 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

386 
	t__io_˛o£_‚
 (*
	t__cookõ
);

389 #ifde‡
_GNU_SOURCE


391 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

392 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

393 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

394 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

399 
__io_ªad_‚
 *
	mªad
;

400 
__io_wrôe_‚
 *
	mwrôe
;

401 
__io_£ek_‚
 *
	m£ek
;

402 
__io_˛o£_‚
 *
	m˛o£
;

403 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

404 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

406 
	g_IO_cookõ_fûe
;

409 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

410 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

414 #ifde‡
__˝lu•lus


418 
__undîÊow
 (
_IO_FILE
 *);

419 
__uÊow
 (
_IO_FILE
 *);

420 
__ovîÊow
 (
_IO_FILE
 *, );

421 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


422 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

423 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

424 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

427 #i‡ 
__GNUC__
 >= 3

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

430 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

433 
	#_IO_gëc_u∆ocked
(
_Â
) \

434 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

435 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

436 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

437 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

438 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

439 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

440 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

441 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

442 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

443 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

445 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


446 
	#_IO_gëwc_u∆ocked
(
_Â
) \

447 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

448 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

449 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

450 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

451 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

452 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

453 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

454 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

455 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

456 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

459 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

460 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

462 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

463 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

464 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

467 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

470 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

471 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

473 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

474 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

477 #ifde‡
_IO_MTSAFE_IO


478 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

479 
	#_IO_Êockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

481 
	#_IO_fu∆ockfûe
(
_Â
) \

482 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

484 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

485 
	#_IO_Êockfûe
(
_Â
Ë

	)

486 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

487 
	#_IO_·rylockfûe
(
_Â
Ë

	)

488 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

489 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

492 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

493 
_IO_va_li°
, *
__ª°ri˘
);

494 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

495 
_IO_va_li°
);

496 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

497 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

499 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

500 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

502 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

504 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


505 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

506 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

507 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

508 #i‡
__GNUC__
 >= 2

511 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


512 
	~<shlib-com∑t.h
>

513 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

514 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

515 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

516 c⁄° 
_IO_°dö_u£d
;

517 
wók_exã∫
 (
_IO_°dö_u£d
);

520 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


521 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

525 
	#_IO_fwide
(
__Â
, 
__mode
) \

526 ({ 
__ªsu…
 = (
__mode
); \

527 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

529 i‡((
__Â
)->
_mode
 == 0) \

531 (
__Â
)->
_mode
 = -1; \

532 
__ªsu…
 = (
__Â
)->
_mode
; \

534 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

535 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

537 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

538 
__ªsu…
; })

	)

541 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

542 
_IO_va_li°
, *
__ª°ri˘
);

543 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

544 
_IO_va_li°
);

545 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

546 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

549 #ifde‡
__LDBL_COMPAT


550 
	~<bôs/libio-ldbl.h
>

553 #ifde‡
__˝lu•lus


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/sys/param.h

20 #i‚de‡
_SYS_PARAM_H


21 
	#_SYS_PARAM_H
 1

	)

23 #i‚de‡
ARG_MAX


24 
	#__undef_ARG_MAX


	)

27 
	~<limôs.h
>

28 
	~<löux/limôs.h
>

29 
	~<löux/∑øm.h
>

32 #ifde‡
__undef_ARG_MAX


33 #unde‡
ARG_MAX


34 #unde‡
__undef_ARG_MAX


39 
	#NBBY
 
CHAR_BIT


	)

40 #i‚def 
NGROUPS


41 
	#NGROUPS
 
NGROUPS_MAX


	)

43 
	#MAXSYMLINKS
 20

	)

44 
	#CANBSIZ
 
MAX_CANON


	)

45 
	#MAXPATHLEN
 
PATH_MAX


	)

49 
	#NOFILE
 256

	)

50 
	#NCARGS
 131072

	)

53 
	~<sys/ty≥s.h
>

56 
	#£tbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] |1<<((i)%NBBY))

	)

57 
	#˛rbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] &~(1<<((i)%NBBY)))

	)

58 
	#is£t
(
a
,
i
Ë(◊)[(i)/
NBBY
] & (1<<((i)%NBBY)))

	)

59 
	#is˛r
(
a
,
i
Ë((◊)[(i)/
NBBY
] & (1<<((i)%NBBY))Ë=0)

	)

62 #i‚de‡
howm™y


63 
	#howm™y
(
x
, 
y
Ë(((xË+ ((yË- 1)Ë/ (y))

	)

65 #ifde‡
__GNUC__


66 
	#roundup
(
x
, 
y
Ë(
	`__buûtö_c⁄°™t_p
 (yË&& 
	`powîof2
 (y) \

67 ? (((
x
Ë+ (
y
) - 1) & ~((y) - 1)) \

68 : ((((
x
Ë+ ((
y
Ë- 1)Ë/ (y)Ë* (y)))

	)

70 
	#roundup
(
x
, 
y
Ë((((xË+ ((yË- 1)Ë/ (y)Ë* (y))

	)

72 
	#powîof2
(
x
Ë((((xË- 1Ë& (x)Ë=0)

	)

75 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

76 
	#MAX
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

80 
	#DEV_BSIZE
 512

	)

	@/usr/include/sys/types.h

23 #i‚def 
_SYS_TYPES_H


24 
	#_SYS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifdef 
__USE_BSD


33 #i‚de‡
__u_ch¨_deföed


34 
__u_ch¨
 
	tu_ch¨
;

35 
__u_sh‹t
 
	tu_sh‹t
;

36 
__u_öt
 
	tu_öt
;

37 
__u_l⁄g
 
	tu_l⁄g
;

38 
__quad_t
 
	tquad_t
;

39 
__u_quad_t
 
	tu_quad_t
;

40 
__fsid_t
 
	tfsid_t
;

41 
	#__u_ch¨_deföed


	)

45 
__loff_t
 
	tloff_t
;

47 #i‚de‡
__öo_t_deföed


48 #i‚de‡
__USE_FILE_OFFSET64


49 
__öo_t
 
	töo_t
;

51 
__öo64_t
 
	töo_t
;

53 
	#__öo_t_deföed


	)

55 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


56 
__öo64_t
 
	töo64_t
;

57 
	#__öo64_t_deföed


	)

60 #i‚de‡
__dev_t_deföed


61 
__dev_t
 
	tdev_t
;

62 
	#__dev_t_deföed


	)

65 #i‚de‡
__gid_t_deföed


66 
__gid_t
 
	tgid_t
;

67 
	#__gid_t_deföed


	)

70 #i‚de‡
__mode_t_deföed


71 
__mode_t
 
	tmode_t
;

72 
	#__mode_t_deföed


	)

75 #i‚de‡
__∆ök_t_deföed


76 
__∆ök_t
 
	t∆ök_t
;

77 
	#__∆ök_t_deföed


	)

80 #i‚de‡
__uid_t_deföed


81 
__uid_t
 
	tuid_t
;

82 
	#__uid_t_deföed


	)

85 #i‚de‡
__off_t_deföed


86 #i‚de‡
__USE_FILE_OFFSET64


87 
__off_t
 
	toff_t
;

89 
__off64_t
 
	toff_t
;

91 
	#__off_t_deföed


	)

93 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


94 
__off64_t
 
	toff64_t
;

95 
	#__off64_t_deföed


	)

98 #i‚de‡
__pid_t_deföed


99 
__pid_t
 
	tpid_t
;

100 
	#__pid_t_deföed


	)

103 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

104 && !
deföed
 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

228 && !
deföed
 
__blksize_t_deföed


229 
__blksize_t
 
	tblksize_t
;

230 
	#__blksize_t_deföed


	)

234 #i‚de‡
__USE_FILE_OFFSET64


235 #i‚de‡
__blk˙t_t_deföed


236 
__blk˙t_t
 
	tblk˙t_t
;

237 
	#__blk˙t_t_deföed


	)

239 #i‚de‡
__fsblk˙t_t_deföed


240 
__fsblk˙t_t
 
	tfsblk˙t_t
;

241 
	#__fsblk˙t_t_deföed


	)

243 #i‚de‡
__fsfû˙t_t_deföed


244 
__fsfû˙t_t
 
	tfsfû˙t_t
;

245 
	#__fsfû˙t_t_deföed


	)

248 #i‚de‡
__blk˙t_t_deföed


249 
__blk˙t64_t
 
	tblk˙t_t
;

250 
	#__blk˙t_t_deföed


	)

252 #i‚de‡
__fsblk˙t_t_deföed


253 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

254 
	#__fsblk˙t_t_deföed


	)

256 #i‚de‡
__fsfû˙t_t_deföed


257 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

258 
	#__fsfû˙t_t_deföed


	)

262 #ifde‡
__USE_LARGEFILE64


263 
__blk˙t64_t
 
	tblk˙t64_t
;

264 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

265 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

270 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


271 
	~<bôs/±hªadty≥s.h
>

274 
	g__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

315 #ifde‡
__USE_GNU


316 
	#SEEK_DATA
 3

	)

317 
	#SEEK_HOLE
 4

	)

321 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


323 
	#L_SET
 
SEEK_SET


	)

324 
	#L_INCR
 
SEEK_CUR


	)

325 
	#L_XTND
 
SEEK_END


	)

334 #i‚de‡
__USE_FILE_OFFSET64


335 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

337 #ifde‡
__REDIRECT_NTH


338 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

339 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

340 
l£ek64
);

342 
	#l£ek
 
l£ek64


	)

345 #ifde‡
__USE_LARGEFILE64


346 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

347 
__THROW
;

354 
	`˛o£
 (
__fd
);

361 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

367 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

369 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


370 #i‚de‡
__USE_FILE_OFFSET64


377 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

378 
__off_t
 
__off£t
Ë
__wur
;

385 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

386 
__off_t
 
__off£t
Ë
__wur
;

388 #ifde‡
__REDIRECT


389 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

390 
__off64_t
 
__off£t
),

391 
¥ód64
Ë
__wur
;

392 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

393 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

394 
pwrôe64
Ë
__wur
;

396 
	#¥ód
 
¥ód64


	)

397 
	#pwrôe
 
pwrôe64


	)

401 #ifde‡
__USE_LARGEFILE64


405 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

406 
__off64_t
 
__off£t
Ë
__wur
;

409 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

410 
__off64_t
 
__off£t
Ë
__wur
;

418 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

420 #ifde‡
__USE_GNU


423 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

433 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

445 
	`¶ìp
 (
__£c⁄ds
);

447 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

448 || 
deföed
 
__USE_BSD


453 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

454 
__THROW
;

461 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

470 
	`∑u£
 ();

474 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

475 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

477 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


479 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

484 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

485 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

489 #ifde‡
__USE_ATFILE


492 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

493 
__gid_t
 
__group
, 
__Êag
)

494 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

498 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


502 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

512 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

514 #ifdef 
__USE_GNU


518 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

521 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

522 || 
deföed
 
__USE_BSD


526 *
	$gëwd
 (*
__buf
)

527 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

532 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

535 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

537 #ifde‡
__USE_GNU


540 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

544 **
__ívú⁄
;

545 #ifde‡
__USE_GNU


546 **
ívú⁄
;

552 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

553 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

555 #ifde‡
__USE_XOPEN2K8


558 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

559 
__THROW
 
	`__n⁄nuŒ
 ((2));

564 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

575 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

580 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

585 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

586 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

588 #ifde‡
__USE_GNU


591 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

592 *
__c⁄°
 
__ívp
[])

593 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

597 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


599 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

604 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

610 
	~<bôs/c⁄‚ame.h
>

613 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

614 
__THROW
 
	`__n⁄nuŒ
 ((1));

617 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

620 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

622 #ifdef 
__USE_POSIX2


624 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

629 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

632 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

636 #i‚de‡
__FAVOR_BSD


637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

639 #ifde‡
__REDIRECT_NTH


640 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

642 
	#gëpgΩ
 
__gëpgid


	)

647 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


649 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

656 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

658 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


669 #i‚de‡
__FAVOR_BSD


673 
	$£çgΩ
 (Ë
__THROW
;

678 #ifde‡
__REDIRECT_NTH


679 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

681 
	#£çgΩ
 
£çgid


	)

690 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

692 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


694 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

698 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

701 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

704 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

707 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

712 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

714 #ifdef 
__USE_GNU


716 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

723 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


728 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

731 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


733 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

740 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

742 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


745 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

748 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


750 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

753 #ifde‡
__USE_GNU


756 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

757 
__THROW
;

761 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

762 
__THROW
;

766 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

767 
__THROW
;

771 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

772 
__THROW
;

779 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

781 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

782 || 
deföed
 
__USE_BSD


787 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

793 *
	$ây«me
 (
__fd
Ë
__THROW
;

797 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

802 
	$ißây
 (
__fd
Ë
__THROW
;

804 #i‡
deföed
 
__USE_BSD
 \

805 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

808 
	$ây¶Ÿ
 (Ë
__THROW
;

813 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

816 #ifde‡
__USE_ATFILE


819 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

820 
__c⁄°
 *
__to
, 
__Êags
)

821 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

824 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


826 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

827 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

832 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

833 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

834 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

837 #ifde‡
__USE_ATFILE


839 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

840 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

843 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

844 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

845 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

849 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_ATFILE


853 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

854 
__THROW
 
	`__n⁄nuŒ
 ((2));

858 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

862 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

865 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

872 *
	`gëlogö
 ();

873 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


880 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

883 #ifdef 
__USE_BSD


885 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

889 #ifdef 
__USE_POSIX2


893 
	#__√ed_gë›t


	)

894 
	~<gë›t.h
>

898 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


902 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

906 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

909 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

910 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

914 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

920 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

922 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

929 
	$vh™gup
 (Ë
__THROW
;

932 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

940 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

941 
size_t
 
__off£t
, 
__sˇÀ
)

942 
__THROW
 
	`__n⁄nuŒ
 ((1));

948 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

952 *
	$gëu£rshñl
 (Ë
__THROW
;

953 
	$ídu£rshñl
 (Ë
__THROW
;

954 
	$£tu£rshñl
 (Ë
__THROW
;

960 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

964 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

967 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

971 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

975 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


980 
	`fsync
 (
__fd
);

984 #ifde‡
__USE_GNU


987 
	$syncfs
 (
__fd
Ë
__THROW
;

991 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


994 
	`gëho°id
 ();

997 
	$sync
 (Ë
__THROW
;

1000 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


1003 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

1008 
	$gëdèbÀsize
 (Ë
__THROW
;

1014 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1017 #i‚de‡
__USE_FILE_OFFSET64


1018 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
åunˇã
,

1023 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1024 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1026 
	#åunˇã
 
åunˇã64


	)

1029 #ifde‡
__USE_LARGEFILE64


1030 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1031 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1036 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1039 #i‚de‡
__USE_FILE_OFFSET64


1040 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1042 #ifde‡
__REDIRECT_NTH


1043 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1044 
·runˇã64
Ë
__wur
;

1046 
	#·runˇã
 
·runˇã64


	)

1049 #ifde‡
__USE_LARGEFILE64


1050 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1056 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1057 || 
deföed
 
__USE_MISC


1061 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1067 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1071 #ifde‡
__USE_MISC


1082 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1087 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1099 
	#F_ULOCK
 0

	)

1100 
	#F_LOCK
 1

	)

1101 
	#F_TLOCK
 2

	)

1102 
	#F_TEST
 3

	)

1104 #i‚de‡
__USE_FILE_OFFSET64


1105 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1107 #ifde‡
__REDIRECT


1108 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1109 
lockf64
Ë
__wur
;

1111 
	#lockf
 
lockf64


	)

1114 #ifde‡
__USE_LARGEFILE64


1115 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1120 #ifde‡
__USE_GNU


1125 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1126 (
__exãnsi⁄__
 \

1127 ({ 
__ªsu…
; \

1128 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1129 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1130 
__ªsu…
; 
	}
}))

	)

1133 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1136 
fd©async
 (
__fûdes
);

1142 #ifdef 
__USE_XOPEN


1144 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1145 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1149 
	$í¸y±
 (*
__libc_block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1156 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1157 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1163 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


1165 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1170 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1171 
	~<bôs/uni°d.h
>

1174 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS
,

502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

504 
	m_SC_V7_ILP32_OFF32
,

505 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

506 
	m_SC_V7_ILP32_OFFBIG
,

507 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

508 
	m_SC_V7_LP64_OFF64
,

509 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

510 
	m_SC_V7_LPBIG_OFFBIG
,

511 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

513 
	m_SC_SS_REPL_MAX
,

514 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

516 
	m_SC_TRACE_EVENT_NAME_MAX
,

517 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

518 
	m_SC_TRACE_NAME_MAX
,

519 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

520 
	m_SC_TRACE_SYS_MAX
,

521 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

522 
	m_SC_TRACE_USER_EVENT_MAX
,

523 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

525 
	m_SC_XOPEN_STREAMS
,

526 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

528 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

529 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

530 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


531 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

537 
	m_CS_PATH
,

538 
	#_CS_PATH
 
_CS_PATH


	)

540 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

541 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

544 
	m_CS_GNU_LIBC_VERSION
,

545 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

546 
	m_CS_GNU_LIBPTHREAD_VERSION
,

547 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

549 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

550 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

553 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

554 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

557 
	m_CS_LFS_CFLAGS
 = 1000,

558 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

559 
	m_CS_LFS_LDFLAGS
,

560 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

561 
	m_CS_LFS_LIBS
,

562 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

563 
	m_CS_LFS_LINTFLAGS
,

564 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

565 
	m_CS_LFS64_CFLAGS
,

566 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

567 
	m_CS_LFS64_LDFLAGS
,

568 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

569 
	m_CS_LFS64_LIBS
,

570 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

571 
	m_CS_LFS64_LINTFLAGS
,

572 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

575 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

577 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

579 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

580 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

581 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

588 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

589 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

593 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

594 
	m_CS_XBS5_LP64_OFF64_LIBS
,

595 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

596 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

597 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

604 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

605 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

613 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

621 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

622 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

629 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

630 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

637 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

638 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

646 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

654 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

655 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

662 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

663 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

670 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

671 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

673 
	m_CS_V6_ENV
,

674 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

675 
	m_CS_V7_ENV


676 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/dirent.h

19 #i‚de‡
_DIRENT_H


23 
	sdúít


25 #i‚de‡
__USE_FILE_OFFSET64


26 
__öo_t
 
	md_öo
;

27 
__off_t
 
	md_off
;

29 
__öo64_t
 
	md_öo
;

30 
__off64_t
 
	md_off
;

32 
	md_ª˛í
;

33 
	md_ty≥
;

34 
	md_«me
[256];

37 #ifde‡
__USE_LARGEFILE64


38 
	sdúít64


40 
__öo64_t
 
	md_öo
;

41 
__off64_t
 
	md_off
;

42 
	md_ª˛í
;

43 
	md_ty≥
;

44 
	md_«me
[256];

48 
	#d_fûío
 
d_öo


	)

50 #unde‡
_DIRENT_HAVE_D_NAMLEN


51 
	#_DIRENT_HAVE_D_RECLEN


	)

52 
	#_DIRENT_HAVE_D_OFF


	)

53 
	#_DIRENT_HAVE_D_TYPE


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

43 #i‡
__WORDSIZE
 == 64

57 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

58 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

59 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

62 
	#_POSIX_V7_LP64_OFF64
 1

	)

63 
	#_POSIX_V6_LP64_OFF64
 1

	)

64 
	#_XBS5_LP64_OFF64
 1

	)

70 
	#_POSIX_V7_ILP32_OFF32
 1

	)

71 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

72 
	#_POSIX_V6_ILP32_OFF32
 1

	)

73 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

74 
	#_XBS5_ILP32_OFF32
 1

	)

75 
	#_XBS5_ILP32_OFFBIG
 1

	)

92 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

93 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

94 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

95 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

96 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

97 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 
	#_POSIX_TZNAME_MAX
 6

	)

140 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


142 
	#_POSIX_QLIMIT
 1

	)

146 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

149 
	#_POSIX_UIO_MAXIOV
 16

	)

153 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

157 
	~<bôs/loˇl_lim.h
>

160 #i‚def 
SSIZE_MAX


161 
	#SSIZE_MAX
 
LONG_MAX


	)

168 #i‚def 
NGROUPS_MAX


169 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_BITS_POSIX_OPT_H


21 
	#_BITS_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

36 
	#_POSIX_FSYNC
 200809L

	)

39 
	#_POSIX_MAPPED_FILES
 200809L

	)

42 
	#_POSIX_MEMLOCK
 200809L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200809L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

92 #ifde‡
__USE_XOPEN2K8


94 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

97 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

101 
	#_POSIX_SEMAPHORES
 200809L

	)

104 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

107 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

108 
	#_POSIX_ASYNC_IO
 1

	)

110 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

112 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

115 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

118 
	#_LFS_LARGEFILE
 1

	)

119 
	#_LFS64_LARGEFILE
 1

	)

120 
	#_LFS64_STDIO
 1

	)

123 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

126 
	#_POSIX_CPUTIME
 0

	)

129 
	#_POSIX_THREAD_CPUTIME
 0

	)

132 
	#_POSIX_REGEXP
 1

	)

135 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

138 
	#_POSIX_SHELL
 1

	)

141 
	#_POSIX_TIMEOUTS
 200809L

	)

144 
	#_POSIX_SPIN_LOCKS
 200809L

	)

147 
	#_POSIX_SPAWN
 200809L

	)

150 
	#_POSIX_TIMERS
 200809L

	)

153 
	#_POSIX_BARRIERS
 200809L

	)

156 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

159 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

162 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

165 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

168 
	#_POSIX_ADVISORY_INFO
 200809L

	)

171 
	#_POSIX_IPV6
 200809L

	)

174 
	#_POSIX_RAW_SOCKETS
 200809L

	)

177 
	#_POSIX2_CHAR_TERM
 200809L

	)

180 
	#_POSIX_SPORADIC_SERVER
 -1

	)

181 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

184 
	#_POSIX_TRACE
 -1

	)

185 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

186 
	#_POSIX_TRACE_INHERIT
 -1

	)

187 
	#_POSIX_TRACE_LOG
 -1

	)

190 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/predefs.h

19 #i‚de‡
_FEATURES_H


23 #i‚de‡
_PREDEFS_H


24 
	#_PREDEFS_H


	)

27 
	#__STDC_IEC_559__
 1

	)

28 
	#__STDC_IEC_559_COMPLEX__
 1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

97 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

99 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

100 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

101 (
_Â
); \

102 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

104 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

105 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

107 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

24 #ifde‡
__WCHAR_MAX__


25 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

27 
	#__WCHAR_MAX
 (2147483647)

	)

32 #ifde‡
__WCHAR_UNSIGNED__


33 
	#__WCHAR_MIN
 
L
'\0'

	)

37 #ñi‡
L
'\0' - 1 > 0

38 
	#__WCHAR_MIN
 
L
'\0'

	)

40 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

89 #i‚de‡
__˝lu•lus


90 
	#__is˘y≥
(
c
, 
ty≥
) \

91 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

92 #ñi‡
deföed
 
__USE_EXTERN_INLINES


93 
	#__is˘y≥_f
(
ty≥
) \

94 
__exã∫_ölöe
 \

95 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

97  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

98 
	}

	)
}

101 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

102 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

104 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

106 
__BEGIN_NAMESPACE_STD


112 
__ex˘y≥
 (
iß um
);

113 
__ex˘y≥
 (
ißÕha
);

114 
__ex˘y≥
 (
is˙ål
);

115 
__ex˘y≥
 (
isdigô
);

116 
__ex˘y≥
 (
i¶owî
);

117 
__ex˘y≥
 (
isgøph
);

118 
__ex˘y≥
 (
i•röt
);

119 
__ex˘y≥
 (
i•un˘
);

120 
__ex˘y≥
 (
is•a˚
);

121 
__ex˘y≥
 (
isuµî
);

122 
__ex˘y≥
 (
isxdigô
);

126 
	$tﬁowî
 (
__c
Ë
__THROW
;

129 
	$touµî
 (
__c
Ë
__THROW
;

131 
__END_NAMESPACE_STD


135 #ifdef 
__USE_ISOC99


136 
__BEGIN_NAMESPACE_C99


138 
	`__ex˘y≥
 (
isbœnk
);

140 
__END_NAMESPACE_C99


143 #ifde‡
__USE_GNU


145 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

148 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


152 
	$ißscii
 (
__c
Ë
__THROW
;

156 
	$tﬂscii
 (
__c
Ë
__THROW
;

160 
	`__ex˘y≥
 (
_touµî
);

161 
	`__ex˘y≥
 (
_tﬁowî
);

165 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

166 (
__exãnsi⁄__
 \

167 ({ 
__ªs
; \

168 i‡( (
c
) > 1) \

170 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

172 
__c
 = (
c
); \

173 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

176 
__ªs
 = 
f
 
¨gs
; \

179 
__ªs
 = (
a
)[(Ë(
c
)]; \

180 
__ªs
; 
	}
}))

	)

182 #i‡!
deföed
 
__NO_CTYPE


183 #ifde‡
__is˘y≥_f


184 
	$__is˘y≥_f
 (
Ænum
)

185 
	$__is˘y≥_f
 (
Æpha
)

186 
	$__is˘y≥_f
 (
˙ål
)

187 
	$__is˘y≥_f
 (
digô
)

188 
	$__is˘y≥_f
 (
lowî
)

189 
	$__is˘y≥_f
 (
gøph
)

190 
	$__is˘y≥_f
 (
¥öt
)

191 
	$__is˘y≥_f
 (
pun˘
)

192 
	$__is˘y≥_f
 (
•a˚
)

193 
	$__is˘y≥_f
 (
uµî
)

194 
	$__is˘y≥_f
 (
xdigô
)

195 #ifde‡
__USE_ISOC99


196 
	$__is˘y≥_f
 (
bœnk
)

198 #ñi‡
deföed
 
__is˘y≥


199 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

200 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

201 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

202 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

203 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

204 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

205 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

206 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

207 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

208 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

209 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

210 #ifde‡
__USE_ISOC99


211 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

215 #ifde‡
__USE_EXTERN_INLINES


216 
__exã∫_ölöe
 

217 
	`__NTH
 (
	$tﬁowî
 (
__c
))

219  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

220 
	}
}

222 
__exã∫_ölöe
 

223 
__NTH
 (
	$touµî
 (
__c
))

225  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

226 
	}
}

229 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


230 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

231 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

234 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

236 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

238 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

239 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

245 #ifde‡
__USE_XOPEN2K8


259 
	~<xloˇÀ.h
>

263 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

264 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

266 
	#__ex˘y≥_l
(
«me
) \

267 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

273 
__ex˘y≥_l
 (
iß um_l
);

274 
__ex˘y≥_l
 (
ißÕha_l
);

275 
__ex˘y≥_l
 (
is˙ål_l
);

276 
__ex˘y≥_l
 (
isdigô_l
);

277 
__ex˘y≥_l
 (
i¶owî_l
);

278 
__ex˘y≥_l
 (
isgøph_l
);

279 
__ex˘y≥_l
 (
i•röt_l
);

280 
__ex˘y≥_l
 (
i•un˘_l
);

281 
__ex˘y≥_l
 (
is•a˚_l
);

282 
__ex˘y≥_l
 (
isuµî_l
);

283 
__ex˘y≥_l
 (
isxdigô_l
);

285 
__ex˘y≥_l
 (
isbœnk_l
);

289 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

290 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

296 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


297 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

299 
	#__touµî_l
(
c
, 
loˇÀ
) \

300 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

301 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

302 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

306 #i‚de‡
__NO_CTYPE


307 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

308 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

309 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

310 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

311 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

312 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

313 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

314 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

315 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

316 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

317 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

319 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

321 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


322 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

323 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

326 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

327 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

328 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

329 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

330 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

331 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

332 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

333 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

334 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

335 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

336 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

338 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

340 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


341 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

342 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

349 
__END_DECLS


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/param.h

1 #i‚de‡
_LINUX_PARAM_H


2 
	#_LINUX_PARAM_H


	)

4 
	~<asm/∑øm.h
>

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


44 
	#__LEAF
 , 
__Àaf__


	)

45 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

47 
	#__LEAF


	)

48 
	#__LEAF_ATTR


	)

56 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

57 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

58 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

59 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

61 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

62 
	#__THROW
 
	`throw
 ()

	)

63 
	#__THROWNL
 
	`throw
 ()

	)

64 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

66 
	#__THROW


	)

67 
	#__THROWNL


	)

68 
	#__NTH
(
f˘
Ë
	)
fct

74 
	#__ölöe


	)

76 
	#__THROW


	)

77 
	#__THROWNL


	)

78 
	#__NTH
(
f˘
Ë
	)
fct

80 
	#__c⁄°
 c⁄°

	)

81 
	#__sig√d
 sig√d

	)

82 
	#__vﬁ©ûe
 vﬁ©ûe

	)

88 
	#__P
(
¨gs
Ë
	)
args

89 
	#__PMT
(
¨gs
Ë
	)
args

94 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

95 
	#__STRING
(
x
Ë#x

	)

98 
	#__±r_t
 *

	)

99 
	#__l⁄g_doubÀ_t
 

	)

103 #ifdef 
__˝lu•lus


104 
	#__BEGIN_DECLS
 "C" {

	)

105 
	#__END_DECLS
 }

	)

107 
	#__BEGIN_DECLS


	)

108 
	#__END_DECLS


	)

117 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


118 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

119 
	#__END_NAMESPACE_STD
 }

	)

120 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

121 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

122 
	#__END_NAMESPACE_C99
 }

	)

123 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

128 
	#__BEGIN_NAMESPACE_STD


	)

129 
	#__END_NAMESPACE_STD


	)

130 
	#__USING_NAMESPACE_STD
(
«me
)

	)

131 
	#__BEGIN_NAMESPACE_C99


	)

132 
	#__END_NAMESPACE_C99


	)

133 
	#__USING_NAMESPACE_C99
(
«me
)

	)

138 #i‚de‡
__BOUNDED_POINTERS__


139 
	#__bounded


	)

140 
	#__unbounded


	)

141 
	#__±rvÆue


	)

146 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

147 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

149 #i‡
__GNUC_PREREQ
 (4,3)

150 
	#__w¨nde˛
(
«me
, 
msg
) \

151 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

152 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

153 
	#__îr‹de˛
(
«me
, 
msg
) \

154 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

156 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

157 
	#__w¨«âr
(
msg
)

	)

158 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

162 #i‡
__GNUC_PREREQ
 (2,97)

164 
	#__Êex¨r
 []

	)

166 #ifde‡
__GNUC__


167 
	#__Êex¨r
 [0]

	)

169 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

170 
	#__Êex¨r
 []

	)

173 
	#__Êex¨r
 [1]

	)

189 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

191 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

192 #ifde‡
__˝lu•lus


193 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

194 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

195 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

196 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

198 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

199 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

200 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

201 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

203 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

204 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

217 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

218 
	#__©åibuã__
(
xyz
Ë

	)

224 #i‡
__GNUC_PREREQ
 (2,96)

225 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

227 
	#__©åibuã_mÆloc__


	)

233 #i‡
__GNUC_PREREQ
 (2,96)

234 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

236 
	#__©åibuã_puª__


	)

240 #i‡
__GNUC_PREREQ
 (2,5)

241 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

243 
	#__©åibuã_c⁄°__


	)

249 #i‡
__GNUC_PREREQ
 (3,1)

250 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

251 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

253 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

254 
	#__©åibuã_noölöe__


	)

258 #i‡
__GNUC_PREREQ
 (3,2)

259 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

261 
	#__©åibuã_dïªˇãd__


	)

270 #i‡
__GNUC_PREREQ
 (2,8)

271 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

273 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

280 #i‡
__GNUC_PREREQ
 (2,97)

281 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

282 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

284 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

289 #i‡
__GNUC_PREREQ
 (3,3)

290 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

292 
	#__n⁄nuŒ
(
∑øms
)

	)

297 #i‡
__GNUC_PREREQ
 (3,4)

298 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

299 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

300 #i‡
__USE_FORTIFY_LEVEL
 > 0

301 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

304 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

306 #i‚de‡
__wur


307 
	#__wur


	)

311 #i‡
__GNUC_PREREQ
 (3,2)

312 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

314 
	#__Æways_ölöe
 
__ölöe


	)

319 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

320 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


321 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

322 #i‡
__GNUC_PREREQ
 (4,3)

323 
	#__exã∫_Æways_ölöe
 \

324 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

326 
	#__exã∫_Æways_ölöe
 \

327 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

330 
	#__exã∫_ölöe
 
__ölöe


	)

331 #i‡
__GNUC_PREREQ
 (4,3)

332 
	#__exã∫_Æways_ölöe
 \

333 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

335 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

342 #i‡
__GNUC_PREREQ
 (4,3)

343 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

344 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

351 #i‡!
__GNUC_PREREQ
 (2,8)

352 
	#__exãnsi⁄__


	)

356 #i‡!
__GNUC_PREREQ
 (2,92)

357 
	#__ª°ri˘


	)

363 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


364 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

366 #ifde‡
__GNUC__


367 
	#__ª°ri˘_¨r


	)

369 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

370 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

373 
	#__ª°ri˘_¨r


	)

378 
	~<bôs/w‹dsize.h
>

380 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


381 
	#__LDBL_COMPAT
 1

	)

382 #ifde‡
__REDIRECT


383 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

384 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

385 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

386 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

387 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

388 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

389 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

390 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

391 
	#__LDBL_REDIR_DECL
(
«me
) \

392 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

393 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

394 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

395 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

396 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

399 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


400 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

401 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

402 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

403 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

404 
	#__LDBL_REDIR_DECL
(
«me
)

	)

405 #ifde‡
__REDIRECT


406 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

407 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

408 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


60 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

61 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

62 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

69 #ifde‡
__USE_XOPEN


70 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

71 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

73 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

74 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

76 } 
	tfd_£t
;

79 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

81 #ifde‡
__USE_MISC


83 
__fd_mask
 
	tfd_mask
;

86 
	#NFDBITS
 
__NFDBITS


	)

91 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

92 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

93 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

94 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

97 
__BEGIN_DECLS


107 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

108 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

109 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

110 
timevÆ
 *
__ª°ri˘
 
__timeout
);

112 #ifde‡
__USE_XOPEN2K


119 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

120 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

121 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

122 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

123 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


129 
	~<bôs/£À˘2.h
>

132 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__BEGIN_DECLS


32 
__exãnsi⁄__


33 
	$gnu_dev_maj‹
 (
__dev
)

34 
__THROW
 
__©åibuã_c⁄°__
;

35 
__exãnsi⁄__


36 
	$gnu_dev_mö‹
 (
__dev
)

37 
__THROW
 
__©åibuã_c⁄°__
;

38 
__exãnsi⁄__


39 
	$gnu_dev_makedev
 (
__maj‹
,

40 
__mö‹
)

41 
__THROW
 
__©åibuã_c⁄°__
;

43 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


44 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

45 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

47  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

48 
	}
}

50 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

51 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

53  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

54 
	}
}

56 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

57 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

59  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

60 | (((Ë(
__mö‹
 & ~0xff)) << 12)

61 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

62 
	}
}

64 
	g__END_DECLS


67 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

68 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

69 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/asm/param.h

1 
	~<asm-gíîic/∑øm.h
>

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (Ë(
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (Ë(
x
); \

51 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

56 
	#__bsw≠_c⁄°™t_32
(
x
) \

57 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

58 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

60 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

61 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

62 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

63 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

64 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

65 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

66 || 
deföed
 
	g__amdÁm10__
)

69 
	#__bsw≠_32
(
x
) \

70 (
__exãnsi⁄__
 \

71 ({ 
__v
, 
__x
 = (
x
); \

72 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

73 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

75 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

76 
__v
; }))

	)

78 
	#__bsw≠_32
(
x
) \

79 (
__exãnsi⁄__
 \

80 ({ 
__v
, 
__x
 = (
x
); \

81 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

82 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

84 
	`__asm__
 ("rorw $8, %w0;" \

87 : "Ù" (
__v
) \

88 : "0" (
__x
) \

90 
__v
; }))

	)

93 
	#__bsw≠_32
(
x
) \

94 (
__exãnsi⁄__
 \

95 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

99 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

101 
	#__bsw≠_c⁄°™t_64
(
x
) \

102 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

103 | (((
x
) & 0x00ff000000000000ull) >> 40) \

104 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

105 | (((
x
) & 0x000000ff00000000ull) >> 8) \

106 | (((
x
) & 0x00000000ff000000ull) << 8) \

107 | (((
x
) & 0x0000000000ff0000ull) << 24) \

108 | (((
x
) & 0x000000000000ff00ull) << 40) \

109 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

111 #i‡
__WORDSIZE
 == 64

112 
	#__bsw≠_64
(
x
) \

113 (
__exãnsi⁄__
 \

114 ({ 
__v
, 
__x
 = (
x
); \

115 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

116 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

118 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

119 
__v
; }))

	)

121 
	#__bsw≠_64
(
x
) \

122 (
__exãnsi⁄__
 \

123 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

124 
__l
[2]; } 
__w
, 
__r
; \

125 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

126 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

129 
__w
.
__Œ
 = (
x
); \

130 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

131 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

133 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

38 
	~<î∫o.h
>

39 
	~<gnu/›ti⁄-groups.h
>

43 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


44 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


45 
±hªad_muãx_t
 
	t__libc_lock_t
;

46 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

48 
	t__libc_lock_t
;

49 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

51 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

52 #ifde‡
__USE_UNIX98


53 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

55 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

58 
__libc_lock_›aque__
 
	t__libc_lock_t
;

59 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

60 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

64 
±hªad_key_t
 
	t__libc_key_t
;

73 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_lock_t
 
NAME
;

	)

75 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

77 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

79 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

80 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

91 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

92 #i‡
LLL_LOCK_INITIALIZER
 == 0

93 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

94 
CLASS
 
__libc_lock_t
 
NAME
;

	)

96 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

97 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

100 #i‡
__LT_SPINLOCK_INIT
 == 0

101 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

102 
CLASS
 
__libc_lock_t
 
NAME
;

	)

104 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

105 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

109 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

110 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

114 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

115 #i‡
LLL_LOCK_INITIALIZER
 == 0

116 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

117 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

119 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

120 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

122 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

123 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

125 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

126 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

127 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

128 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

131 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

132 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

133 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

134 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

136 
	#__πld_lock_öôülize
(
NAME
) \

137 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

144 #ifde‡
__PIC__


145 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

146 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

147 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

149 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

150 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

154 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


155 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

156 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

157 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

158 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

159 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

161 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

162 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

163 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

164 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

165 
FUNC
 
ARGS


	)

171 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

172 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

174 
	#__libc_lock_öô
(
NAME
) \

175 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

177 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


180 
	#__libc_rwlock_öô
(
NAME
) \

181 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

183 
	#__libc_rwlock_öô
(
NAME
) \

184 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

188 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

189 
	#__libc_lock_öô_ªcursive
(
NAME
) \

190 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

192 
	#__libc_lock_öô_ªcursive
(
NAME
) \

194 i‡(
__±hªad_muãx_öô
 !
NULL
) \

196 
±hªad_muãx©å_t
 
__©å
; \

197 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

198 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

199 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

200 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

202 } 0)

	)

205 
	#__πld_lock_öô_ªcursive
(
NAME
) \

207 i‡(
__±hªad_muãx_öô
 !
NULL
) \

209 
±hªad_muãx©å_t
 
__©å
; \

210 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

211 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

212 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

213 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

215 } 0)

	)

220 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

221 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

223 
	#__libc_lock_föi
(
NAME
) \

224 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

226 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


227 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

229 
	#__libc_rwlock_föi
(
NAME
) \

230 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

234 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

235 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

237 
	#__libc_lock_föi_ªcursive
(
NAME
) \

238 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

242 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

243 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

247 
__libc_lock_lock_‚
 (
__libc_lock_t
 *);

248 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_‚
);

250 #i‡
__OPTION_EGLIBC_BIG_MACROS


251 
	#__libc_lock_lock
(
NAME
) \

252 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

254 
	#__libc_lock_lock
(
NAME
) \

255 
	`__libc_lock_lock_‚
 (&(
NAME
))

	)

258 
	#__libc_lock_lock
(
NAME
) \

259 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

261 
	#__libc_rwlock_rdlock
(
NAME
) \

262 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

263 
	#__libc_rwlock_wæock
(
NAME
) \

264 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

267 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

268 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

272 
__libc_lock_lock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

273 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_ªcursive_‚
);

275 #i‡
__OPTION_EGLIBC_BIG_MACROS


276 
	#__libc_lock_lock_ªcursive
(
NAME
) \

278 *
£lf
 = 
THREAD_SELF
; \

279 i‡((
NAME
).
ow√r
 !
£lf
) \

281 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

282 (
NAME
).
ow√r
 = 
£lf
; \

284 ++(
NAME
).
˙t
; \

285 } 0)

	)

287 
	#__libc_lock_lock_ªcursive
(
NAME
) \

288 
	`__libc_lock_lock_ªcursive_‚
 (&(
NAME
))

	)

291 
	#__libc_lock_lock_ªcursive
(
NAME
) \

292 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

296 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

297 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

301 
__libc_lock_åylock_‚
 (
__libc_lock_t
 *);

302 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_‚
);

304 #i‡
__OPTION_EGLIBC_BIG_MACROS


305 
	#__libc_lock_åylock
(
NAME
) \

306 
	`Œl_åylock
 (
NAME
)

	)

308 
	#__libc_lock_åylock
(
NAME
) \

309 
	`__libc_lock_åylock_‚
 (&(
NAME
))

	)

312 
	#__libc_lock_åylock
(
NAME
) \

313 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

315 
	#__libc_rwlock_åyrdlock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

317 
	#__libc_rwlock_åywæock
(
NAME
) \

318 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

321 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

322 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

326 
__libc_lock_åylock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

327 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_ªcursive_‚
);

329 #i‡
__OPTION_EGLIBC_BIG_MACROS


330 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

332 
ªsu…
 = 0; \

333 *
£lf
 = 
THREAD_SELF
; \

334 i‡((
NAME
).
ow√r
 !
£lf
) \

336 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

338 (
NAME
).
ow√r
 = 
£lf
; \

339 (
NAME
).
˙t
 = 1; \

342 
ªsu…
 = 
EBUSY
; \

345 ++(
NAME
).
˙t
; \

346 
ªsu…
; \

347 })

	)

349 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

350 
	`__libc_lock_åylock_ªcursive_‚
 (&(
NAME
))

	)

353 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

357 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

358 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

361 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

362 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

366 
__libc_lock_u∆ock_‚
 (
__libc_lock_t
 *);

367 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_‚
);

369 #i‡
__OPTION_EGLIBC_BIG_MACROS


370 
	#__libc_lock_u∆ock
(
NAME
) \

371 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

373 
	#__libc_lock_u∆ock
(
NAME
) \

374 
	`__libc_lock_u∆ock_‚
 (&(
NAME
))

	)

377 
	#__libc_lock_u∆ock
(
NAME
) \

378 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

380 
	#__libc_rwlock_u∆ock
(
NAME
) \

381 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

384 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

385 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

389 
__libc_lock_u∆ock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

390 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_ªcursive_‚
);

392 #i‡
__OPTION_EGLIBC_BIG_MACROS


394 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

396 i‡(--(
NAME
).
˙t
 == 0) \

398 (
NAME
).
ow√r
 = 
NULL
; \

399 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

401 } 0)

	)

403 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

404 
	`__libc_lock_u∆ock_ªcursive_‚
 (&(
NAME
))

	)

407 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

408 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

411 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


412 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

413 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

415 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

416 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

418 
	#__πld_lock_lock_ªcursive
(
NAME
) \

419 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

421 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

422 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

424 
	#__πld_lock_lock_ªcursive
(
NAME
) \

425 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

427 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

428 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

432 #i‡
PTHREAD_ONCE_INIT
 == 0

435 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

436 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

438 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

439 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

443 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

445 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

446 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

447 
INIT_FUNCTION
)); \

448 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

449 
	`INIT_FUNCTION
 (); \

450 (
ONCE_CONTROL
) |= 2; \

452 } 0)

	)

459 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

460 (*
routöe
Ë(*), *
¨g
);

461 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

462 
execuã
);

463 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

464 (*
routöe
Ë(*), *
¨g
);

465 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

466 
execuã
);

469 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

470 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

471 
_avaû
; \

472 i‡(
DOIT
) { \

473 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

474 i‡(
_avaû
) { \

475 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

476 
ARG
)); \

478 
_buf„r
.
__routöe
 = (
FCT
); \

479 
_buf„r
.
__¨g
 = (
ARG
); \

482 
_avaû
 = 0; \

483 }

	)

486 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

487 i‡(
_avaû
) { \

488 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

489 } i‡(
DOIT
) \

490 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

491 
	}

	)
}

494 
	#__libc_˛ónup_íd
(
DOIT
) \

495 i‡(
_avaû
) { \

496 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

497 } i‡(
DOIT
) \

498 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

502 
__exã∫_ölöe
 

503 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

505 i‡(
f
->
__do_ô
)

506 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

507 
	}
}

509 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

511 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

512 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

513 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

514 .
__do_ô
 = 1 };

	)

516 
	#__libc_˛ónup_p›
(
execuã
) \

517 
__˛‰ame
.
__do_ô
 = (
execuã
); \

518 } 0)

	)

522 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

523 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

526 
	#__libc_gë•ecific
(
KEY
) \

527 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

530 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

531 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

537 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

538 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

539 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

540 (*
__∑ª¡
) (),

541 (*
__chûd
) (),

542 *
__dso_h™dÀ
);

547 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

548 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

550 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

552 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

554 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

556 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

558 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

560 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

562 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

563 
__köd
);

565 #ifde‡
__USE_UNIX98


566 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

567 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

569 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

571 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

573 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

575 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

577 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

579 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

582 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

583 (*
__de°r_fun˘i⁄
) (*));

585 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

586 
__c⁄°
 *
__poöãr
);

588 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

590 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

591 (*
__öô_routöe
) ());

593 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

594 (*
__∑ª¡
) (),

595 (*
__chûd
) ());

601 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


602 #ifde‡
wók_exã∫


603 #i‡
_LIBC


604 
	~<bp-sym.h
>

606 
	#BP_SYM
(
sym
Ë
	)
sym

608 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

609 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

610 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

611 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

612 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

613 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

614 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

615 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

616 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

617 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

618 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

619 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

620 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

621 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

622 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

623 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

624 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

625 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

626 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

627 
	$wók_exã∫
 (
__±hªad_öôülize
)

628 
	$wók_exã∫
 (
__±hªad_©f‹k
)

629 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

630 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

631 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

633 #¥agm®
wók
 
__±hªad_muãx_öô


634 #¥agm®
wók
 
__±hªad_muãx_de°roy


635 #¥agm®
wók
 
__±hªad_muãx_lock


636 #¥agm®
wók
 
__±hªad_muãx_åylock


637 #¥agm®
wók
 
__±hªad_muãx_u∆ock


638 #¥agm®
wók
 
__±hªad_muãx©å_öô


639 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


640 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


641 #¥agm®
wók
 
__±hªad_rwlock_de°roy


642 #¥agm®
wók
 
__±hªad_rwlock_rdlock


643 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


644 #¥agm®
wók
 
__±hªad_rwlock_wæock


645 #¥agm®
wók
 
__±hªad_rwlock_åywæock


646 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


647 #¥agm®
wók
 
__±hªad_key_¸óã


648 #¥agm®
wók
 
__±hªad_£t•ecific


649 #¥agm®
wók
 
__±hªad_gë•ecific


650 #¥agm®
wók
 
__±hªad_⁄˚


651 #¥agm®
wók
 
__±hªad_öôülize


652 #¥agm®
wók
 
__±hªad_©f‹k


653 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


654 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


655 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

34 #i‚de‡
ARG_MAX


35 
	#__undef_ARG_MAX


	)

39 
	~<löux/limôs.h
>

42 #ifde‡
__undef_NR_OPEN


43 #unde‡
NR_OPEN


44 #unde‡
__undef_NR_OPEN


47 #ifde‡
__undef_LINK_MAX


48 #unde‡
LINK_MAX


49 #unde‡
__undef_LINK_MAX


52 #ifde‡
__undef_OPEN_MAX


53 #unde‡
OPEN_MAX


54 #unde‡
__undef_OPEN_MAX


57 #ifde‡
__undef_ARG_MAX


58 #unde‡
ARG_MAX


59 #unde‡
__undef_ARG_MAX


63 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

65 
	#PTHREAD_KEYS_MAX
 1024

	)

68 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

70 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

73 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

75 #unde‡
PTHREAD_THREADS_MAX


79 
	#AIO_PRIO_DELTA_MAX
 20

	)

82 
	#PTHREAD_STACK_MIN
 16384

	)

85 
	#DELAYTIMER_MAX
 2147483647

	)

88 
	#TTY_NAME_MAX
 32

	)

91 
	#LOGIN_NAME_MAX
 256

	)

94 
	#HOST_NAME_MAX
 64

	)

97 
	#MQ_PRIO_MAX
 32768

	)

100 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

31 
	#__FD_ZERO_STOS
 "°o¶"

	)

34 
	#__FD_ZERO
(
fd•
) \

36 
__d0
, 
__d1
; \

37 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

38 : "=c" (
__d0
), "=D" (
__d1
) \

39 : "a" (0), "0" ( (
fd_£t
) \

40 /  (
__fd_mask
)), \

41 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

43 } 0)

	)

49 
	#__FD_ZERO
(
£t
) \

51 
__i
; \

52 
fd_£t
 *
__¨r
 = (
£t
); \

53 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

54 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

55 } 0)

	)

59 
	#__FD_SET
(
d
, 
£t
) \

60 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

61 
	#__FD_CLR
(
d
, 
£t
) \

62 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

63 
	#__FD_ISSET
(
d
, 
£t
) \

64 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

20 #i‚de‡
_SYS_SELECT_H


25 
__fdñt_chk
 (
__d
);

26 
	$__fdñt_w¨n
 (
__d
)

27 
	`__w¨«âr
 ("bit outside of fd_set selected");

28 #unde‡
__FD_ELT


29 
	#__FD_ELT
(
d
) \

30 
__exãnsi⁄__
 \

31 ({ 
__d
 = (
d
); \

32 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

33 ? (
__d
 >
__FD_SETSIZE
 \

34 ? 
	`__fdñt_w¨n
 (
__d
Ë: (__d / 
__NFDBITS
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/time.h

24 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


25 #i‚de‡
_STRUCT_TIMEVAL


26 
	#_STRUCT_TIMEVAL
 1

	)

27 
	~<bôs/ty≥s.h
>

31 
	stimevÆ


33 
__time_t
 
	mtv_£c
;

34 
__su£c⁄ds_t
 
	mtv_u£c
;

39 #i‚de‡
__√ed_timevÆ


40 #i‚de‡
_BITS_TIME_H


41 
	#_BITS_TIME_H
 1

	)

49 
	#CLOCKS_PER_SEC
 1000000l

	)

51 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

82 
	#TIMER_ABSTIME
 1

	)

85 #ifde‡
__USE_GNU


86 
	~<bôs/timex.h
>

88 
__BEGIN_DECLS


91 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

93 
__END_DECLS


99 #unde‡
__√ed_timevÆ


	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

60 
	m__GCONV_SWAP
 = 0x0004

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

68 
	g__gc⁄v_å™s_d©a
;

72 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 
	t__c⁄°
 **, __const *,

74 **, 
	tsize_t
 *, , );

77 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

80 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

81 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

85 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

86 
	t__gc⁄v_°ï_d©a
 *, *,

87 
	t__c⁄°
 *,

88 
	t__c⁄°
 **,

89 
	t__c⁄°
 *, **,

90 
	tsize_t
 *);

93 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

94 
	t__c⁄°
 *,

98 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

99 
	tsize_t
 *);

102 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

103 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

105 
	s__gc⁄v_å™s_d©a


108 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

109 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

110 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

111 *
__d©a
;

112 
__gc⁄v_å™s_d©a
 *
__√xt
;

117 
	s__gc⁄v_°ï


119 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

120 
__c⁄°
 *
__mod«me
;

122 
__cou¡î
;

124 *
__‰om_«me
;

125 *
__to_«me
;

127 
__gc⁄v_f˘
 
__f˘
;

128 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

129 
__gc⁄v_öô_f˘
 
__öô_f˘
;

130 
__gc⁄v_íd_f˘
 
__íd_f˘
;

134 
__mö_√eded_‰om
;

135 
__max_√eded_‰om
;

136 
__mö_√eded_to
;

137 
__max_√eded_to
;

140 
__°©eful
;

142 *
__d©a
;

147 
	s__gc⁄v_°ï_d©a


149 *
__outbuf
;

150 *
__outbu„nd
;

154 
__Êags
;

158 
__övoˇti⁄_cou¡î
;

162 
__öã∫Æ_u£
;

164 
__mb°©e_t
 *
__°©ï
;

165 
__mb°©e_t
 
__°©e
;

169 
__gc⁄v_å™s_d©a
 *
__å™s
;

174 
	s__gc⁄v_öfo


176 
size_t
 
__n°ïs
;

177 
__gc⁄v_°ï
 *
__°ïs
;

178 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

179 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

323 
__THROW
 
__©åibuã_puª__
;

326 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

331 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

332 
__THROW
;

335 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

336 
__END_NAMESPACE_STD


338 #ifde‡
__USE_GNU


341 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

342 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

343 
__THROW
;

347 
__BEGIN_NAMESPACE_STD


350 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

354 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

358 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

362 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

363 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

364 
mb°©e_t
 *
__p
Ë
__THROW
;

367 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

368 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

371 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

372 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

373 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

375 
__END_NAMESPACE_STD


377 #ifde‡
__USE_EXTERN_INLINES


383 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

384 
__exã∫_ölöe
 
wöt_t


385 
	`__NTH
 (
	$btowc
 (
__c
))

386 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

387 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

389 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

390 
__exã∫_ölöe
 

391 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

393 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

395 
__exã∫_ölöe
 
size_t


396 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

397 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

398 {  (
__ps
 !
NULL


399 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

402 
__BEGIN_NAMESPACE_STD


405 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

406 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

407 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

411 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

412 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
__END_NAMESPACE_STD


417 #ifdef 
__USE_XOPEN2K8


420 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

421 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

422 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

426 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

427 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

428 
size_t
 
__nwc
, size_à
__Àn
,

429 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

434 #ifde‡
__USE_XOPEN


436 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

440 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

444 
__BEGIN_NAMESPACE_STD


447 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

449 
__END_NAMESPACE_STD


451 #ifde‡
__USE_ISOC99


452 
__BEGIN_NAMESPACE_C99


454 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

455 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

456 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

457 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

458 
__END_NAMESPACE_C99


462 
__BEGIN_NAMESPACE_STD


465 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

466 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

470 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

471 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

472 
__THROW
;

473 
__END_NAMESPACE_STD


475 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

476 
__BEGIN_NAMESPACE_C99


479 
__exãnsi⁄__


480 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

481 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

482 
__THROW
;

486 
__exãnsi⁄__


487 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

488 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

489 
__ba£
Ë
__THROW
;

490 
__END_NAMESPACE_C99


493 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


496 
__exãnsi⁄__


497 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

498 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

499 
__THROW
;

503 
__exãnsi⁄__


504 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__ba£
Ë
__THROW
;

509 #ifde‡
__USE_GNU


523 
	~<xloˇÀ.h
>

527 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

528 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

529 
__loˇÀ_t
 
__loc
Ë
__THROW
;

531 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

532 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

533 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

535 
__exãnsi⁄__


536 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

537 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

538 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

540 
__exãnsi⁄__


541 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

542 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

543 
__ba£
, 
__loˇÀ_t
 
__loc
)

544 
__THROW
;

546 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

547 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

548 
__THROW
;

550 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

551 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

552 
__THROW
;

554 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

555 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

556 
__loˇÀ_t
 
__loc
Ë
__THROW
;

560 #ifde‡
__USE_XOPEN2K8


563 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

564 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

569 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

570 
__THROW
;

577 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

580 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


581 
__BEGIN_NAMESPACE_STD


584 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

591 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

592 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

598 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

602 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

603 
__THROW
 ;

609 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

610 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

611 
__gnuc_va_li°
 
__¨g
)

617 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

618 
__gnuc_va_li°
 
__¨g
)

622 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

623 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

625 
__THROW
 ;

632 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

633 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

639 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

643 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

644 
__THROW
 ;

646 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

647 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

648 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

649 #ifde‡
__REDIRECT


653 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

654 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

655 
__isoc99_fwsˇnf
)

657 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_wsˇnf
)

660 
	`__REDIRECT_NTH
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

661 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

662 ...), 
__isoc99_swsˇnf
)

665 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

666 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

667 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

669 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

670 
__THROW
;

671 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

672 
	#wsˇnf
 
__isoc99_wsˇnf


	)

673 
	#swsˇnf
 
__isoc99_swsˇnf


	)

677 
__END_NAMESPACE_STD


680 #ifde‡
__USE_ISOC99


681 
__BEGIN_NAMESPACE_C99


686 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

687 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

688 
__gnuc_va_li°
 
__¨g
)

694 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

695 
__gnuc_va_li°
 
__¨g
)

698 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

699 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

700 
__gnuc_va_li°
 
__¨g
)

701 
__THROW
 ;

703 #i‡!
deföed
 
__USE_GNU
 \

704 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

705 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

706 #ifde‡
__REDIRECT


707 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

708 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

709 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

711 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

714 
	`__REDIRECT_NTH
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

715 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

716 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

719 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

720 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

721 
__gnuc_va_li°
 
__¨g
);

722 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

723 
__gnuc_va_li°
 
__¨g
);

724 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

725 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

727 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

728 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

729 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

733 
__END_NAMESPACE_C99


737 
__BEGIN_NAMESPACE_STD


742 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

743 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwch¨
 ();

756 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

757 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

771 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

772 
__FILE
 *
__ª°ri˘
 
__°ªam
);

778 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

779 
__FILE
 *
__ª°ri˘
 
__°ªam
);

786 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

787 
__END_NAMESPACE_STD


790 #ifde‡
__USE_GNU


798 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

799 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

807 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

815 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

824 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

834 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

835 
__FILE
 *
__ª°ri˘
 
__°ªam
);

843 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

844 
__FILE
 *
__ª°ri˘
 
__°ªam
);

848 
__BEGIN_NAMESPACE_C99


852 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

853 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

854 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

855 
__END_NAMESPACE_C99


857 #ifde‡
__USE_GNU


858 
	~<xloˇÀ.h
>

862 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

863 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

864 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

865 
__loˇÀ_t
 
__loc
Ë
__THROW
;

874 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


875 
	#__√ed_iswxxx


	)

876 
	~<w˘y≥.h
>

880 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


881 
	~<bôs/wch¨2.h
>

884 #ifde‡
__LDBL_COMPAT


885 
	~<bôs/wch¨-ldbl.h
>

888 
__END_DECLS


896 #unde‡
__√ed_mb°©e_t


897 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/param.h

1 #i‚de‡
__ASM_GENERIC_PARAM_H


2 
	#__ASM_GENERIC_PARAM_H


	)

5 #i‚de‡
HZ


6 
	#HZ
 100

	)

9 #i‚de‡
EXEC_PAGESIZE


10 
	#EXEC_PAGESIZE
 4096

	)

13 #i‚de‡
NOGROUP


14 
	#NOGROUP
 (-1)

	)

17 
	#MAXHOSTNAMELEN
 64

	)

	@/usr/include/bits/timex.h

19 #i‚def 
_BITS_TIMEX_H


20 
	#_BITS_TIMEX_H
 1

	)

24 
	stimex


26 
	mmodes
;

27 
	moff£t
;

28 
	m‰eq
;

29 
	mmaxîr‹
;

30 
	me°îr‹
;

31 
	m°©us
;

32 
	mc⁄°™t
;

33 
	m¥ecisi⁄
;

34 
	mtﬁî™˚
;

35 
timevÆ
 
	mtime
;

36 
	mtick
;

38 
	mµs‰eq
;

39 
	mjôãr
;

40 
	mshi·
;

41 
	m°abû
;

42 
	mjô˙t
;

43 
	mˇl˙t
;

44 
	mîr˙t
;

45 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_MICRO
 0x1000

	)

64 
	#ADJ_NANO
 0x2000

	)

65 
	#ADJ_TICK
 0x4000

	)

66 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

67 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

70 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

71 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

72 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

73 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

74 
	#MOD_STATUS
 
ADJ_STATUS


	)

75 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

76 
	#MOD_CLKB
 
ADJ_TICK


	)

77 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

78 
	#MOD_TAI
 
ADJ_TAI


	)

79 
	#MOD_MICRO
 
ADJ_MICRO


	)

80 
	#MOD_NANO
 
ADJ_NANO


	)

84 
	#STA_PLL
 0x0001

	)

85 
	#STA_PPSFREQ
 0x0002

	)

86 
	#STA_PPSTIME
 0x0004

	)

87 
	#STA_FLL
 0x0008

	)

89 
	#STA_INS
 0x0010

	)

90 
	#STA_DEL
 0x0020

	)

91 
	#STA_UNSYNC
 0x0040

	)

92 
	#STA_FREQHOLD
 0x0080

	)

94 
	#STA_PPSSIGNAL
 0x0100

	)

95 
	#STA_PPSJITTER
 0x0200

	)

96 
	#STA_PPSWANDER
 0x0400

	)

97 
	#STA_PPSERROR
 0x0800

	)

99 
	#STA_CLOCKERR
 0x1000

	)

100 
	#STA_NANO
 0x2000

	)

101 
	#STA_MODE
 0x4000

	)

102 
	#STA_CLK
 0x8000

	)

105 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

106 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

64 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

65 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

68 
__exã∫_Æways_ölöe
 
wch¨_t
 *

69 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
))

71 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

73 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

74  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

75 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

77 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

78  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

79 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

81  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

82 
	}
}

85 #ifde‡
__USE_GNU


86 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

87 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

88 
size_t
 
__ns1
Ë
__THROW
;

89 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

90 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

91 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

92 
size_t
 
__n
), 
wmemp˝y
);

93 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

94 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

95 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

96 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

97 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

100 
__exã∫_Æways_ölöe
 
wch¨_t
 *

101 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

102 
size_t
 
__n
))

104 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

106 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

107  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

108 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

110 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

111  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

112 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

114  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

115 
	}
}

119 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

120 
size_t
 
__ns
Ë
__THROW
;

121 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

122 
size_t
 
__n
), 
wmem£t
);

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

124 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

125 
size_t
 
__ns
), 
__wmem£t_chk
)

126 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

129 
__exã∫_Æways_ölöe
 
wch¨_t
 *

130 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

132 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

134 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

135  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

137 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

138  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

139 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

141  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

142 
	}
}

145 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

146 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

147 
size_t
 
__n
Ë
__THROW
;

148 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

149 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

150 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

152 
__exã∫_Æways_ölöe
 
wch¨_t
 *

153 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

155 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

156  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

157  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

158 
	}
}

161 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

163 
size_t
 
__de°Àn
Ë
__THROW
;

164 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

165 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

168 
__exã∫_Æways_ölöe
 
wch¨_t
 *

169 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

171 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

172  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

173  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

174 
	}
}

177 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

178 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

179 
size_t
 
__de°Àn
Ë
__THROW
;

180 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

181 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

182 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

183 
size_t
 
__n
), 
wc¢˝y
);

184 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

185 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

186 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

187 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

188 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

191 
__exã∫_Æways_ölöe
 
wch¨_t
 *

192 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

193 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

224 
size_t
 
__n
))

226 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

228 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

229  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

230 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

231 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

232  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

233 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

235  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

236 
	}
}

239 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

240 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

241 
size_t
 
__de°Àn
Ë
__THROW
;

242 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

243 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

244 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

246 
__exã∫_Æways_ölöe
 
wch¨_t
 *

247 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

249 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

250  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

251  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

252 
	}
}

255 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

256 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

257 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

258 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

259 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

260 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

261 
size_t
 
__n
), 
wc¢ˇt
);

263 
__exã∫_Æways_ölöe
 
wch¨_t
 *

264 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

265 
size_t
 
__n
))

267 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

268  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

269 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

270  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

271 
	}
}

274 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

275 
__Êag
, 
size_t
 
__s_Àn
,

276 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

277 
__THROW
 ;

279 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

280 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

281 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

282 
sw¥ötf
);

284 #ifde‡
__va_¨g_∑ck


285 
__exã∫_Æways_ölöe
 

286 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

287 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

289 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

290  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

291 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

292 
__fmt
, 
	`__va_¨g_∑ck
 ());

293  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

294 
	}
}

295 #ñi‡!
deföed
 
__˝lu•lus


297 
	#sw¥ötf
(
s
, 
n
, ...) \

298 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

299 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

300 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

301 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

304 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

305 
__Êag
, 
size_t
 
__s_Àn
,

306 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

307 
__gnuc_va_li°
 
__¨g
)

308 
__THROW
 ;

310 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

311 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

312 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

313 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

315 
__exã∫_Æways_ölöe
 

316 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

317 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

319 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

320  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

321 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

322  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

323 
	}
}

326 #i‡
__USE_FORTIFY_LEVEL
 > 1

328 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

329 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

330 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

333 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

335 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

336 
__gnuc_va_li°
 
__≠
);

338 #ifde‡
__va_¨g_∑ck


339 
__exã∫_Æways_ölöe
 

340 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

342  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

343 
	}
}

345 
__exã∫_Æways_ölöe
 

346 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

348  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

349 
	`__va_¨g_∑ck
 ());

350 
	}
}

351 #ñi‡!
deföed
 
__˝lu•lus


352 
	#w¥ötf
(...) \

353 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

354 
	#fw¥ötf
(
°ªam
, ...) \

355 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

358 
__exã∫_Æways_ölöe
 

359 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

361  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

362 
	}
}

364 
__exã∫_Æways_ölöe
 

365 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

366 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

368  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

369 
	}
}

373 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

374 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

375 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

376 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

377 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

378 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

379 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

380 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

381 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

384 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

385 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

387 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

389 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

390  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

391 
__n
, 
__°ªam
);

393 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

394  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

395 
__n
, 
__°ªam
);

397  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

398 
	}
}

400 #ifde‡
__USE_GNU


401 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

402 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

403 
__wur
;

404 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

405 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

406 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

407 
__wur
;

408 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

409 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

410 
__FILE
 *
__ª°ri˘
 
__°ªam
),

411 
__fgëws_u∆ocked_chk
)

412 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

415 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

416 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

418 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

420 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

421  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

422 
__n
, 
__°ªam
);

424 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

425  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

426 
__n
, 
__°ªam
);

428  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

429 
	}
}

433 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

434 
mb°©e_t
 *
__ª°ri˘
 
__p
,

435 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

436 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

437 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

438 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

440 
__exã∫_Æways_ölöe
 
__wur
 
size_t


441 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

442 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

447 
	#__WCHAR_MB_LEN_MAX
 16

	)

448 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


451 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

452  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

453  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

454 
	}
}

457 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

458 
__c⁄°
 **
__ª°ri˘
 
__§c
,

459 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

460 
size_t
 
__d°Àn
Ë
__THROW
;

461 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

462 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

463 
__c⁄°
 **
__ª°ri˘
 
__§c
,

464 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

465 
mb§towcs
);

466 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

467 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

468 
__c⁄°
 **
__ª°ri˘
 
__§c
,

469 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

470 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

471 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

474 
__exã∫_Æways_ölöe
 
size_t


475 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

476 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

478 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

480 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

481  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

485  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

486 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

488  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

489 
	}
}

492 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

493 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

494 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

495 
size_t
 
__d°Àn
Ë
__THROW
;

496 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

497 (*
__ª°ri˘
 
__d°
,

498 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

499 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

500 
wc§tombs
);

501 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

502 (*
__ª°ri˘
 
__d°
,

503 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

504 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

505 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

506 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

508 
__exã∫_Æways_ölöe
 
size_t


509 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

510 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

512 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

514 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

515  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

517 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

518  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

520  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

521 
	}
}

524 #ifde‡
__USE_GNU


525 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

526 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

527 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

528 
size_t
 
__d°Àn
Ë
__THROW
;

529 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

530 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

531 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

532 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

533 
mb¢πowcs
);

534 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

535 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

536 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

537 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

538 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

539 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

542 
__exã∫_Æways_ölöe
 
size_t


543 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

544 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

546 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

548 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

549  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

553  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

554 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

556  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

557 
	}
}

560 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

561 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

562 
size_t
 
__nwc
, size_à
__Àn
,

563 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

564 
__THROW
;

565 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

566 (*
__ª°ri˘
 
__d°
,

567 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

568 
size_t
 
__nwc
, size_à
__Àn
,

569 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

570 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

571 (*
__ª°ri˘
 
__d°
,

572 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

573 
size_t
 
__nwc
, size_à
__Àn
,

574 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

575 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

576 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

578 
__exã∫_Æways_ölöe
 
size_t


579 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

580 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

582 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

584 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

585  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

589  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

590 
	`__bos
 (
__d°
));

592  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

593 
	}
}

	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/gnu/option-groups.h

10 #i‚de‡
__GNU_OPTION_GROUPS_H


11 
	#__GNU_OPTION_GROUPS_H


	)

13 
	#__OPTION_EGLIBC_ADVANCED_INET6
 1

	)

14 
	#__OPTION_EGLIBC_BACKTRACE
 1

	)

15 
	#__OPTION_EGLIBC_BIG_MACROS
 1

	)

16 
	#__OPTION_EGLIBC_BSD
 1

	)

17 
	#__OPTION_EGLIBC_CATGETS
 1

	)

18 
	#__OPTION_EGLIBC_CHARSETS
 1

	)

19 
	#__OPTION_EGLIBC_CRYPT
 1

	)

20 
	#__OPTION_EGLIBC_CRYPT_UFC
 1

	)

21 
	#__OPTION_EGLIBC_CXX_TESTS
 1

	)

22 
	#__OPTION_EGLIBC_DB_ALIASES
 1

	)

23 
	#__OPTION_EGLIBC_ENVZ
 1

	)

24 
	#__OPTION_EGLIBC_FCVT
 1

	)

25 
	#__OPTION_EGLIBC_FMTMSG
 1

	)

26 
	#__OPTION_EGLIBC_FSTAB
 1

	)

27 
	#__OPTION_EGLIBC_FTRAVERSE
 1

	)

28 
	#__OPTION_EGLIBC_GETLOGIN
 1

	)

29 
	#__OPTION_EGLIBC_IDN
 1

	)

30 
	#__OPTION_EGLIBC_INET
 1

	)

31 
	#__OPTION_EGLIBC_INET_ANL
 1

	)

32 
	#__OPTION_EGLIBC_LIBM
 1

	)

33 
	#__OPTION_EGLIBC_LIBM_BIG
 1

	)

34 
	#__OPTION_EGLIBC_LOCALES
 1

	)

35 
	#__OPTION_EGLIBC_LOCALE_CODE
 1

	)

36 
	#__OPTION_EGLIBC_MEMUSAGE
 1

	)

37 
	#__OPTION_EGLIBC_NIS
 1

	)

38 
	#__OPTION_EGLIBC_NSSWITCH
 1

	)

39 
	#__OPTION_EGLIBC_RCMD
 1

	)

40 
	#__OPTION_EGLIBC_RTLD_DEBUG
 1

	)

41 
	#__OPTION_EGLIBC_SPAWN
 1

	)

42 
	#__OPTION_EGLIBC_STREAMS
 1

	)

43 
	#__OPTION_EGLIBC_SUNRPC
 1

	)

44 
	#__OPTION_EGLIBC_UTMP
 1

	)

45 
	#__OPTION_EGLIBC_UTMPX
 1

	)

46 
	#__OPTION_EGLIBC_WORDEXP
 1

	)

47 
	#__OPTION_POSIX_C_LANG_WIDE_CHAR
 1

	)

48 
	#__OPTION_POSIX_REGEXP
 1

	)

49 
	#__OPTION_POSIX_REGEXP_GLIBC
 1

	)

50 
	#__OPTION_POSIX_WIDE_CHAR_DEVICE_IO
 1

	)

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	~<bôs/±hªadty≥s.h
>

29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/w‹dsize.h
>

36 
	mPTHREAD_CREATE_JOINABLE
,

37 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

38 
	mPTHREAD_CREATE_DETACHED


39 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

46 
	mPTHREAD_MUTEX_TIMED_NP
,

47 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

48 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

49 
	mPTHREAD_MUTEX_ADAPTIVE_NP


50 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


52 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

53 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

54 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

55 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


57 #ifde‡
__USE_GNU


59 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


64 #ifde‡
__USE_XOPEN2K


68 
	mPTHREAD_MUTEX_STALLED
,

69 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

70 
	mPTHREAD_MUTEX_ROBUST
,

71 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_GNU


430 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

431 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

435 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, 
__c⁄°
 *
__«me
)

436 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 #ifde‡
__USE_UNIX98


442 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

445 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

448 #ifde‡
__USE_GNU


453 
	$±hªad_yõld
 (Ë
__THROW
;

458 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

459 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

460 
__THROW
 
	`__n⁄nuŒ
 ((3));

463 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

464 
˝u_£t_t
 *
__˝u£t
)

465 
__THROW
 
	`__n⁄nuŒ
 ((3));

478 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

479 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

490 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

494 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

497 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

502 
	`±hªad_ã°ˇn˚l
 ();

511 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

512 
__mask_was_ßved
;

513 } 
__ˇn˚l_jmp_buf
[1];

514 *
__∑d
[4];

515 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

518 #i‚de‡
__˛ónup_f˘_©åibuã


519 
	#__˛ónup_f˘_©åibuã


	)

524 
	s__±hªad_˛ónup_‰ame


526 (*
__ˇn˚l_routöe
) (*);

527 *
__ˇn˚l_¨g
;

528 
__do_ô
;

529 
__ˇn˚l_ty≥
;

532 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


533 #ifde‡
__˝lu•lus


535 ˛as†
	c__±hªad_˛ónup_˛ass


537 (*
__ˇn˚l_routöe
) (*);

538 *
__ˇn˚l_¨g
;

539 
__do_ô
;

540 
__ˇn˚l_ty≥
;

542 
public
:

543 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

544 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

545 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

546 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

547 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

548 &
__ˇn˚l_ty≥
); 
	}
}

549 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

559 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

561 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

565 
	#±hªad_˛ónup_p›
(
execuã
) \

566 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

567 } 0)

	)

569 #ifde‡
__USE_GNU


573 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

575 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

576 
__˛‰ame
.
	`__de„r
 ()

	)

581 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

582 
__˛‰ame
.
	`__ª°‹e
 (); \

583 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

584 } 0)

	)

591 
__exã∫_ölöe
 

592 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

594 i‡(
__‰ame
->
__do_ô
)

595 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

596 
	}
}

605 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

607 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

608 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

609 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

610 .
__do_ô
 = 1 };

	)

614 
	#±hªad_˛ónup_p›
(
execuã
) \

615 
__˛‰ame
.
__do_ô
 = (
execuã
); \

616 } 0)

	)

618 #ifde‡
__USE_GNU


622 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

624 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

625 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

626 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

627 .
__do_ô
 = 1 }; \

628 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

629 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

634 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

636 
__˛‰ame
.
__do_ô
 = (
execuã
); \

637 } 0)

	)

648 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

650 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

651 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

652 *
__ˇn˚l_¨g
 = (
¨g
); \

653 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

654 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

655 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

657 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

658 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

662 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 dÿ{

	)

664 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

665 
__˛ónup_f˘_©åibuã
;

669 
	#±hªad_˛ónup_p›
(
execuã
) \

672 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

673 i‡(
execuã
) \

674 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

675 } 0)

	)

676 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

677 
__˛ónup_f˘_©åibuã
;

679 #ifde‡
__USE_GNU


683 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

685 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

686 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

687 *
__ˇn˚l_¨g
 = (
¨g
); \

688 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

689 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

690 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

692 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

693 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

697 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

698 dÿ{

	)

699 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

700 
__˛ónup_f˘_©åibuã
;

705 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

708 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

709 i‡(
execuã
) \

710 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

711 
	}
} 0)

	)

712 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

713 
__˛ónup_f˘_©åibuã
;

717 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

718 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

719 #i‚de‡
SHARED


720 
	`__©åibuã__
 ((
__wók__
))

726 
__jmp_buf_èg
;

727 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

733 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

734 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

735 
__THROW
 
	`__n⁄nuŒ
 ((1));

738 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

739 
__THROW
 
	`__n⁄nuŒ
 ((1));

742 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

743 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

746 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

747 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

749 #ifde‡
__USE_XOPEN2K


751 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

752 
__c⁄°
 
time•ec
 *
__ª°ri˘


753 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

757 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

758 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

763 
__ª°ri˘
 
__muãx
,

764 *
__ª°ri˘
 
__¥io˚ûög
)

765 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

769 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

770 
__¥io˚ûög
,

771 *
__ª°ri˘
 
__ﬁd_˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

775 #ifde‡
__USE_XOPEN2K8


777 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

778 
__THROW
 
	`__n⁄nuŒ
 ((1));

779 #ifde‡
__USE_GNU


780 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1));

794 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

795 
__THROW
 
	`__n⁄nuŒ
 ((1));

798 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

799 
__ª°ri˘
 
__©å
,

800 *
__ª°ri˘
 
__psh¨ed
)

801 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

804 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

805 
__psh¨ed
)

806 
__THROW
 
	`__n⁄nuŒ
 ((1));

808 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


810 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


811 
__©å
, *
__ª°ri˘
 
__köd
)

812 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

817 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

822 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

823 
__ª°ri˘
 
__©å
,

824 *
__ª°ri˘
 
__¥Ÿocﬁ
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

829 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

830 
__¥Ÿocﬁ
)

831 
__THROW
 
	`__n⁄nuŒ
 ((1));

834 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

835 
__ª°ri˘
 
__©å
,

836 *
__ª°ri˘
 
__¥io˚ûög
)

837 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

840 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

841 
__¥io˚ûög
)

842 
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_XOPEN2K


846 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

847 *
__robu°√ss
)

848 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

849 #ifde‡
__USE_GNU


850 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

851 *
__robu°√ss
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__robu°√ss
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #ifde‡
__USE_GNU


860 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

861 
__robu°√ss
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1));

867 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


872 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

873 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


874 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

881 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

882 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

885 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

886 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

888 #ifde‡
__USE_XOPEN2K


890 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

891 
__c⁄°
 
time•ec
 *
__ª°ri˘


892 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

896 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

897 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

900 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

901 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

903 #ifde‡
__USE_XOPEN2K


905 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

906 
__c⁄°
 
time•ec
 *
__ª°ri˘


907 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

911 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

912 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

922 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1));

926 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

927 
__ª°ri˘
 
__©å
,

928 *
__ª°ri˘
 
__psh¨ed
)

929 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

932 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

933 
__psh¨ed
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

938 
__ª°ri˘
 
__©å
,

939 *
__ª°ri˘
 
__¥ef
)

940 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

943 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

944 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

952 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

953 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


954 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

961 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

962 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

966 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

974 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

975 
	`__n⁄nuŒ
 ((1, 2));

984 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

985 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

986 
__c⁄°
 
time•ec
 *
__ª°ri˘


987 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

992 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

993 
__THROW
 
	`__n⁄nuŒ
 ((1));

996 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1001 
__ª°ri˘
 
__©å
,

1002 *
__ª°ri˘
 
__psh¨ed
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1006 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1007 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1009 #ifde‡
__USE_XOPEN2K


1011 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1012 
__ª°ri˘
 
__©å
,

1013 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1017 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1018 
__˛ockid_t
 
__˛ock_id
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 #ifde‡
__USE_XOPEN2K


1028 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1040 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1041 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1045 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1053 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1054 
__©å
, 
__cou¡
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1058 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1059 
__THROW
 
	`__n⁄nuŒ
 ((1));

1062 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1063 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1068 
__THROW
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1072 
__THROW
 
	`__n⁄nuŒ
 ((1));

1075 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1076 
__ª°ri˘
 
__©å
,

1077 *
__ª°ri˘
 
__psh¨ed
)

1078 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1081 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1082 
__psh¨ed
)

1083 
__THROW
 
	`__n⁄nuŒ
 ((1));

1095 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1096 (*
__de°r_fun˘i⁄
) (*))

1097 
__THROW
 
	`__n⁄nuŒ
 ((1));

1100 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1103 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1106 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1107 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1110 #ifde‡
__USE_XOPEN2K


1112 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1113 
__˛ockid_t
 *
__˛ock_id
)

1114 
__THROW
 
	`__n⁄nuŒ
 ((2));

1129 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1130 (*
__∑ª¡
) (),

1131 (*
__chûd
Ë()Ë
__THROW
;

1134 #ifde‡
__USE_EXTERN_INLINES


1136 
__exã∫_ölöe
 

1137 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1139  
__thªad1
 =
__thªad2
;

1140 
	}
}

1143 
	g__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
ERFKILL


42 
	#ERFKILL
 132

	)

45 #i‚de‡
__ASSEMBLER__


47 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

49 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


51 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

56 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


60 
	#EDOM
 33

	)

61 
	#EILSEQ
 84

	)

62 
	#ERANGE
 34

	)

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/sched.h

21 #i‚def 
_SCHED_H


22 
	#_SCHED_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

32 
	#__√ed_time_t


	)

33 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

35 
	#SCHED_IDLE
 5

	)

37 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

40 #ifde‡
__USE_GNU


42 
	#CSIGNAL
 0x000000f‡

	)

43 
	#CLONE_VM
 0x00000100

	)

44 
	#CLONE_FS
 0x00000200

	)

45 
	#CLONE_FILES
 0x00000400

	)

46 
	#CLONE_SIGHAND
 0x00000800

	)

47 
	#CLONE_PTRACE
 0x00002000

	)

48 
	#CLONE_VFORK
 0x00004000

	)

50 
	#CLONE_PARENT
 0x00008000

	)

52 
	#CLONE_THREAD
 0x00010000

	)

53 
	#CLONE_NEWNS
 0x00020000

	)

54 
	#CLONE_SYSVSEM
 0x00040000

	)

55 
	#CLONE_SETTLS
 0x00080000

	)

56 
	#CLONE_PARENT_SETTID
 0x00100000

	)

58 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

60 
	#CLONE_DETACHED
 0x00400000

	)

61 
	#CLONE_UNTRACED
 0x00800000

	)

63 
	#CLONE_CHILD_SETTID
 0x01000000

	)

65 
	#CLONE_NEWUTS
 0x04000000

	)

66 
	#CLONE_NEWIPC
 0x08000000

	)

67 
	#CLONE_NEWUSER
 0x10000000

	)

68 
	#CLONE_NEWPID
 0x20000000

	)

69 
	#CLONE_NEWNET
 0x40000000

	)

70 
	#CLONE_IO
 0x80000000

	)

74 
	ssched_∑øm


76 
	m__sched_¥i‹ôy
;

79 
	g__BEGIN_DECLS


81 #ifde‡
__USE_GNU


83 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

84 
__Êags
, *
__¨g
, ...Ë
__THROW
;

87 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

90 
	$sched_gë˝u
 (Ë
__THROW
;

93 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

97 
__END_DECLS


101 #i‡!
deföed
 
__deföed_sched∑øm
 \

102 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

103 
	#__deföed_sched∑øm
 1

	)

105 
	s__sched_∑øm


107 
__sched_¥i‹ôy
;

109 #unde‡
__√ed_sched∑øm


113 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


114 
	#__˝u_£t_t_deföed


	)

116 
	#__CPU_SETSIZE
 1024

	)

117 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

120 
	t__˝u_mask
;

123 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

124 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

129 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

130 } 
	t˝u_£t_t
;

133 #i‡
	`__GNUC_PREREQ
 (2, 91)

134 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

135 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

137 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

139 
size_t
 
__i
; \

140 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

141 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

142 
__i
 = 0; __ò< 
__imax
; ++__i) \

143 
__bôs
[
__i
] = 0; \

144 
	}
} 0)

	)

146 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

147 (
__exãnsi⁄__
 \

148 ({ 
size_t
 
__˝u
 = (
˝u
); \

149 
__˝u
 < 8 * (
£tsize
) \

150 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

151 |
	`__CPUMASK
 (
__˝u
)) \

152 : 0; }))

	)

153 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

154 (
__exãnsi⁄__
 \

155 ({ 
size_t
 
__˝u
 = (
˝u
); \

156 
__˝u
 < 8 * (
£tsize
) \

157 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

158 &~
	`__CPUMASK
 (
__˝u
)) \

159 : 0; }))

	)

160 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

161 (
__exãnsi⁄__
 \

162 ({ 
size_t
 
__˝u
 = (
˝u
); \

163 
__˝u
 < 8 * (
£tsize
) \

164 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

165 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

166 : 0; }))

	)

168 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

169 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

171 #i‡
__GNUC_PREREQ
 (2, 91)

172 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

173 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

175 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

176 (
__exãnsi⁄__
 \

177 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

178 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

179 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

180 
size_t
 
__i
; \

181 
__i
 = 0; __ò< 
__imax
; ++__i) \

182 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

184 
__i
 =
__imax
; }))

	)

187 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

188 (
__exãnsi⁄__
 \

189 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

190 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

191 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

192 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

193 
size_t
 
__i
; \

194 
__i
 = 0; __ò< 
__imax
; ++__i) \

195 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

196 
__de°
; }))

	)

198 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

199 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

200 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

201 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

203 
__BEGIN_DECLS


205 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

206 
__THROW
;

207 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

208 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

210 
__END_DECLS


	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

111 
	#EHWPOISON
 133

	)

	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@
1
.
1
/usr/include
195
4492
conf/aleph_board.h
conf/conf_access.h
conf/conf_clock.h
conf/conf_ebi.h
conf/conf_explorer.h
conf/conf_sd_mmc_spi.h
conf/conf_tc_irq.h
conf/conf_usb_host.h
conf/smc_peripheral.h
src/adc.c
src/adc.h
src/app.c
src/app.h
src/bfin.c
src/bfin.h
src/control.c
src/control.h
src/dummy.h
src/encoders.c
src/encoders.h
src/event_types.h
src/events.c
src/events.h
src/fat_io_lib/example.c
src/fat_io_lib/fat_access.c
src/fat_io_lib/fat_access.h
src/fat_io_lib/fat_cache.c
src/fat_io_lib/fat_cache.h
src/fat_io_lib/fat_defs.h
src/fat_io_lib/fat_filelib.c
src/fat_io_lib/fat_filelib.h
src/fat_io_lib/fat_format.c
src/fat_io_lib/fat_format.h
src/fat_io_lib/fat_list.h
src/fat_io_lib/fat_misc.c
src/fat_io_lib/fat_misc.h
src/fat_io_lib/fat_opts.h
src/fat_io_lib/fat_string.c
src/fat_io_lib/fat_string.h
src/fat_io_lib/fat_table.c
src/fat_io_lib/fat_table.h
src/fat_io_lib/fat_types.h
src/fat_io_lib/fat_write.c
src/fat_io_lib/fat_write.h
src/files.c
src/files.h
src/filesystem.c
src/filesystem.h
src/flash.c
src/flash.h
src/font.c
src/font.h
src/global.h
src/i2c.c
src/i2c.h
src/init.c
src/init.h
src/interrupts.c
src/interrupts.h
src/ls_fragment.c
src/main.c
src/memory.c
src/memory.h
src/monome.c
src/monome.h
src/mt48lc16m16a2tg75.h
src/mt48lc16m16a2tg7e.h
src/screen.c
src/screen.h
src/sdram_test_fragment.c
src/simple_string.c
src/simple_string.h
src/switches.c
src/switches.h
src/sys_timers.c
src/sys_timers.h
src/timers.c
src/timers.h
src/usb.c
src/usb.h
src/usb/ftdi/ftdi.c
src/usb/ftdi/ftdi.h
src/usb/ftdi/uhi_ftdi.c
src/usb/ftdi/uhi_ftdi.h
src/usb/ftdi/usb_protocol_ftdi.h
src/usb/gamepad/hid_gamepad.c
src/usb/gamepad/hid_gamepad.h
src/usb/gamepad/uhi_hid_gamepad.c
src/usb/gamepad/uhi_hid_gamepad.h
src/usb/midi/midi.c
src/usb/midi/midi.h
src/usb/midi/uhi_midi.c
src/usb/midi/uhi_midi.h
src/usb/midi/usb_protocol_midi.h
src/usb/mouse/hid_mouse.c
src/usb/mouse/hid_mouse.h
src/usb/mouse/uhi_hid_mouse.c
src/usb/mouse/uhi_hid_mouse.h
src/util.h
startup/trampoline.h
/usr/include/assert.h
/usr/include/ftdi.h
/usr/include/math.h
/usr/include/memory.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/usb.h
/usr/include/alloca.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/inf.h
/usr/include/bits/math-finite.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/nan.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/types.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/dirent.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/limits.h
/usr/include/stdint.h
/usr/include/sys/param.h
/usr/include/sys/types.h
/usr/include/unistd.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/bits/confname.h
/usr/include/bits/dirent.h
/usr/include/bits/environments.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/predefs.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/bits/unistd.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/ctype.h
/usr/include/endian.h
/usr/include/gnu/stubs.h
/usr/include/linux/limits.h
/usr/include/linux/param.h
/usr/include/sys/cdefs.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/time.h
/usr/include/asm/param.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/libc-lock.h
/usr/include/bits/local_lim.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/sigset.h
/usr/include/bits/time.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/wchar.h
/usr/include/asm-generic/param.h
/usr/include/bits/timex.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/errno.h
/usr/include/gnu/option-groups.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/bits/errno.h
/usr/include/bits/setjmp.h
/usr/include/sched.h
/usr/include/bits/sched.h
/usr/include/linux/errno.h
/usr/include/asm/errno.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/errno-base.h
